{
	"id": "3d70a33afd7728c86308545fb134bcbb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Arbitrage.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6; //0x33f4f8bf90d8AA3d19fF812B50e79c15Df0d0b03\nimport \"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\";\nimport \"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\n\n//unswap router v3 0x65669fe35312947050c450bd5d36e6361f85ec12 sepolia\naddress constant routerV3 = 0xE592427A0AEce92De3Edee1F18E0157C05861564;\naddress constant adrSWAP_ROUTER_02 = 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45;\naddress constant adrWETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\naddress constant adrDAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\naddress constant adrUSDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\naddress constant adrcurvePool = 0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B;\ncontract arbitrage{\n    address admin;\n    constructor() {\n        admin = msg.sender;\n    }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin can call this function.\");\n        _;\n    }\n    function exactueArbitrage(uint256 amountInUSDC)external onlyAdmin returns(uint256 profit) {\n        require(USDC.balanceOf(address(this))>= amountInUSDC,\"USDC balanceOf not enough\");\n        uint256 amountOutWETH;\n        uint256 amountOutUSDC;\n    // get price from uniswap\n        uint256 ethAmountFromUniswap = this.getAmountOutUniswapV3(amountOutUSDC);\n        uint256 ethAmountFromCrve = this.getAmountOutCurve(amountInUSDC);\n    // get price from curve\n        if(ethAmountFromUniswap > ethAmountFromCrve){\n            amountOutWETH = this.buyWETHOnUniswap(amountInUSDC);\n            amountOutUSDC = this.sellWETHOnCurve(amountOutWETH);\n        }else{\n            amountOutWETH = this.buyWETHOnCurve(amountInUSDC);\n            amountOutUSDC = this.sellWETHOnUniswap(amountOutWETH);\n\n        }\n        require(amountOutUSDC>amountInUSDC, \"Arbitrage profit <=0\");\n\n    //compare\n\n    // buy\n        profit = amountOutUSDC - amountInUSDC;\n    }\n\n    //func getPrice from uniswap\n\n\n    IWETH private constant WETH = IWETH(adrWETH);\n    IWETH private constant USDC = IWETH(adrUSDC);\n    UniswapV3Router private constant uniswapV3Router = UniswapV3Router(routerV3);\n    IUniswapV3Factory private constant uniswapV3Factory = IUniswapV3Factory(0x1F98431c8aD98523631AE4a59f267346ea31F984);\n    function depositWETH()external payable {\n        WETH.deposit{value:msg.value}();\n\n    }\n    \n    function swapExactInputSingleHop(\n        address tokenIn,\n        address tokenOut,\n        uint24 poolFee,\n        uint256 amountIn\n    )internal returns (uint256 amountOut){\n\n    IERC20(tokenIn).approve(address(uniswapV3Router),amountIn);\n\n    ISwapRouter.ExactInputSingleParams memory params =\n        ISwapRouter.ExactInputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n        });\n\n    amountOut = uniswapV3Router.exactInputSingle(params);\n\n    }\n    function sellWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){\n        require(WETH.balanceOf(address(this))>= amountIn,\"WETH balsenceOF not enough\");\n        amountOut = swapExactInputSingleHop(address(WETH), address(USDC),3000 , amountIn);\n    }\n    function buyWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){\n        require(USDC.balanceOf(address(this))>= amountIn,\"USDC balsenceOF not enough\");\n        amountOut = swapExactInputSingleHop(address(USDC), address(WETH),3000 , amountIn);\n    }\n\n\n\n    function getAmountOutUniswapV3(uint256 amoutIn)external  view returns (uint256 amoutOut){\n        address poolAddress = uniswapV3Factory.getPool(address(USDC),address(WETH),3000);\n        IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\n        (uint160 sqrtPriceX96,,,,,,) = pool.slot0();\n        uint256 price = uint256(sqrtPriceX96)* uint256(sqrtPriceX96) / (1<<192);\n        amoutOut = amoutIn * price;\n    }\n\n\n    // curve\n    ICryptoPool private constant curvePool = ICryptoPool(0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B);\n    function getCoinsFromCurvePool(uint256 index)external view returns(address){\n        return curvePool.coins(index);\n    }\n    function buyWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){\n        require(USDC.balanceOf(address(this))>= amountIn,\"USDC balanceOf not enough\");\n        IERC20(address(USDC)).approve(address(curvePool),amountIn);\n        amountOut = curvePool.exchange(0,2,amountIn,1);\n    }\n    function sellWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){\n        require(USDC.balanceOf(address(this))>= amountIn,\"WETH balanceOf not enough\");\n        IERC20(address(WETH)).approve(address(curvePool),amountIn);\n        amountOut = curvePool.exchange(2,0,amountIn,1);\n    }\n    function getAmountOutCurve(uint256 amountIn) external view returns (uint256 amoutOut){\n        amoutOut = curvePool.get_dy(0,2,amountIn);\n\n    }\n}\n\ninterface IWETH is IERC20{\n    function deposit()external payable ;\n    function withdraw(uint256 amount) external;\n}\ninterface UniswapV3Router is ISwapRouter {\n}\ninterface IUniswapV3Pool{\n    function slot0(\n  ) external view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked);\n}\ninterface IUniswapV3Factory{\n    function getPool(\n    address tokenA,\n    address tokenB,\n    uint24 fee\n  ) external view returns (address pool);\n}\ninterface ICryptoPool{\n    function balances(uint256) external view returns (uint256);\n\n    function price_oracle(uint256) external view returns (uint256);\n\n    // Some crypto pools only consist of 2 coins, one of which is usd so\n    // it can be assumed that the price oracle doesn't need an argument\n    // and the price of the oracle refers to the other coin.\n    // This function is mutually exclusive with the price_oracle function that takes\n    // an argument of the index of the coin, only one will be present on the pool\n    function price_oracle() external view returns (uint256);\n\n    function coins(uint256) external view returns (address);\n    function exchange(uint256 i, uint256 j, uint256 dx, uint256 min_dy)external returns (uint256);\n    function get_dy(uint256 i, uint256 j, uint256 amount)external view returns(uint256);\n\n}\n\n\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Quoter Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\ninterface IQuoter {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    function quoteExactInput(bytes memory path, uint256 amountIn) external returns (uint256 amountOut);\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param fee The fee of the token pool to consider for the pair\n    /// @param amountIn The desired input amount\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    function quoteExactInputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountIn,\n        uint160 sqrtPriceLimitX96\n    ) external returns (uint256 amountOut);\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    function quoteExactOutput(bytes memory path, uint256 amountOut) external returns (uint256 amountIn);\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param fee The fee of the token pool to consider for the pair\n    /// @param amountOut The desired output amount\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    function quoteExactOutputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountOut,\n        uint160 sqrtPriceLimitX96\n    ) external returns (uint256 amountIn);\n}\n"
			},
			"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"Arbitrage.sol": {
				"ICryptoPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "coins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "j",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dx",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "min_dy",
									"type": "uint256"
								}
							],
							"name": "exchange",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "j",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "get_dy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "price_oracle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price_oracle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balances(uint256)": "4903b0d1",
							"coins(uint256)": "c6610657",
							"exchange(uint256,uint256,uint256,uint256)": "5b41b908",
							"get_dy(uint256,uint256,uint256)": "556d6e9f",
							"price_oracle()": "86fc88d3",
							"price_oracle(uint256)": "68727653"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"j\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min_dy\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"j\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"get_dy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"price_oracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price_oracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage.sol\":\"ICryptoPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"Arbitrage.sol\":{\"keccak256\":\"0x4221a11e2b5b2e022e391a8aebfab24e2ebb44fd1d17215d8e214eadd02ce83b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ccdcbb34d58929d31f1b5757626752aed951e7fe268971b23635f27c6412c37\",\"dweb:/ipfs/QmWRmNt6D2Bdd8mMVo1qRfobv5eJMXXCVVbtwwb4M2skU2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPool(address,address,uint24)": "1698ee82"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"Arbitrage.sol\":{\"keccak256\":\"0x4221a11e2b5b2e022e391a8aebfab24e2ebb44fd1d17215d8e214eadd02ce83b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ccdcbb34d58929d31f1b5757626752aed951e7fe268971b23635f27c6412c37\",\"dweb:/ipfs/QmWRmNt6D2Bdd8mMVo1qRfobv5eJMXXCVVbtwwb4M2skU2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"slot0()": "3850c7bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"Arbitrage.sol\":{\"keccak256\":\"0x4221a11e2b5b2e022e391a8aebfab24e2ebb44fd1d17215d8e214eadd02ce83b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ccdcbb34d58929d31f1b5757626752aed951e7fe268971b23635f27c6412c37\",\"dweb:/ipfs/QmWRmNt6D2Bdd8mMVo1qRfobv5eJMXXCVVbtwwb4M2skU2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage.sol\":\"IWETH\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"Arbitrage.sol\":{\"keccak256\":\"0x4221a11e2b5b2e022e391a8aebfab24e2ebb44fd1d17215d8e214eadd02ce83b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ccdcbb34d58929d31f1b5757626752aed951e7fe268971b23635f27c6412c37\",\"dweb:/ipfs/QmWRmNt6D2Bdd8mMVo1qRfobv5eJMXXCVVbtwwb4M2skU2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UniswapV3Router": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage.sol\":\"UniswapV3Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"Arbitrage.sol\":{\"keccak256\":\"0x4221a11e2b5b2e022e391a8aebfab24e2ebb44fd1d17215d8e214eadd02ce83b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ccdcbb34d58929d31f1b5757626752aed951e7fe268971b23635f27c6412c37\",\"dweb:/ipfs/QmWRmNt6D2Bdd8mMVo1qRfobv5eJMXXCVVbtwwb4M2skU2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"version": 1
					}
				},
				"arbitrage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "buyWETHOnCurve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "buyWETHOnUniswap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositWETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInUSDC",
									"type": "uint256"
								}
							],
							"name": "exactueArbitrage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "profit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "getAmountOutCurve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amoutOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amoutIn",
									"type": "uint256"
								}
							],
							"name": "getAmountOutUniswapV3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amoutOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getCoinsFromCurvePool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "sellWETHOnCurve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "sellWETHOnUniswap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arbitrage.sol\":928:5245  contract arbitrage{... */\n  mstore(0x40, 0x80)\n    /* \"Arbitrage.sol\":971:1020  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Arbitrage.sol\":1003:1013  msg.sender */\n  caller\n    /* \"Arbitrage.sol\":995:1000  admin */\n  0x00\n  dup1\n    /* \"Arbitrage.sol\":995:1013  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Arbitrage.sol\":928:5245  contract arbitrage{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arbitrage.sol\":928:5245  contract arbitrage{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64084ac0\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x64084ac0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x793c0845\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x926446db\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbbceefe3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xcc9901aa\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_11:\n      dup1\n      0x064a8a8a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1de3df2c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3eb61c1c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x54258cc4\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Arbitrage.sol\":3532:3806  function buyWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":2437:2525  function depositWETH()external payable {... */\n    tag_3:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Arbitrage.sol\":5099:5243  function getAmountOutCurve(uint256 amountIn) external view returns (uint256 amoutOut){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":3252:3527  function sellWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":4350:4471  function getCoinsFromCurvePool(uint256 index)external view returns(address){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":4476:4782  function buyWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":1146:2093  function exactueArbitrage(uint256 amountInUSDC)external onlyAdmin returns(uint256 profit) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":3814:4228  function getAmountOutUniswapV3(uint256 amoutIn)external  view returns (uint256 amoutOut){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":4787:5094  function sellWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage.sol\":3532:3806  function buyWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){... */\n    tag_16:\n        /* \"Arbitrage.sol\":3602:3619  uint256 amountOut */\n      0x00\n        /* \"Arbitrage.sol\":1079:1084  admin */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1075  msg.sender */\n      caller\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Arbitrage.sol\":1057:1123  require(msg.sender == admin, \"Only admin can call this function.\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"Arbitrage.sol\":3670:3678  amountIn */\n      dup2\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":3638:3652  USDC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Arbitrage.sol\":3661:3665  this */\n      address\n        /* \"Arbitrage.sol\":3638:3667  USDC.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"Arbitrage.sol\":3638:3678  USDC.balanceOf(address(this))>= amountIn */\n      lt\n      iszero\n        /* \"Arbitrage.sol\":3630:3708  require(USDC.balanceOf(address(this))>= amountIn,\"USDC balsenceOF not enough\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"Arbitrage.sol\":3730:3799  swapExactInputSingleHop(address(USDC), address(WETH),3000 , amountIn) */\n      tag_70\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":667:709  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage.sol\":3783:3787  3000 */\n      0x0bb8\n        /* \"Arbitrage.sol\":3790:3798  amountIn */\n      dup6\n        /* \"Arbitrage.sol\":3730:3753  swapExactInputSingleHop */\n      tag_71\n        /* \"Arbitrage.sol\":3730:3799  swapExactInputSingleHop(address(USDC), address(WETH),3000 , amountIn) */\n      jump\t// in\n    tag_70:\n        /* \"Arbitrage.sol\":3718:3799  amountOut = swapExactInputSingleHop(address(USDC), address(WETH),3000 , amountIn) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":3532:3806  function buyWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":2437:2525  function depositWETH()external payable {... */\n    tag_20:\n        /* \"Arbitrage.sol\":667:709  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage.sol\":2486:2498  WETH.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"Arbitrage.sol\":2505:2514  msg.value */\n      callvalue\n        /* \"Arbitrage.sol\":2486:2517  WETH.deposit{value:msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Arbitrage.sol\":2437:2525  function depositWETH()external payable {... */\n      jump\t// out\n        /* \"Arbitrage.sol\":5099:5243  function getAmountOutCurve(uint256 amountIn) external view returns (uint256 amoutOut){... */\n    tag_24:\n        /* \"Arbitrage.sol\":5167:5183  uint256 amoutOut */\n      0x00\n        /* \"Arbitrage.sol\":4301:4343  0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B */\n      0x7f86bf177dd4f3494b841a37e810a34dd56c829b\n        /* \"Arbitrage.sol\":5205:5221  curvePool.get_dy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x556d6e9f\n        /* \"Arbitrage.sol\":5222:5223  0 */\n      0x00\n        /* \"Arbitrage.sol\":5224:5225  2 */\n      0x02\n        /* \"Arbitrage.sol\":5226:5234  amountIn */\n      dup6\n        /* \"Arbitrage.sol\":5205:5235  curvePool.get_dy(0,2,amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_81:\n        /* \"Arbitrage.sol\":5194:5235  amoutOut = curvePool.get_dy(0,2,amountIn) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":5099:5243  function getAmountOutCurve(uint256 amountIn) external view returns (uint256 amoutOut){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":3252:3527  function sellWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){... */\n    tag_29:\n        /* \"Arbitrage.sol\":3323:3340  uint256 amountOut */\n      0x00\n        /* \"Arbitrage.sol\":1079:1084  admin */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1075  msg.sender */\n      caller\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Arbitrage.sol\":1057:1123  require(msg.sender == admin, \"Only admin can call this function.\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_60\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"Arbitrage.sol\":3391:3399  amountIn */\n      dup2\n        /* \"Arbitrage.sol\":667:709  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage.sol\":3359:3373  WETH.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Arbitrage.sol\":3382:3386  this */\n      address\n        /* \"Arbitrage.sol\":3359:3388  WETH.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_89:\n        /* \"Arbitrage.sol\":3359:3399  WETH.balanceOf(address(this))>= amountIn */\n      lt\n      iszero\n        /* \"Arbitrage.sol\":3351:3429  require(WETH.balanceOf(address(this))>= amountIn,\"WETH balsenceOF not enough\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"Arbitrage.sol\":3451:3520  swapExactInputSingleHop(address(WETH), address(USDC),3000 , amountIn) */\n      tag_93\n        /* \"Arbitrage.sol\":667:709  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":3504:3508  3000 */\n      0x0bb8\n        /* \"Arbitrage.sol\":3511:3519  amountIn */\n      dup6\n        /* \"Arbitrage.sol\":3451:3474  swapExactInputSingleHop */\n      tag_71\n        /* \"Arbitrage.sol\":3451:3520  swapExactInputSingleHop(address(WETH), address(USDC),3000 , amountIn) */\n      jump\t// in\n    tag_93:\n        /* \"Arbitrage.sol\":3439:3520  amountOut = swapExactInputSingleHop(address(WETH), address(USDC),3000 , amountIn) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":3252:3527  function sellWETHOnUniswap(uint256 amountIn)external onlyAdmin returns(uint256 amountOut){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":4350:4471  function getCoinsFromCurvePool(uint256 index)external view returns(address){... */\n    tag_34:\n        /* \"Arbitrage.sol\":4417:4424  address */\n      0x00\n        /* \"Arbitrage.sol\":4301:4343  0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B */\n      0x7f86bf177dd4f3494b841a37e810a34dd56c829b\n        /* \"Arbitrage.sol\":4442:4457  curvePool.coins */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc6610657\n        /* \"Arbitrage.sol\":4458:4463  index */\n      dup4\n        /* \"Arbitrage.sol\":4442:4464  curvePool.coins(index) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"Arbitrage.sol\":4435:4464  return curvePool.coins(index) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":4350:4471  function getCoinsFromCurvePool(uint256 index)external view returns(address){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":4476:4782  function buyWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){... */\n    tag_40:\n        /* \"Arbitrage.sol\":4546:4563  uint256 amountOut */\n      0x00\n        /* \"Arbitrage.sol\":1079:1084  admin */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1075  msg.sender */\n      caller\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Arbitrage.sol\":1057:1123  require(msg.sender == admin, \"Only admin can call this function.\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_60\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"Arbitrage.sol\":4614:4622  amountIn */\n      dup2\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":4582:4596  USDC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Arbitrage.sol\":4605:4609  this */\n      address\n        /* \"Arbitrage.sol\":4582:4611  USDC.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_107:\n        /* \"Arbitrage.sol\":4582:4622  USDC.balanceOf(address(this))>= amountIn */\n      lt\n      iszero\n        /* \"Arbitrage.sol\":4574:4651  require(USDC.balanceOf(address(this))>= amountIn,\"USDC balanceOf not enough\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":4661:4690  IERC20(address(USDC)).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Arbitrage.sol\":4301:4343  0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B */\n      0x7f86bf177dd4f3494b841a37e810a34dd56c829b\n        /* \"Arbitrage.sol\":4710:4718  amountIn */\n      dup5\n        /* \"Arbitrage.sol\":4661:4719  IERC20(address(USDC)).approve(address(curvePool),amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      pop\n        /* \"Arbitrage.sol\":4301:4343  0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B */\n      0x7f86bf177dd4f3494b841a37e810a34dd56c829b\n        /* \"Arbitrage.sol\":4741:4759  curvePool.exchange */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5b41b908\n        /* \"Arbitrage.sol\":4760:4761  0 */\n      0x00\n        /* \"Arbitrage.sol\":4762:4763  2 */\n      0x02\n        /* \"Arbitrage.sol\":4764:4772  amountIn */\n      dup6\n        /* \"Arbitrage.sol\":4773:4774  1 */\n      0x01\n        /* \"Arbitrage.sol\":4741:4775  curvePool.exchange(0,2,amountIn,1) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_121:\n        /* \"Arbitrage.sol\":4729:4775  amountOut = curvePool.exchange(0,2,amountIn,1) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":4476:4782  function buyWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":1146:2093  function exactueArbitrage(uint256 amountInUSDC)external onlyAdmin returns(uint256 profit) {... */\n    tag_45:\n        /* \"Arbitrage.sol\":1220:1234  uint256 profit */\n      0x00\n        /* \"Arbitrage.sol\":1079:1084  admin */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1075  msg.sender */\n      caller\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Arbitrage.sol\":1057:1123  require(msg.sender == admin, \"Only admin can call this function.\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_60\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"Arbitrage.sol\":1286:1298  amountInUSDC */\n      dup2\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":1254:1268  USDC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Arbitrage.sol\":1277:1281  this */\n      address\n        /* \"Arbitrage.sol\":1254:1283  USDC.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_126:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_129:\n        /* \"Arbitrage.sol\":1254:1298  USDC.balanceOf(address(this))>= amountInUSDC */\n      lt\n      iszero\n        /* \"Arbitrage.sol\":1246:1327  require(USDC.balanceOf(address(this))>= amountInUSDC,\"USDC balanceOf not enough\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_110\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"Arbitrage.sol\":1337:1358  uint256 amountOutWETH */\n      0x00\n        /* \"Arbitrage.sol\":1368:1389  uint256 amountOutUSDC */\n      dup1\n        /* \"Arbitrage.sol\":1429:1457  uint256 ethAmountFromUniswap */\n      0x00\n        /* \"Arbitrage.sol\":1460:1464  this */\n      address\n        /* \"Arbitrage.sol\":1460:1486  this.getAmountOutUniswapV3 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbbceefe3\n        /* \"Arbitrage.sol\":1487:1500  amountOutUSDC */\n      dup4\n        /* \"Arbitrage.sol\":1460:1501  this.getAmountOutUniswapV3(amountOutUSDC) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_135:\n        /* \"Arbitrage.sol\":1429:1501  uint256 ethAmountFromUniswap = this.getAmountOutUniswapV3(amountOutUSDC) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":1511:1536  uint256 ethAmountFromCrve */\n      0x00\n        /* \"Arbitrage.sol\":1539:1543  this */\n      address\n        /* \"Arbitrage.sol\":1539:1561  this.getAmountOutCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3eb61c1c\n        /* \"Arbitrage.sol\":1562:1574  amountInUSDC */\n      dup8\n        /* \"Arbitrage.sol\":1539:1575  this.getAmountOutCurve(amountInUSDC) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_136:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_139:\n        /* \"Arbitrage.sol\":1511:1575  uint256 ethAmountFromCrve = this.getAmountOutCurve(amountInUSDC) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":1639:1656  ethAmountFromCrve */\n      dup1\n        /* \"Arbitrage.sol\":1616:1636  ethAmountFromUniswap */\n      dup3\n        /* \"Arbitrage.sol\":1616:1656  ethAmountFromUniswap > ethAmountFromCrve */\n      gt\n        /* \"Arbitrage.sol\":1613:1944  if(ethAmountFromUniswap > ethAmountFromCrve){... */\n      iszero\n      tag_140\n      jumpi\n        /* \"Arbitrage.sol\":1687:1691  this */\n      address\n        /* \"Arbitrage.sol\":1687:1708  this.buyWETHOnUniswap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x064a8a8a\n        /* \"Arbitrage.sol\":1709:1721  amountInUSDC */\n      dup8\n        /* \"Arbitrage.sol\":1687:1722  this.buyWETHOnUniswap(amountInUSDC) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_144:\n        /* \"Arbitrage.sol\":1671:1722  amountOutWETH = this.buyWETHOnUniswap(amountInUSDC) */\n      swap4\n      pop\n        /* \"Arbitrage.sol\":1752:1756  this */\n      address\n        /* \"Arbitrage.sol\":1752:1772  this.sellWETHOnCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc9901aa\n        /* \"Arbitrage.sol\":1773:1786  amountOutWETH */\n      dup6\n        /* \"Arbitrage.sol\":1752:1787  this.sellWETHOnCurve(amountOutWETH) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_148:\n        /* \"Arbitrage.sol\":1736:1787  amountOutUSDC = this.sellWETHOnCurve(amountOutWETH) */\n      swap3\n      pop\n        /* \"Arbitrage.sol\":1613:1944  if(ethAmountFromUniswap > ethAmountFromCrve){... */\n      jump(tag_149)\n    tag_140:\n        /* \"Arbitrage.sol\":1832:1836  this */\n      address\n        /* \"Arbitrage.sol\":1832:1851  this.buyWETHOnCurve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x793c0845\n        /* \"Arbitrage.sol\":1852:1864  amountInUSDC */\n      dup8\n        /* \"Arbitrage.sol\":1832:1865  this.buyWETHOnCurve(amountInUSDC) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_150:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_153:\n        /* \"Arbitrage.sol\":1816:1865  amountOutWETH = this.buyWETHOnCurve(amountInUSDC) */\n      swap4\n      pop\n        /* \"Arbitrage.sol\":1895:1899  this */\n      address\n        /* \"Arbitrage.sol\":1895:1917  this.sellWETHOnUniswap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54258cc4\n        /* \"Arbitrage.sol\":1918:1931  amountOutWETH */\n      dup6\n        /* \"Arbitrage.sol\":1895:1932  this.sellWETHOnUniswap(amountOutWETH) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_157:\n        /* \"Arbitrage.sol\":1879:1932  amountOutUSDC = this.sellWETHOnUniswap(amountOutWETH) */\n      swap3\n      pop\n        /* \"Arbitrage.sol\":1613:1944  if(ethAmountFromUniswap > ethAmountFromCrve){... */\n    tag_149:\n        /* \"Arbitrage.sol\":1975:1987  amountInUSDC */\n      dup6\n        /* \"Arbitrage.sol\":1961:1974  amountOutUSDC */\n      dup4\n        /* \"Arbitrage.sol\":1961:1987  amountOutUSDC>amountInUSDC */\n      gt\n        /* \"Arbitrage.sol\":1953:2012  require(amountOutUSDC>amountInUSDC, \"Arbitrage profit <=0\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"Arbitrage.sol\":2074:2086  amountInUSDC */\n      dup6\n        /* \"Arbitrage.sol\":2058:2071  amountOutUSDC */\n      dup4\n        /* \"Arbitrage.sol\":2058:2086  amountOutUSDC - amountInUSDC */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"Arbitrage.sol\":2049:2086  profit = amountOutUSDC - amountInUSDC */\n      swap5\n      pop\n        /* \"Arbitrage.sol\":1236:2093  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Arbitrage.sol\":1146:2093  function exactueArbitrage(uint256 amountInUSDC)external onlyAdmin returns(uint256 profit) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":3814:4228  function getAmountOutUniswapV3(uint256 amoutIn)external  view returns (uint256 amoutOut){... */\n    tag_50:\n        /* \"Arbitrage.sol\":3885:3901  uint256 amoutOut */\n      0x00\n        /* \"Arbitrage.sol\":3912:3931  address poolAddress */\n      dup1\n        /* \"Arbitrage.sol\":2388:2430  0x1F98431c8aD98523631AE4a59f267346ea31F984 */\n      0x1f98431c8ad98523631ae4a59f267346ea31f984\n        /* \"Arbitrage.sol\":3934:3958  uniswapV3Factory.getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":667:709  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage.sol\":3987:3991  3000 */\n      0x0bb8\n        /* \"Arbitrage.sol\":3934:3992  uniswapV3Factory.getPool(address(USDC),address(WETH),3000) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_168:\n        /* \"Arbitrage.sol\":3912:3992  address poolAddress = uniswapV3Factory.getPool(address(USDC),address(WETH),3000) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":4002:4021  IUniswapV3Pool pool */\n      0x00\n        /* \"Arbitrage.sol\":4039:4050  poolAddress */\n      dup2\n        /* \"Arbitrage.sol\":4002:4051  IUniswapV3Pool pool = IUniswapV3Pool(poolAddress) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":4062:4082  uint160 sqrtPriceX96 */\n      0x00\n        /* \"Arbitrage.sol\":4092:4096  pool */\n      dup2\n        /* \"Arbitrage.sol\":4092:4102  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"Arbitrage.sol\":4092:4104  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"Arbitrage.sol\":4061:4104  (uint160 sqrtPriceX96,,,,,,) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Arbitrage.sol\":4114:4127  uint256 price */\n      0x00\n        /* \"Arbitrage.sol\":4178:4184  1<<192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"Arbitrage.sol\":4161:4173  sqrtPriceX96 */\n      dup3\n        /* \"Arbitrage.sol\":4153:4174  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":4138:4150  sqrtPriceX96 */\n      dup4\n        /* \"Arbitrage.sol\":4130:4151  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":4130:4174  uint256(sqrtPriceX96)* uint256(sqrtPriceX96) */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"Arbitrage.sol\":4130:4185  uint256(sqrtPriceX96)* uint256(sqrtPriceX96) / (1<<192) */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"Arbitrage.sol\":4114:4185  uint256 price = uint256(sqrtPriceX96)* uint256(sqrtPriceX96) / (1<<192) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":4216:4221  price */\n      dup1\n        /* \"Arbitrage.sol\":4206:4213  amoutIn */\n      dup7\n        /* \"Arbitrage.sol\":4206:4221  amoutIn * price */\n      tag_177\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_177:\n        /* \"Arbitrage.sol\":4195:4221  amoutOut = amoutIn * price */\n      swap5\n      pop\n        /* \"Arbitrage.sol\":3902:4228  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Arbitrage.sol\":3814:4228  function getAmountOutUniswapV3(uint256 amoutIn)external  view returns (uint256 amoutOut){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":4787:5094  function sellWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){... */\n    tag_55:\n        /* \"Arbitrage.sol\":4858:4875  uint256 amountOut */\n      0x00\n        /* \"Arbitrage.sol\":1079:1084  admin */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arbitrage.sol\":1065:1075  msg.sender */\n      caller\n        /* \"Arbitrage.sol\":1065:1084  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Arbitrage.sol\":1057:1123  require(msg.sender == admin, \"Only admin can call this function.\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_60\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"Arbitrage.sol\":4926:4934  amountIn */\n      dup2\n        /* \"Arbitrage.sol\":808:850  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage.sol\":4894:4908  USDC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Arbitrage.sol\":4917:4921  this */\n      address\n        /* \"Arbitrage.sol\":4894:4923  USDC.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_182:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_185:\n        /* \"Arbitrage.sol\":4894:4934  USDC.balanceOf(address(this))>= amountIn */\n      lt\n      iszero\n        /* \"Arbitrage.sol\":4886:4963  require(USDC.balanceOf(address(this))>= amountIn,\"WETH balanceOf not enough\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"Arbitrage.sol\":667:709  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage.sol\":4973:5002  IERC20(address(WETH)).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Arbitrage.sol\":4301:4343  0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B */\n      0x7f86bf177dd4f3494b841a37e810a34dd56c829b\n        /* \"Arbitrage.sol\":5022:5030  amountIn */\n      dup5\n        /* \"Arbitrage.sol\":4973:5031  IERC20(address(WETH)).approve(address(curvePool),amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_189:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_192:\n      pop\n        /* \"Arbitrage.sol\":4301:4343  0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B */\n      0x7f86bf177dd4f3494b841a37e810a34dd56c829b\n        /* \"Arbitrage.sol\":5053:5071  curvePool.exchange */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5b41b908\n        /* \"Arbitrage.sol\":5072:5073  2 */\n      0x02\n        /* \"Arbitrage.sol\":5074:5075  0 */\n      0x00\n        /* \"Arbitrage.sol\":5076:5084  amountIn */\n      dup6\n        /* \"Arbitrage.sol\":5085:5086  1 */\n      0x01\n        /* \"Arbitrage.sol\":5053:5087  curvePool.exchange(2,0,amountIn,1) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_197:\n        /* \"Arbitrage.sol\":5041:5087  amountOut = curvePool.exchange(2,0,amountIn,1) */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":4787:5094  function sellWETHOnCurve(uint256 amountIn) external onlyAdmin returns (uint256 amountOut){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage.sol\":2535:3247  function swapExactInputSingleHop(... */\n    tag_71:\n        /* \"Arbitrage.sol\":2692:2709  uint256 amountOut */\n      0x00\n        /* \"Arbitrage.sol\":2724:2731  tokenIn */\n      dup5\n        /* \"Arbitrage.sol\":2717:2740  IERC20(tokenIn).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Arbitrage.sol\":515:557  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n      0xe592427a0aece92de3edee1f18e0157c05861564\n        /* \"Arbitrage.sol\":2766:2774  amountIn */\n      dup5\n        /* \"Arbitrage.sol\":2717:2775  IERC20(tokenIn).approve(address(uniswapV3Router),amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_202:\n      pop\n        /* \"Arbitrage.sol\":2782:2830  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Arbitrage.sol\":2903:2910  tokenIn */\n      dup8\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage.sol\":2938:2946  tokenOut */\n      dup7\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage.sol\":2969:2976  poolFee */\n      dup6\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage.sol\":3005:3015  msg.sender */\n      caller\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage.sol\":3043:3058  block.timestamp */\n      timestamp\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage.sol\":3086:3094  amountIn */\n      dup5\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage.sol\":3130:3131  0 */\n      0x00\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage.sol\":3168:3169  0 */\n      0x00\n        /* \"Arbitrage.sol\":2841:3180  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Arbitrage.sol\":2782:3180  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"Arbitrage.sol\":515:557  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n      0xe592427a0aece92de3edee1f18e0157c05861564\n        /* \"Arbitrage.sol\":3199:3231  uniswapV3Router.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"Arbitrage.sol\":3232:3238  params */\n      dup3\n        /* \"Arbitrage.sol\":3199:3239  uniswapV3Router.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_207:\n        /* \"Arbitrage.sol\":3187:3239  amountOut = uniswapV3Router.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"Arbitrage.sol\":2710:3247  {... */\n      pop\n        /* \"Arbitrage.sol\":2535:3247  function swapExactInputSingleHop(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_209:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_211:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_212:\n        /* \"#utility.yul\":490:514   */\n      tag_275\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_211\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_276:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_213:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_278\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_212\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_15:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_281\n      tag_209\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":766:885   */\n    tag_280:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_282\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_213\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_214:\n        /* \"#utility.yul\":1112:1136   */\n      tag_284\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_211\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_18:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_286\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_214\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_215:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_216:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_289\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_215\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_217:\n        /* \"#utility.yul\":1698:1722   */\n      tag_291\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_216\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_36:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_293\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_217\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2132   */\n    tag_218:\n        /* \"#utility.yul\":2047:2058   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2088   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2126   */\n      add\n        /* \"#utility.yul\":2097:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2359   */\n    tag_219:\n        /* \"#utility.yul\":2278:2312   */\n      0x4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2262:2276   */\n      add\n        /* \"#utility.yul\":2255:2313   */\n      mstore\n        /* \"#utility.yul\":2347:2351   */\n      0x6e2e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2342:2344   */\n      0x20\n        /* \"#utility.yul\":2334:2340   */\n      dup3\n        /* \"#utility.yul\":2330:2345   */\n      add\n        /* \"#utility.yul\":2323:2352   */\n      mstore\n        /* \"#utility.yul\":2138:2359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2365:2731   */\n    tag_220:\n        /* \"#utility.yul\":2507:2510   */\n      0x00\n        /* \"#utility.yul\":2528:2595   */\n      tag_297\n        /* \"#utility.yul\":2592:2594   */\n      0x22\n        /* \"#utility.yul\":2587:2590   */\n      dup4\n        /* \"#utility.yul\":2528:2595   */\n      tag_218\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2521:2595   */\n      swap2\n      pop\n        /* \"#utility.yul\":2604:2697   */\n      tag_298\n        /* \"#utility.yul\":2693:2696   */\n      dup3\n        /* \"#utility.yul\":2604:2697   */\n      tag_219\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2722:2724   */\n      0x40\n        /* \"#utility.yul\":2717:2720   */\n      dup3\n        /* \"#utility.yul\":2713:2725   */\n      add\n        /* \"#utility.yul\":2706:2725   */\n      swap1\n      pop\n        /* \"#utility.yul\":2365:2731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2737:3156   */\n    tag_60:\n        /* \"#utility.yul\":2903:2907   */\n      0x00\n        /* \"#utility.yul\":2941:2943   */\n      0x20\n        /* \"#utility.yul\":2930:2939   */\n      dup3\n        /* \"#utility.yul\":2926:2944   */\n      add\n        /* \"#utility.yul\":2918:2944   */\n      swap1\n      pop\n        /* \"#utility.yul\":2990:2999   */\n      dup2\n        /* \"#utility.yul\":2984:2988   */\n      dup2\n        /* \"#utility.yul\":2980:3000   */\n      sub\n        /* \"#utility.yul\":2976:2977   */\n      0x00\n        /* \"#utility.yul\":2965:2974   */\n      dup4\n        /* \"#utility.yul\":2961:2978   */\n      add\n        /* \"#utility.yul\":2954:3001   */\n      mstore\n        /* \"#utility.yul\":3018:3149   */\n      tag_300\n        /* \"#utility.yul\":3144:3148   */\n      dup2\n        /* \"#utility.yul\":3018:3149   */\n      tag_220\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3010:3149   */\n      swap1\n      pop\n        /* \"#utility.yul\":2737:3156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3162:3305   */\n    tag_221:\n        /* \"#utility.yul\":3219:3224   */\n      0x00\n        /* \"#utility.yul\":3250:3256   */\n      dup2\n        /* \"#utility.yul\":3244:3257   */\n      mload\n        /* \"#utility.yul\":3235:3257   */\n      swap1\n      pop\n        /* \"#utility.yul\":3266:3299   */\n      tag_302\n        /* \"#utility.yul\":3293:3298   */\n      dup2\n        /* \"#utility.yul\":3266:3299   */\n      tag_212\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3162:3305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3311:3662   */\n    tag_66:\n        /* \"#utility.yul\":3381:3387   */\n      0x00\n        /* \"#utility.yul\":3430:3432   */\n      0x20\n        /* \"#utility.yul\":3418:3427   */\n      dup3\n        /* \"#utility.yul\":3409:3416   */\n      dup5\n        /* \"#utility.yul\":3405:3428   */\n      sub\n        /* \"#utility.yul\":3401:3433   */\n      slt\n        /* \"#utility.yul\":3398:3517   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":3436:3515   */\n      tag_305\n      tag_209\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3398:3517   */\n    tag_304:\n        /* \"#utility.yul\":3556:3557   */\n      0x00\n        /* \"#utility.yul\":3581:3645   */\n      tag_306\n        /* \"#utility.yul\":3637:3644   */\n      dup5\n        /* \"#utility.yul\":3628:3634   */\n      dup3\n        /* \"#utility.yul\":3617:3626   */\n      dup6\n        /* \"#utility.yul\":3613:3635   */\n      add\n        /* \"#utility.yul\":3581:3645   */\n      tag_221\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3571:3645   */\n      swap2\n      pop\n        /* \"#utility.yul\":3527:3655   */\n      pop\n        /* \"#utility.yul\":3311:3662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3668:3844   */\n    tag_222:\n        /* \"#utility.yul\":3808:3836   */\n      0x555344432062616c73656e63654f46206e6f7420656e6f756768000000000000\n        /* \"#utility.yul\":3804:3805   */\n      0x00\n        /* \"#utility.yul\":3796:3802   */\n      dup3\n        /* \"#utility.yul\":3792:3806   */\n      add\n        /* \"#utility.yul\":3785:3837   */\n      mstore\n        /* \"#utility.yul\":3668:3844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3850:4216   */\n    tag_223:\n        /* \"#utility.yul\":3992:3995   */\n      0x00\n        /* \"#utility.yul\":4013:4080   */\n      tag_309\n        /* \"#utility.yul\":4077:4079   */\n      0x1a\n        /* \"#utility.yul\":4072:4075   */\n      dup4\n        /* \"#utility.yul\":4013:4080   */\n      tag_218\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4006:4080   */\n      swap2\n      pop\n        /* \"#utility.yul\":4089:4182   */\n      tag_310\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4089:4182   */\n      tag_222\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4207:4209   */\n      0x20\n        /* \"#utility.yul\":4202:4205   */\n      dup3\n        /* \"#utility.yul\":4198:4210   */\n      add\n        /* \"#utility.yul\":4191:4210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3850:4216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4222:4641   */\n    tag_69:\n        /* \"#utility.yul\":4388:4392   */\n      0x00\n        /* \"#utility.yul\":4426:4428   */\n      0x20\n        /* \"#utility.yul\":4415:4424   */\n      dup3\n        /* \"#utility.yul\":4411:4429   */\n      add\n        /* \"#utility.yul\":4403:4429   */\n      swap1\n      pop\n        /* \"#utility.yul\":4475:4484   */\n      dup2\n        /* \"#utility.yul\":4469:4473   */\n      dup2\n        /* \"#utility.yul\":4465:4485   */\n      sub\n        /* \"#utility.yul\":4461:4462   */\n      0x00\n        /* \"#utility.yul\":4450:4459   */\n      dup4\n        /* \"#utility.yul\":4446:4463   */\n      add\n        /* \"#utility.yul\":4439:4486   */\n      mstore\n        /* \"#utility.yul\":4503:4634   */\n      tag_312\n        /* \"#utility.yul\":4629:4633   */\n      dup2\n        /* \"#utility.yul\":4503:4634   */\n      tag_223\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4495:4634   */\n      swap1\n      pop\n        /* \"#utility.yul\":4222:4641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4647:4732   */\n    tag_224:\n        /* \"#utility.yul\":4692:4699   */\n      0x00\n        /* \"#utility.yul\":4721:4726   */\n      dup2\n        /* \"#utility.yul\":4710:4726   */\n      swap1\n      pop\n        /* \"#utility.yul\":4647:4732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4738:4798   */\n    tag_225:\n        /* \"#utility.yul\":4766:4769   */\n      0x00\n        /* \"#utility.yul\":4787:4792   */\n      dup2\n        /* \"#utility.yul\":4780:4792   */\n      swap1\n      pop\n        /* \"#utility.yul\":4738:4798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4804:4962   */\n    tag_226:\n        /* \"#utility.yul\":4862:4871   */\n      0x00\n        /* \"#utility.yul\":4895:4956   */\n      tag_316\n        /* \"#utility.yul\":4913:4955   */\n      tag_317\n        /* \"#utility.yul\":4922:4954   */\n      tag_318\n        /* \"#utility.yul\":4948:4953   */\n      dup5\n        /* \"#utility.yul\":4922:4954   */\n      tag_224\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4913:4955   */\n      tag_225\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4895:4956   */\n      tag_211\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4882:4956   */\n      swap1\n      pop\n        /* \"#utility.yul\":4804:4962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5115   */\n    tag_227:\n        /* \"#utility.yul\":5063:5108   */\n      tag_320\n        /* \"#utility.yul\":5102:5107   */\n      dup2\n        /* \"#utility.yul\":5063:5108   */\n      tag_226\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5058:5061   */\n      dup3\n        /* \"#utility.yul\":5051:5109   */\n      mstore\n        /* \"#utility.yul\":4968:5115   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5121:5206   */\n    tag_228:\n        /* \"#utility.yul\":5166:5173   */\n      0x00\n        /* \"#utility.yul\":5195:5200   */\n      dup2\n        /* \"#utility.yul\":5184:5200   */\n      swap1\n      pop\n        /* \"#utility.yul\":5121:5206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5212:5370   */\n    tag_229:\n        /* \"#utility.yul\":5270:5279   */\n      0x00\n        /* \"#utility.yul\":5303:5364   */\n      tag_323\n        /* \"#utility.yul\":5321:5363   */\n      tag_324\n        /* \"#utility.yul\":5330:5362   */\n      tag_325\n        /* \"#utility.yul\":5356:5361   */\n      dup5\n        /* \"#utility.yul\":5330:5362   */\n      tag_228\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5321:5363   */\n      tag_225\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5303:5364   */\n      tag_211\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5290:5364   */\n      swap1\n      pop\n        /* \"#utility.yul\":5212:5370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5376:5523   */\n    tag_230:\n        /* \"#utility.yul\":5471:5516   */\n      tag_327\n        /* \"#utility.yul\":5510:5515   */\n      dup2\n        /* \"#utility.yul\":5471:5516   */\n      tag_229\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5466:5469   */\n      dup3\n        /* \"#utility.yul\":5459:5517   */\n      mstore\n        /* \"#utility.yul\":5376:5523   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5529:6003   */\n    tag_78:\n        /* \"#utility.yul\":5694:5698   */\n      0x00\n        /* \"#utility.yul\":5732:5734   */\n      0x60\n        /* \"#utility.yul\":5721:5730   */\n      dup3\n        /* \"#utility.yul\":5717:5735   */\n      add\n        /* \"#utility.yul\":5709:5735   */\n      swap1\n      pop\n        /* \"#utility.yul\":5745:5824   */\n      tag_329\n        /* \"#utility.yul\":5821:5822   */\n      0x00\n        /* \"#utility.yul\":5810:5819   */\n      dup4\n        /* \"#utility.yul\":5806:5823   */\n      add\n        /* \"#utility.yul\":5797:5803   */\n      dup7\n        /* \"#utility.yul\":5745:5824   */\n      tag_227\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5834:5914   */\n      tag_330\n        /* \"#utility.yul\":5910:5912   */\n      0x20\n        /* \"#utility.yul\":5899:5908   */\n      dup4\n        /* \"#utility.yul\":5895:5913   */\n      add\n        /* \"#utility.yul\":5886:5892   */\n      dup6\n        /* \"#utility.yul\":5834:5914   */\n      tag_230\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5924:5996   */\n      tag_331\n        /* \"#utility.yul\":5992:5994   */\n      0x40\n        /* \"#utility.yul\":5981:5990   */\n      dup4\n        /* \"#utility.yul\":5977:5995   */\n      add\n        /* \"#utility.yul\":5968:5974   */\n      dup5\n        /* \"#utility.yul\":5924:5996   */\n      tag_214\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5529:6003   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6009:6185   */\n    tag_231:\n        /* \"#utility.yul\":6149:6177   */\n      0x574554482062616c73656e63654f46206e6f7420656e6f756768000000000000\n        /* \"#utility.yul\":6145:6146   */\n      0x00\n        /* \"#utility.yul\":6137:6143   */\n      dup3\n        /* \"#utility.yul\":6133:6147   */\n      add\n        /* \"#utility.yul\":6126:6178   */\n      mstore\n        /* \"#utility.yul\":6009:6185   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6191:6557   */\n    tag_232:\n        /* \"#utility.yul\":6333:6336   */\n      0x00\n        /* \"#utility.yul\":6354:6421   */\n      tag_334\n        /* \"#utility.yul\":6418:6420   */\n      0x1a\n        /* \"#utility.yul\":6413:6416   */\n      dup4\n        /* \"#utility.yul\":6354:6421   */\n      tag_218\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6347:6421   */\n      swap2\n      pop\n        /* \"#utility.yul\":6430:6523   */\n      tag_335\n        /* \"#utility.yul\":6519:6522   */\n      dup3\n        /* \"#utility.yul\":6430:6523   */\n      tag_231\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6548:6550   */\n      0x20\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6539:6551   */\n      add\n        /* \"#utility.yul\":6532:6551   */\n      swap1\n      pop\n        /* \"#utility.yul\":6191:6557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6982   */\n    tag_92:\n        /* \"#utility.yul\":6729:6733   */\n      0x00\n        /* \"#utility.yul\":6767:6769   */\n      0x20\n        /* \"#utility.yul\":6756:6765   */\n      dup3\n        /* \"#utility.yul\":6752:6770   */\n      add\n        /* \"#utility.yul\":6744:6770   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6825   */\n      dup2\n        /* \"#utility.yul\":6810:6814   */\n      dup2\n        /* \"#utility.yul\":6806:6826   */\n      sub\n        /* \"#utility.yul\":6802:6803   */\n      0x00\n        /* \"#utility.yul\":6791:6800   */\n      dup4\n        /* \"#utility.yul\":6787:6804   */\n      add\n        /* \"#utility.yul\":6780:6827   */\n      mstore\n        /* \"#utility.yul\":6844:6975   */\n      tag_337\n        /* \"#utility.yul\":6970:6974   */\n      dup2\n        /* \"#utility.yul\":6844:6975   */\n      tag_232\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6836:6975   */\n      swap1\n      pop\n        /* \"#utility.yul\":6563:6982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6988:7110   */\n    tag_233:\n        /* \"#utility.yul\":7061:7085   */\n      tag_339\n        /* \"#utility.yul\":7079:7084   */\n      dup2\n        /* \"#utility.yul\":7061:7085   */\n      tag_216\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7054:7059   */\n      dup2\n        /* \"#utility.yul\":7051:7086   */\n      eq\n        /* \"#utility.yul\":7041:7104   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":7100:7101   */\n      0x00\n        /* \"#utility.yul\":7097:7098   */\n      dup1\n        /* \"#utility.yul\":7090:7102   */\n      revert\n        /* \"#utility.yul\":7041:7104   */\n    tag_340:\n        /* \"#utility.yul\":6988:7110   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7116:7259   */\n    tag_234:\n        /* \"#utility.yul\":7173:7178   */\n      0x00\n        /* \"#utility.yul\":7204:7210   */\n      dup2\n        /* \"#utility.yul\":7198:7211   */\n      mload\n        /* \"#utility.yul\":7189:7211   */\n      swap1\n      pop\n        /* \"#utility.yul\":7220:7253   */\n      tag_342\n        /* \"#utility.yul\":7247:7252   */\n      dup2\n        /* \"#utility.yul\":7220:7253   */\n      tag_233\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7116:7259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7265:7616   */\n    tag_99:\n        /* \"#utility.yul\":7335:7341   */\n      0x00\n        /* \"#utility.yul\":7384:7386   */\n      0x20\n        /* \"#utility.yul\":7372:7381   */\n      dup3\n        /* \"#utility.yul\":7363:7370   */\n      dup5\n        /* \"#utility.yul\":7359:7382   */\n      sub\n        /* \"#utility.yul\":7355:7387   */\n      slt\n        /* \"#utility.yul\":7352:7471   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":7390:7469   */\n      tag_345\n      tag_209\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7352:7471   */\n    tag_344:\n        /* \"#utility.yul\":7510:7511   */\n      0x00\n        /* \"#utility.yul\":7535:7599   */\n      tag_346\n        /* \"#utility.yul\":7591:7598   */\n      dup5\n        /* \"#utility.yul\":7582:7588   */\n      dup3\n        /* \"#utility.yul\":7571:7580   */\n      dup6\n        /* \"#utility.yul\":7567:7589   */\n      add\n        /* \"#utility.yul\":7535:7599   */\n      tag_234\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7525:7599   */\n      swap2\n      pop\n        /* \"#utility.yul\":7481:7609   */\n      pop\n        /* \"#utility.yul\":7265:7616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7622:7797   */\n    tag_235:\n        /* \"#utility.yul\":7762:7789   */\n      0x555344432062616c616e63654f66206e6f7420656e6f75676800000000000000\n        /* \"#utility.yul\":7758:7759   */\n      0x00\n        /* \"#utility.yul\":7750:7756   */\n      dup3\n        /* \"#utility.yul\":7746:7760   */\n      add\n        /* \"#utility.yul\":7739:7790   */\n      mstore\n        /* \"#utility.yul\":7622:7797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7803:8169   */\n    tag_236:\n        /* \"#utility.yul\":7945:7948   */\n      0x00\n        /* \"#utility.yul\":7966:8033   */\n      tag_349\n        /* \"#utility.yul\":8030:8032   */\n      0x19\n        /* \"#utility.yul\":8025:8028   */\n      dup4\n        /* \"#utility.yul\":7966:8033   */\n      tag_218\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7959:8033   */\n      swap2\n      pop\n        /* \"#utility.yul\":8042:8135   */\n      tag_350\n        /* \"#utility.yul\":8131:8134   */\n      dup3\n        /* \"#utility.yul\":8042:8135   */\n      tag_235\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8160:8162   */\n      0x20\n        /* \"#utility.yul\":8155:8158   */\n      dup3\n        /* \"#utility.yul\":8151:8163   */\n      add\n        /* \"#utility.yul\":8144:8163   */\n      swap1\n      pop\n        /* \"#utility.yul\":7803:8169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8175:8594   */\n    tag_110:\n        /* \"#utility.yul\":8341:8345   */\n      0x00\n        /* \"#utility.yul\":8379:8381   */\n      0x20\n        /* \"#utility.yul\":8368:8377   */\n      dup3\n        /* \"#utility.yul\":8364:8382   */\n      add\n        /* \"#utility.yul\":8356:8382   */\n      swap1\n      pop\n        /* \"#utility.yul\":8428:8437   */\n      dup2\n        /* \"#utility.yul\":8422:8426   */\n      dup2\n        /* \"#utility.yul\":8418:8438   */\n      sub\n        /* \"#utility.yul\":8414:8415   */\n      0x00\n        /* \"#utility.yul\":8403:8412   */\n      dup4\n        /* \"#utility.yul\":8399:8416   */\n      add\n        /* \"#utility.yul\":8392:8439   */\n      mstore\n        /* \"#utility.yul\":8456:8587   */\n      tag_352\n        /* \"#utility.yul\":8582:8586   */\n      dup2\n        /* \"#utility.yul\":8456:8587   */\n      tag_236\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8448:8587   */\n      swap1\n      pop\n        /* \"#utility.yul\":8175:8594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8600:8932   */\n    tag_112:\n        /* \"#utility.yul\":8721:8725   */\n      0x00\n        /* \"#utility.yul\":8759:8761   */\n      0x40\n        /* \"#utility.yul\":8748:8757   */\n      dup3\n        /* \"#utility.yul\":8744:8762   */\n      add\n        /* \"#utility.yul\":8736:8762   */\n      swap1\n      pop\n        /* \"#utility.yul\":8772:8843   */\n      tag_354\n        /* \"#utility.yul\":8840:8841   */\n      0x00\n        /* \"#utility.yul\":8829:8838   */\n      dup4\n        /* \"#utility.yul\":8825:8842   */\n      add\n        /* \"#utility.yul\":8816:8822   */\n      dup6\n        /* \"#utility.yul\":8772:8843   */\n      tag_217\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8853:8925   */\n      tag_355\n        /* \"#utility.yul\":8921:8923   */\n      0x20\n        /* \"#utility.yul\":8910:8919   */\n      dup4\n        /* \"#utility.yul\":8906:8924   */\n      add\n        /* \"#utility.yul\":8897:8903   */\n      dup5\n        /* \"#utility.yul\":8853:8925   */\n      tag_214\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8600:8932   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8938:9028   */\n    tag_237:\n        /* \"#utility.yul\":8972:8979   */\n      0x00\n        /* \"#utility.yul\":9015:9020   */\n      dup2\n        /* \"#utility.yul\":9008:9021   */\n      iszero\n        /* \"#utility.yul\":9001:9022   */\n      iszero\n        /* \"#utility.yul\":8990:9022   */\n      swap1\n      pop\n        /* \"#utility.yul\":8938:9028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9034:9150   */\n    tag_238:\n        /* \"#utility.yul\":9104:9125   */\n      tag_358\n        /* \"#utility.yul\":9119:9124   */\n      dup2\n        /* \"#utility.yul\":9104:9125   */\n      tag_237\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9097:9102   */\n      dup2\n        /* \"#utility.yul\":9094:9126   */\n      eq\n        /* \"#utility.yul\":9084:9144   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":9140:9141   */\n      0x00\n        /* \"#utility.yul\":9137:9138   */\n      dup1\n        /* \"#utility.yul\":9130:9142   */\n      revert\n        /* \"#utility.yul\":9084:9144   */\n    tag_359:\n        /* \"#utility.yul\":9034:9150   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9156:9293   */\n    tag_239:\n        /* \"#utility.yul\":9210:9215   */\n      0x00\n        /* \"#utility.yul\":9241:9247   */\n      dup2\n        /* \"#utility.yul\":9235:9248   */\n      mload\n        /* \"#utility.yul\":9226:9248   */\n      swap1\n      pop\n        /* \"#utility.yul\":9257:9287   */\n      tag_361\n        /* \"#utility.yul\":9281:9286   */\n      dup2\n        /* \"#utility.yul\":9257:9287   */\n      tag_238\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9156:9293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9299:9644   */\n    tag_116:\n        /* \"#utility.yul\":9366:9372   */\n      0x00\n        /* \"#utility.yul\":9415:9417   */\n      0x20\n        /* \"#utility.yul\":9403:9412   */\n      dup3\n        /* \"#utility.yul\":9394:9401   */\n      dup5\n        /* \"#utility.yul\":9390:9413   */\n      sub\n        /* \"#utility.yul\":9386:9418   */\n      slt\n        /* \"#utility.yul\":9383:9502   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":9421:9500   */\n      tag_364\n      tag_209\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9383:9502   */\n    tag_363:\n        /* \"#utility.yul\":9541:9542   */\n      0x00\n        /* \"#utility.yul\":9566:9627   */\n      tag_365\n        /* \"#utility.yul\":9619:9626   */\n      dup5\n        /* \"#utility.yul\":9610:9616   */\n      dup3\n        /* \"#utility.yul\":9599:9608   */\n      dup6\n        /* \"#utility.yul\":9595:9617   */\n      add\n        /* \"#utility.yul\":9566:9627   */\n      tag_239\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9556:9627   */\n      swap2\n      pop\n        /* \"#utility.yul\":9512:9637   */\n      pop\n        /* \"#utility.yul\":9299:9644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9650:9735   */\n    tag_240:\n        /* \"#utility.yul\":9695:9702   */\n      0x00\n        /* \"#utility.yul\":9724:9729   */\n      dup2\n        /* \"#utility.yul\":9713:9729   */\n      swap1\n      pop\n        /* \"#utility.yul\":9650:9735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9741:9899   */\n    tag_241:\n        /* \"#utility.yul\":9799:9808   */\n      0x00\n        /* \"#utility.yul\":9832:9893   */\n      tag_368\n        /* \"#utility.yul\":9850:9892   */\n      tag_369\n        /* \"#utility.yul\":9859:9891   */\n      tag_370\n        /* \"#utility.yul\":9885:9890   */\n      dup5\n        /* \"#utility.yul\":9859:9891   */\n      tag_240\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9850:9892   */\n      tag_225\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9832:9893   */\n      tag_211\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9819:9893   */\n      swap1\n      pop\n        /* \"#utility.yul\":9741:9899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9905:10052   */\n    tag_242:\n        /* \"#utility.yul\":10000:10045   */\n      tag_372\n        /* \"#utility.yul\":10039:10044   */\n      dup2\n        /* \"#utility.yul\":10000:10045   */\n      tag_241\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9995:9998   */\n      dup3\n        /* \"#utility.yul\":9988:10046   */\n      mstore\n        /* \"#utility.yul\":9905:10052   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10659   */\n    tag_118:\n        /* \"#utility.yul\":10259:10263   */\n      0x00\n        /* \"#utility.yul\":10297:10300   */\n      0x80\n        /* \"#utility.yul\":10286:10295   */\n      dup3\n        /* \"#utility.yul\":10282:10301   */\n      add\n        /* \"#utility.yul\":10274:10301   */\n      swap1\n      pop\n        /* \"#utility.yul\":10311:10390   */\n      tag_374\n        /* \"#utility.yul\":10387:10388   */\n      0x00\n        /* \"#utility.yul\":10376:10385   */\n      dup4\n        /* \"#utility.yul\":10372:10389   */\n      add\n        /* \"#utility.yul\":10363:10369   */\n      dup8\n        /* \"#utility.yul\":10311:10390   */\n      tag_227\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10400:10480   */\n      tag_375\n        /* \"#utility.yul\":10476:10478   */\n      0x20\n        /* \"#utility.yul\":10465:10474   */\n      dup4\n        /* \"#utility.yul\":10461:10479   */\n      add\n        /* \"#utility.yul\":10452:10458   */\n      dup7\n        /* \"#utility.yul\":10400:10480   */\n      tag_230\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10490:10562   */\n      tag_376\n        /* \"#utility.yul\":10558:10560   */\n      0x40\n        /* \"#utility.yul\":10547:10556   */\n      dup4\n        /* \"#utility.yul\":10543:10561   */\n      add\n        /* \"#utility.yul\":10534:10540   */\n      dup6\n        /* \"#utility.yul\":10490:10562   */\n      tag_214\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10572:10652   */\n      tag_377\n        /* \"#utility.yul\":10648:10650   */\n      0x60\n        /* \"#utility.yul\":10637:10646   */\n      dup4\n        /* \"#utility.yul\":10633:10651   */\n      add\n        /* \"#utility.yul\":10624:10630   */\n      dup5\n        /* \"#utility.yul\":10572:10652   */\n      tag_242\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":10058:10659   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10665:10835   */\n    tag_243:\n        /* \"#utility.yul\":10805:10827   */\n      0x4172626974726167652070726f666974203c3d30000000000000000000000000\n        /* \"#utility.yul\":10801:10802   */\n      0x00\n        /* \"#utility.yul\":10793:10799   */\n      dup3\n        /* \"#utility.yul\":10789:10803   */\n      add\n        /* \"#utility.yul\":10782:10828   */\n      mstore\n        /* \"#utility.yul\":10665:10835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10841:11207   */\n    tag_244:\n        /* \"#utility.yul\":10983:10986   */\n      0x00\n        /* \"#utility.yul\":11004:11071   */\n      tag_380\n        /* \"#utility.yul\":11068:11070   */\n      0x14\n        /* \"#utility.yul\":11063:11066   */\n      dup4\n        /* \"#utility.yul\":11004:11071   */\n      tag_218\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10997:11071   */\n      swap2\n      pop\n        /* \"#utility.yul\":11080:11173   */\n      tag_381\n        /* \"#utility.yul\":11169:11172   */\n      dup3\n        /* \"#utility.yul\":11080:11173   */\n      tag_243\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11198:11200   */\n      0x20\n        /* \"#utility.yul\":11193:11196   */\n      dup3\n        /* \"#utility.yul\":11189:11201   */\n      add\n        /* \"#utility.yul\":11182:11201   */\n      swap1\n      pop\n        /* \"#utility.yul\":10841:11207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11213:11632   */\n    tag_160:\n        /* \"#utility.yul\":11379:11383   */\n      0x00\n        /* \"#utility.yul\":11417:11419   */\n      0x20\n        /* \"#utility.yul\":11406:11415   */\n      dup3\n        /* \"#utility.yul\":11402:11420   */\n      add\n        /* \"#utility.yul\":11394:11420   */\n      swap1\n      pop\n        /* \"#utility.yul\":11466:11475   */\n      dup2\n        /* \"#utility.yul\":11460:11464   */\n      dup2\n        /* \"#utility.yul\":11456:11476   */\n      sub\n        /* \"#utility.yul\":11452:11453   */\n      0x00\n        /* \"#utility.yul\":11441:11450   */\n      dup4\n        /* \"#utility.yul\":11437:11454   */\n      add\n        /* \"#utility.yul\":11430:11477   */\n      mstore\n        /* \"#utility.yul\":11494:11625   */\n      tag_383\n        /* \"#utility.yul\":11620:11624   */\n      dup2\n        /* \"#utility.yul\":11494:11625   */\n      tag_244\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11486:11625   */\n      swap1\n      pop\n        /* \"#utility.yul\":11213:11632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11638:11818   */\n    tag_245:\n        /* \"#utility.yul\":11686:11763   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11676:11764   */\n      mstore\n        /* \"#utility.yul\":11783:11787   */\n      0x11\n        /* \"#utility.yul\":11780:11781   */\n      0x04\n        /* \"#utility.yul\":11773:11788   */\n      mstore\n        /* \"#utility.yul\":11807:11811   */\n      0x24\n        /* \"#utility.yul\":11804:11805   */\n      0x00\n        /* \"#utility.yul\":11797:11812   */\n      revert\n        /* \"#utility.yul\":11824:12018   */\n    tag_162:\n        /* \"#utility.yul\":11864:11868   */\n      0x00\n        /* \"#utility.yul\":11884:11904   */\n      tag_386\n        /* \"#utility.yul\":11902:11903   */\n      dup3\n        /* \"#utility.yul\":11884:11904   */\n      tag_211\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11879:11904   */\n      swap2\n      pop\n        /* \"#utility.yul\":11918:11938   */\n      tag_387\n        /* \"#utility.yul\":11936:11937   */\n      dup4\n        /* \"#utility.yul\":11918:11938   */\n      tag_211\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11913:11938   */\n      swap3\n      pop\n        /* \"#utility.yul\":11962:11963   */\n      dup3\n        /* \"#utility.yul\":11959:11960   */\n      dup3\n        /* \"#utility.yul\":11955:11964   */\n      sub\n        /* \"#utility.yul\":11947:11964   */\n      swap1\n      pop\n        /* \"#utility.yul\":11986:11987   */\n      dup2\n        /* \"#utility.yul\":11980:11984   */\n      dup2\n        /* \"#utility.yul\":11977:11988   */\n      gt\n        /* \"#utility.yul\":11974:12011   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":11991:12009   */\n      tag_389\n      tag_245\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11974:12011   */\n    tag_388:\n        /* \"#utility.yul\":11824:12018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12024:12112   */\n    tag_246:\n        /* \"#utility.yul\":12072:12079   */\n      0x00\n        /* \"#utility.yul\":12101:12106   */\n      dup2\n        /* \"#utility.yul\":12090:12106   */\n      swap1\n      pop\n        /* \"#utility.yul\":12024:12112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12118:12209   */\n    tag_247:\n        /* \"#utility.yul\":12154:12161   */\n      0x00\n        /* \"#utility.yul\":12194:12202   */\n      0xffffff\n        /* \"#utility.yul\":12187:12192   */\n      dup3\n        /* \"#utility.yul\":12183:12203   */\n      and\n        /* \"#utility.yul\":12172:12203   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12215:12377   */\n    tag_248:\n        /* \"#utility.yul\":12275:12284   */\n      0x00\n        /* \"#utility.yul\":12308:12371   */\n      tag_393\n        /* \"#utility.yul\":12325:12370   */\n      tag_394\n        /* \"#utility.yul\":12334:12369   */\n      tag_395\n        /* \"#utility.yul\":12363:12368   */\n      dup5\n        /* \"#utility.yul\":12334:12369   */\n      tag_246\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12325:12370   */\n      tag_225\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12308:12371   */\n      tag_247\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12295:12371   */\n      swap1\n      pop\n        /* \"#utility.yul\":12215:12377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12383:12534   */\n    tag_249:\n        /* \"#utility.yul\":12480:12527   */\n      tag_397\n        /* \"#utility.yul\":12521:12526   */\n      dup2\n        /* \"#utility.yul\":12480:12527   */\n      tag_248\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12475:12478   */\n      dup3\n        /* \"#utility.yul\":12468:12528   */\n      mstore\n        /* \"#utility.yul\":12383:12534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12540:13002   */\n    tag_165:\n        /* \"#utility.yul\":12699:12703   */\n      0x00\n        /* \"#utility.yul\":12737:12739   */\n      0x60\n        /* \"#utility.yul\":12726:12735   */\n      dup3\n        /* \"#utility.yul\":12722:12740   */\n      add\n        /* \"#utility.yul\":12714:12740   */\n      swap1\n      pop\n        /* \"#utility.yul\":12750:12821   */\n      tag_399\n        /* \"#utility.yul\":12818:12819   */\n      0x00\n        /* \"#utility.yul\":12807:12816   */\n      dup4\n        /* \"#utility.yul\":12803:12820   */\n      add\n        /* \"#utility.yul\":12794:12800   */\n      dup7\n        /* \"#utility.yul\":12750:12821   */\n      tag_217\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12831:12903   */\n      tag_400\n        /* \"#utility.yul\":12899:12901   */\n      0x20\n        /* \"#utility.yul\":12888:12897   */\n      dup4\n        /* \"#utility.yul\":12884:12902   */\n      add\n        /* \"#utility.yul\":12875:12881   */\n      dup6\n        /* \"#utility.yul\":12831:12903   */\n      tag_217\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12913:12995   */\n      tag_401\n        /* \"#utility.yul\":12991:12993   */\n      0x40\n        /* \"#utility.yul\":12980:12989   */\n      dup4\n        /* \"#utility.yul\":12976:12994   */\n      add\n        /* \"#utility.yul\":12967:12973   */\n      dup5\n        /* \"#utility.yul\":12913:12995   */\n      tag_249\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12540:13002   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13008:13130   */\n    tag_250:\n        /* \"#utility.yul\":13081:13105   */\n      tag_403\n        /* \"#utility.yul\":13099:13104   */\n      dup2\n        /* \"#utility.yul\":13081:13105   */\n      tag_215\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13074:13079   */\n      dup2\n        /* \"#utility.yul\":13071:13106   */\n      eq\n        /* \"#utility.yul\":13061:13124   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":13120:13121   */\n      0x00\n        /* \"#utility.yul\":13117:13118   */\n      dup1\n        /* \"#utility.yul\":13110:13122   */\n      revert\n        /* \"#utility.yul\":13061:13124   */\n    tag_404:\n        /* \"#utility.yul\":13008:13130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13136:13279   */\n    tag_251:\n        /* \"#utility.yul\":13193:13198   */\n      0x00\n        /* \"#utility.yul\":13224:13230   */\n      dup2\n        /* \"#utility.yul\":13218:13231   */\n      mload\n        /* \"#utility.yul\":13209:13231   */\n      swap1\n      pop\n        /* \"#utility.yul\":13240:13273   */\n      tag_406\n        /* \"#utility.yul\":13267:13272   */\n      dup2\n        /* \"#utility.yul\":13240:13273   */\n      tag_250\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13136:13279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13285:13375   */\n    tag_252:\n        /* \"#utility.yul\":13320:13327   */\n      0x00\n        /* \"#utility.yul\":13363:13368   */\n      dup2\n        /* \"#utility.yul\":13360:13361   */\n      0x02\n        /* \"#utility.yul\":13349:13369   */\n      signextend\n        /* \"#utility.yul\":13338:13369   */\n      swap1\n      pop\n        /* \"#utility.yul\":13285:13375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13381:13499   */\n    tag_253:\n        /* \"#utility.yul\":13452:13474   */\n      tag_409\n        /* \"#utility.yul\":13468:13473   */\n      dup2\n        /* \"#utility.yul\":13452:13474   */\n      tag_252\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13445:13450   */\n      dup2\n        /* \"#utility.yul\":13442:13475   */\n      eq\n        /* \"#utility.yul\":13432:13493   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":13489:13490   */\n      0x00\n        /* \"#utility.yul\":13486:13487   */\n      dup1\n        /* \"#utility.yul\":13479:13491   */\n      revert\n        /* \"#utility.yul\":13432:13493   */\n    tag_410:\n        /* \"#utility.yul\":13381:13499   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13505:13644   */\n    tag_254:\n        /* \"#utility.yul\":13560:13565   */\n      0x00\n        /* \"#utility.yul\":13591:13597   */\n      dup2\n        /* \"#utility.yul\":13585:13598   */\n      mload\n        /* \"#utility.yul\":13576:13598   */\n      swap1\n      pop\n        /* \"#utility.yul\":13607:13638   */\n      tag_412\n        /* \"#utility.yul\":13632:13637   */\n      dup2\n        /* \"#utility.yul\":13607:13638   */\n      tag_253\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13505:13644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13650:13739   */\n    tag_255:\n        /* \"#utility.yul\":13686:13693   */\n      0x00\n        /* \"#utility.yul\":13726:13732   */\n      0xffff\n        /* \"#utility.yul\":13719:13724   */\n      dup3\n        /* \"#utility.yul\":13715:13733   */\n      and\n        /* \"#utility.yul\":13704:13733   */\n      swap1\n      pop\n        /* \"#utility.yul\":13650:13739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13745:13865   */\n    tag_256:\n        /* \"#utility.yul\":13817:13840   */\n      tag_415\n        /* \"#utility.yul\":13834:13839   */\n      dup2\n        /* \"#utility.yul\":13817:13840   */\n      tag_255\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13810:13815   */\n      dup2\n        /* \"#utility.yul\":13807:13841   */\n      eq\n        /* \"#utility.yul\":13797:13859   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":13855:13856   */\n      0x00\n        /* \"#utility.yul\":13852:13853   */\n      dup1\n        /* \"#utility.yul\":13845:13857   */\n      revert\n        /* \"#utility.yul\":13797:13859   */\n    tag_416:\n        /* \"#utility.yul\":13745:13865   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13871:14012   */\n    tag_257:\n        /* \"#utility.yul\":13927:13932   */\n      0x00\n        /* \"#utility.yul\":13958:13964   */\n      dup2\n        /* \"#utility.yul\":13952:13965   */\n      mload\n        /* \"#utility.yul\":13943:13965   */\n      swap1\n      pop\n        /* \"#utility.yul\":13974:14006   */\n      tag_418\n        /* \"#utility.yul\":14000:14005   */\n      dup2\n        /* \"#utility.yul\":13974:14006   */\n      tag_256\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":13871:14012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14018:14104   */\n    tag_258:\n        /* \"#utility.yul\":14053:14060   */\n      0x00\n        /* \"#utility.yul\":14093:14097   */\n      0xff\n        /* \"#utility.yul\":14086:14091   */\n      dup3\n        /* \"#utility.yul\":14082:14098   */\n      and\n        /* \"#utility.yul\":14071:14098   */\n      swap1\n      pop\n        /* \"#utility.yul\":14018:14104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14110:14228   */\n    tag_259:\n        /* \"#utility.yul\":14181:14203   */\n      tag_421\n        /* \"#utility.yul\":14197:14202   */\n      dup2\n        /* \"#utility.yul\":14181:14203   */\n      tag_258\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":14174:14179   */\n      dup2\n        /* \"#utility.yul\":14171:14204   */\n      eq\n        /* \"#utility.yul\":14161:14222   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":14218:14219   */\n      0x00\n        /* \"#utility.yul\":14215:14216   */\n      dup1\n        /* \"#utility.yul\":14208:14220   */\n      revert\n        /* \"#utility.yul\":14161:14222   */\n    tag_422:\n        /* \"#utility.yul\":14110:14228   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14234:14373   */\n    tag_260:\n        /* \"#utility.yul\":14289:14294   */\n      0x00\n        /* \"#utility.yul\":14320:14326   */\n      dup2\n        /* \"#utility.yul\":14314:14327   */\n      mload\n        /* \"#utility.yul\":14305:14327   */\n      swap1\n      pop\n        /* \"#utility.yul\":14336:14367   */\n      tag_424\n        /* \"#utility.yul\":14361:14366   */\n      dup2\n        /* \"#utility.yul\":14336:14367   */\n      tag_259\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14234:14373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14379:15650   */\n    tag_172:\n        /* \"#utility.yul\":14493:14499   */\n      0x00\n        /* \"#utility.yul\":14501:14507   */\n      dup1\n        /* \"#utility.yul\":14509:14515   */\n      0x00\n        /* \"#utility.yul\":14517:14523   */\n      dup1\n        /* \"#utility.yul\":14525:14531   */\n      0x00\n        /* \"#utility.yul\":14533:14539   */\n      dup1\n        /* \"#utility.yul\":14541:14547   */\n      0x00\n        /* \"#utility.yul\":14590:14593   */\n      0xe0\n        /* \"#utility.yul\":14578:14587   */\n      dup9\n        /* \"#utility.yul\":14569:14576   */\n      dup11\n        /* \"#utility.yul\":14565:14588   */\n      sub\n        /* \"#utility.yul\":14561:14594   */\n      slt\n        /* \"#utility.yul\":14558:14678   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":14597:14676   */\n      tag_427\n      tag_209\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":14558:14678   */\n    tag_426:\n        /* \"#utility.yul\":14717:14718   */\n      0x00\n        /* \"#utility.yul\":14742:14806   */\n      tag_428\n        /* \"#utility.yul\":14798:14805   */\n      dup11\n        /* \"#utility.yul\":14789:14795   */\n      dup3\n        /* \"#utility.yul\":14778:14787   */\n      dup12\n        /* \"#utility.yul\":14774:14796   */\n      add\n        /* \"#utility.yul\":14742:14806   */\n      tag_251\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":14732:14806   */\n      swap8\n      pop\n        /* \"#utility.yul\":14688:14816   */\n      pop\n        /* \"#utility.yul\":14855:14857   */\n      0x20\n        /* \"#utility.yul\":14881:14943   */\n      tag_429\n        /* \"#utility.yul\":14935:14942   */\n      dup11\n        /* \"#utility.yul\":14926:14932   */\n      dup3\n        /* \"#utility.yul\":14915:14924   */\n      dup12\n        /* \"#utility.yul\":14911:14933   */\n      add\n        /* \"#utility.yul\":14881:14943   */\n      tag_254\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":14871:14943   */\n      swap7\n      pop\n        /* \"#utility.yul\":14826:14953   */\n      pop\n        /* \"#utility.yul\":14992:14994   */\n      0x40\n        /* \"#utility.yul\":15018:15081   */\n      tag_430\n        /* \"#utility.yul\":15073:15080   */\n      dup11\n        /* \"#utility.yul\":15064:15070   */\n      dup3\n        /* \"#utility.yul\":15053:15062   */\n      dup12\n        /* \"#utility.yul\":15049:15071   */\n      add\n        /* \"#utility.yul\":15018:15081   */\n      tag_257\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15008:15081   */\n      swap6\n      pop\n        /* \"#utility.yul\":14963:15091   */\n      pop\n        /* \"#utility.yul\":15130:15132   */\n      0x60\n        /* \"#utility.yul\":15156:15219   */\n      tag_431\n        /* \"#utility.yul\":15211:15218   */\n      dup11\n        /* \"#utility.yul\":15202:15208   */\n      dup3\n        /* \"#utility.yul\":15191:15200   */\n      dup12\n        /* \"#utility.yul\":15187:15209   */\n      add\n        /* \"#utility.yul\":15156:15219   */\n      tag_257\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":15146:15219   */\n      swap5\n      pop\n        /* \"#utility.yul\":15101:15229   */\n      pop\n        /* \"#utility.yul\":15268:15271   */\n      0x80\n        /* \"#utility.yul\":15295:15358   */\n      tag_432\n        /* \"#utility.yul\":15350:15357   */\n      dup11\n        /* \"#utility.yul\":15341:15347   */\n      dup3\n        /* \"#utility.yul\":15330:15339   */\n      dup12\n        /* \"#utility.yul\":15326:15348   */\n      add\n        /* \"#utility.yul\":15295:15358   */\n      tag_257\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15285:15358   */\n      swap4\n      pop\n        /* \"#utility.yul\":15239:15368   */\n      pop\n        /* \"#utility.yul\":15407:15410   */\n      0xa0\n        /* \"#utility.yul\":15434:15496   */\n      tag_433\n        /* \"#utility.yul\":15488:15495   */\n      dup11\n        /* \"#utility.yul\":15479:15485   */\n      dup3\n        /* \"#utility.yul\":15468:15477   */\n      dup12\n        /* \"#utility.yul\":15464:15486   */\n      add\n        /* \"#utility.yul\":15434:15496   */\n      tag_260\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":15424:15496   */\n      swap3\n      pop\n        /* \"#utility.yul\":15378:15506   */\n      pop\n        /* \"#utility.yul\":15545:15548   */\n      0xc0\n        /* \"#utility.yul\":15572:15633   */\n      tag_434\n        /* \"#utility.yul\":15625:15632   */\n      dup11\n        /* \"#utility.yul\":15616:15622   */\n      dup3\n        /* \"#utility.yul\":15605:15614   */\n      dup12\n        /* \"#utility.yul\":15601:15623   */\n      add\n        /* \"#utility.yul\":15572:15633   */\n      tag_239\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":15562:15633   */\n      swap2\n      pop\n        /* \"#utility.yul\":15516:15643   */\n      pop\n        /* \"#utility.yul\":14379:15650   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15656:16066   */\n    tag_174:\n        /* \"#utility.yul\":15696:15703   */\n      0x00\n        /* \"#utility.yul\":15719:15739   */\n      tag_436\n        /* \"#utility.yul\":15737:15738   */\n      dup3\n        /* \"#utility.yul\":15719:15739   */\n      tag_211\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":15714:15739   */\n      swap2\n      pop\n        /* \"#utility.yul\":15753:15773   */\n      tag_437\n        /* \"#utility.yul\":15771:15772   */\n      dup4\n        /* \"#utility.yul\":15753:15773   */\n      tag_211\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":15748:15773   */\n      swap3\n      pop\n        /* \"#utility.yul\":15808:15809   */\n      dup3\n        /* \"#utility.yul\":15805:15806   */\n      dup3\n        /* \"#utility.yul\":15801:15810   */\n      mul\n        /* \"#utility.yul\":15830:15860   */\n      tag_438\n        /* \"#utility.yul\":15848:15859   */\n      dup2\n        /* \"#utility.yul\":15830:15860   */\n      tag_211\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":15819:15860   */\n      swap2\n      pop\n        /* \"#utility.yul\":16009:16010   */\n      dup3\n        /* \"#utility.yul\":16000:16007   */\n      dup3\n        /* \"#utility.yul\":15996:16011   */\n      div\n        /* \"#utility.yul\":15993:15994   */\n      dup5\n        /* \"#utility.yul\":15990:16012   */\n      eq\n        /* \"#utility.yul\":15970:15971   */\n      dup4\n        /* \"#utility.yul\":15963:15972   */\n      iszero\n        /* \"#utility.yul\":15943:16026   */\n      or\n        /* \"#utility.yul\":15920:16059   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":16039:16057   */\n      tag_440\n      tag_245\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15920:16059   */\n    tag_439:\n        /* \"#utility.yul\":15704:16066   */\n      pop\n        /* \"#utility.yul\":15656:16066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16072:16252   */\n    tag_261:\n        /* \"#utility.yul\":16120:16197   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16117:16118   */\n      0x00\n        /* \"#utility.yul\":16110:16198   */\n      mstore\n        /* \"#utility.yul\":16217:16221   */\n      0x12\n        /* \"#utility.yul\":16214:16215   */\n      0x04\n        /* \"#utility.yul\":16207:16222   */\n      mstore\n        /* \"#utility.yul\":16241:16245   */\n      0x24\n        /* \"#utility.yul\":16238:16239   */\n      0x00\n        /* \"#utility.yul\":16231:16246   */\n      revert\n        /* \"#utility.yul\":16258:16443   */\n    tag_176:\n        /* \"#utility.yul\":16298:16299   */\n      0x00\n        /* \"#utility.yul\":16315:16335   */\n      tag_443\n        /* \"#utility.yul\":16333:16334   */\n      dup3\n        /* \"#utility.yul\":16315:16335   */\n      tag_211\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":16310:16335   */\n      swap2\n      pop\n        /* \"#utility.yul\":16349:16369   */\n      tag_444\n        /* \"#utility.yul\":16367:16368   */\n      dup4\n        /* \"#utility.yul\":16349:16369   */\n      tag_211\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":16344:16369   */\n      swap3\n      pop\n        /* \"#utility.yul\":16388:16389   */\n      dup3\n        /* \"#utility.yul\":16378:16413   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":16393:16411   */\n      tag_446\n      tag_261\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16378:16413   */\n    tag_445:\n        /* \"#utility.yul\":16435:16436   */\n      dup3\n        /* \"#utility.yul\":16432:16433   */\n      dup3\n        /* \"#utility.yul\":16428:16437   */\n      div\n        /* \"#utility.yul\":16423:16437   */\n      swap1\n      pop\n        /* \"#utility.yul\":16258:16443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16449:16624   */\n    tag_262:\n        /* \"#utility.yul\":16589:16616   */\n      0x574554482062616c616e63654f66206e6f7420656e6f75676800000000000000\n        /* \"#utility.yul\":16585:16586   */\n      0x00\n        /* \"#utility.yul\":16577:16583   */\n      dup3\n        /* \"#utility.yul\":16573:16587   */\n      add\n        /* \"#utility.yul\":16566:16617   */\n      mstore\n        /* \"#utility.yul\":16449:16624   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16630:16996   */\n    tag_263:\n        /* \"#utility.yul\":16772:16775   */\n      0x00\n        /* \"#utility.yul\":16793:16860   */\n      tag_449\n        /* \"#utility.yul\":16857:16859   */\n      0x19\n        /* \"#utility.yul\":16852:16855   */\n      dup4\n        /* \"#utility.yul\":16793:16860   */\n      tag_218\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":16786:16860   */\n      swap2\n      pop\n        /* \"#utility.yul\":16869:16962   */\n      tag_450\n        /* \"#utility.yul\":16958:16961   */\n      dup3\n        /* \"#utility.yul\":16869:16962   */\n      tag_262\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":16987:16989   */\n      0x20\n        /* \"#utility.yul\":16982:16985   */\n      dup3\n        /* \"#utility.yul\":16978:16990   */\n      add\n        /* \"#utility.yul\":16971:16990   */\n      swap1\n      pop\n        /* \"#utility.yul\":16630:16996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17002:17421   */\n    tag_188:\n        /* \"#utility.yul\":17168:17172   */\n      0x00\n        /* \"#utility.yul\":17206:17208   */\n      0x20\n        /* \"#utility.yul\":17195:17204   */\n      dup3\n        /* \"#utility.yul\":17191:17209   */\n      add\n        /* \"#utility.yul\":17183:17209   */\n      swap1\n      pop\n        /* \"#utility.yul\":17255:17264   */\n      dup2\n        /* \"#utility.yul\":17249:17253   */\n      dup2\n        /* \"#utility.yul\":17245:17265   */\n      sub\n        /* \"#utility.yul\":17241:17242   */\n      0x00\n        /* \"#utility.yul\":17230:17239   */\n      dup4\n        /* \"#utility.yul\":17226:17243   */\n      add\n        /* \"#utility.yul\":17219:17266   */\n      mstore\n        /* \"#utility.yul\":17283:17414   */\n      tag_452\n        /* \"#utility.yul\":17409:17413   */\n      dup2\n        /* \"#utility.yul\":17283:17414   */\n      tag_263\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":17275:17414   */\n      swap1\n      pop\n        /* \"#utility.yul\":17002:17421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17427:18028   */\n    tag_194:\n        /* \"#utility.yul\":17628:17632   */\n      0x00\n        /* \"#utility.yul\":17666:17669   */\n      0x80\n        /* \"#utility.yul\":17655:17664   */\n      dup3\n        /* \"#utility.yul\":17651:17670   */\n      add\n        /* \"#utility.yul\":17643:17670   */\n      swap1\n      pop\n        /* \"#utility.yul\":17680:17759   */\n      tag_454\n        /* \"#utility.yul\":17756:17757   */\n      0x00\n        /* \"#utility.yul\":17745:17754   */\n      dup4\n        /* \"#utility.yul\":17741:17758   */\n      add\n        /* \"#utility.yul\":17732:17738   */\n      dup8\n        /* \"#utility.yul\":17680:17759   */\n      tag_230\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":17769:17849   */\n      tag_455\n        /* \"#utility.yul\":17845:17847   */\n      0x20\n        /* \"#utility.yul\":17834:17843   */\n      dup4\n        /* \"#utility.yul\":17830:17848   */\n      add\n        /* \"#utility.yul\":17821:17827   */\n      dup7\n        /* \"#utility.yul\":17769:17849   */\n      tag_227\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":17859:17931   */\n      tag_456\n        /* \"#utility.yul\":17927:17929   */\n      0x40\n        /* \"#utility.yul\":17916:17925   */\n      dup4\n        /* \"#utility.yul\":17912:17930   */\n      add\n        /* \"#utility.yul\":17903:17909   */\n      dup6\n        /* \"#utility.yul\":17859:17931   */\n      tag_214\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":17941:18021   */\n      tag_457\n        /* \"#utility.yul\":18017:18019   */\n      0x60\n        /* \"#utility.yul\":18006:18015   */\n      dup4\n        /* \"#utility.yul\":18002:18020   */\n      add\n        /* \"#utility.yul\":17993:17999   */\n      dup5\n        /* \"#utility.yul\":17941:18021   */\n      tag_242\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":17427:18028   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18034:18142   */\n    tag_264:\n        /* \"#utility.yul\":18111:18135   */\n      tag_459\n        /* \"#utility.yul\":18129:18134   */\n      dup2\n        /* \"#utility.yul\":18111:18135   */\n      tag_216\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":18106:18109   */\n      dup3\n        /* \"#utility.yul\":18099:18136   */\n      mstore\n        /* \"#utility.yul\":18034:18142   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18148:18253   */\n    tag_265:\n        /* \"#utility.yul\":18223:18246   */\n      tag_461\n        /* \"#utility.yul\":18240:18245   */\n      dup2\n        /* \"#utility.yul\":18223:18246   */\n      tag_247\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18218:18221   */\n      dup3\n        /* \"#utility.yul\":18211:18247   */\n      mstore\n        /* \"#utility.yul\":18148:18253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18259:18367   */\n    tag_266:\n        /* \"#utility.yul\":18336:18360   */\n      tag_463\n        /* \"#utility.yul\":18354:18359   */\n      dup2\n        /* \"#utility.yul\":18336:18360   */\n      tag_211\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":18331:18334   */\n      dup3\n        /* \"#utility.yul\":18324:18361   */\n      mstore\n        /* \"#utility.yul\":18259:18367   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18373:18481   */\n    tag_267:\n        /* \"#utility.yul\":18450:18474   */\n      tag_465\n        /* \"#utility.yul\":18468:18473   */\n      dup2\n        /* \"#utility.yul\":18450:18474   */\n      tag_215\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18445:18448   */\n      dup3\n        /* \"#utility.yul\":18438:18475   */\n      mstore\n        /* \"#utility.yul\":18373:18481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18581:20206   */\n    tag_268:\n        /* \"#utility.yul\":18758:18764   */\n      0x0100\n        /* \"#utility.yul\":18753:18756   */\n      dup3\n        /* \"#utility.yul\":18749:18765   */\n      add\n        /* \"#utility.yul\":18850:18854   */\n      0x00\n        /* \"#utility.yul\":18843:18848   */\n      dup3\n        /* \"#utility.yul\":18839:18855   */\n      add\n        /* \"#utility.yul\":18833:18856   */\n      mload\n        /* \"#utility.yul\":18869:18932   */\n      tag_467\n        /* \"#utility.yul\":18926:18930   */\n      0x00\n        /* \"#utility.yul\":18921:18924   */\n      dup6\n        /* \"#utility.yul\":18917:18931   */\n      add\n        /* \"#utility.yul\":18903:18915   */\n      dup3\n        /* \"#utility.yul\":18869:18932   */\n      tag_264\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":18775:18942   */\n      pop\n        /* \"#utility.yul\":19028:19032   */\n      0x20\n        /* \"#utility.yul\":19021:19026   */\n      dup3\n        /* \"#utility.yul\":19017:19033   */\n      add\n        /* \"#utility.yul\":19011:19034   */\n      mload\n        /* \"#utility.yul\":19047:19110   */\n      tag_468\n        /* \"#utility.yul\":19104:19108   */\n      0x20\n        /* \"#utility.yul\":19099:19102   */\n      dup6\n        /* \"#utility.yul\":19095:19109   */\n      add\n        /* \"#utility.yul\":19081:19093   */\n      dup3\n        /* \"#utility.yul\":19047:19110   */\n      tag_264\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":18952:19120   */\n      pop\n        /* \"#utility.yul\":19201:19205   */\n      0x40\n        /* \"#utility.yul\":19194:19199   */\n      dup3\n        /* \"#utility.yul\":19190:19206   */\n      add\n        /* \"#utility.yul\":19184:19207   */\n      mload\n        /* \"#utility.yul\":19220:19281   */\n      tag_469\n        /* \"#utility.yul\":19275:19279   */\n      0x40\n        /* \"#utility.yul\":19270:19273   */\n      dup6\n        /* \"#utility.yul\":19266:19280   */\n      add\n        /* \"#utility.yul\":19252:19264   */\n      dup3\n        /* \"#utility.yul\":19220:19281   */\n      tag_265\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19130:19291   */\n      pop\n        /* \"#utility.yul\":19378:19382   */\n      0x60\n        /* \"#utility.yul\":19371:19376   */\n      dup3\n        /* \"#utility.yul\":19367:19383   */\n      add\n        /* \"#utility.yul\":19361:19384   */\n      mload\n        /* \"#utility.yul\":19397:19460   */\n      tag_470\n        /* \"#utility.yul\":19454:19458   */\n      0x60\n        /* \"#utility.yul\":19449:19452   */\n      dup6\n        /* \"#utility.yul\":19445:19459   */\n      add\n        /* \"#utility.yul\":19431:19443   */\n      dup3\n        /* \"#utility.yul\":19397:19460   */\n      tag_264\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":19301:19470   */\n      pop\n        /* \"#utility.yul\":19556:19560   */\n      0x80\n        /* \"#utility.yul\":19549:19554   */\n      dup3\n        /* \"#utility.yul\":19545:19561   */\n      add\n        /* \"#utility.yul\":19539:19562   */\n      mload\n        /* \"#utility.yul\":19575:19638   */\n      tag_471\n        /* \"#utility.yul\":19632:19636   */\n      0x80\n        /* \"#utility.yul\":19627:19630   */\n      dup6\n        /* \"#utility.yul\":19623:19637   */\n      add\n        /* \"#utility.yul\":19609:19621   */\n      dup3\n        /* \"#utility.yul\":19575:19638   */\n      tag_266\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":19480:19648   */\n      pop\n        /* \"#utility.yul\":19734:19738   */\n      0xa0\n        /* \"#utility.yul\":19727:19732   */\n      dup3\n        /* \"#utility.yul\":19723:19739   */\n      add\n        /* \"#utility.yul\":19717:19740   */\n      mload\n        /* \"#utility.yul\":19753:19816   */\n      tag_472\n        /* \"#utility.yul\":19810:19814   */\n      0xa0\n        /* \"#utility.yul\":19805:19808   */\n      dup6\n        /* \"#utility.yul\":19801:19815   */\n      add\n        /* \"#utility.yul\":19787:19799   */\n      dup3\n        /* \"#utility.yul\":19753:19816   */\n      tag_266\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":19658:19826   */\n      pop\n        /* \"#utility.yul\":19920:19924   */\n      0xc0\n        /* \"#utility.yul\":19913:19918   */\n      dup3\n        /* \"#utility.yul\":19909:19925   */\n      add\n        /* \"#utility.yul\":19903:19926   */\n      mload\n        /* \"#utility.yul\":19939:20002   */\n      tag_473\n        /* \"#utility.yul\":19996:20000   */\n      0xc0\n        /* \"#utility.yul\":19991:19994   */\n      dup6\n        /* \"#utility.yul\":19987:20001   */\n      add\n        /* \"#utility.yul\":19973:19985   */\n      dup3\n        /* \"#utility.yul\":19939:20002   */\n      tag_266\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19836:20012   */\n      pop\n        /* \"#utility.yul\":20107:20111   */\n      0xe0\n        /* \"#utility.yul\":20100:20105   */\n      dup3\n        /* \"#utility.yul\":20096:20112   */\n      add\n        /* \"#utility.yul\":20090:20113   */\n      mload\n        /* \"#utility.yul\":20126:20189   */\n      tag_474\n        /* \"#utility.yul\":20183:20187   */\n      0xe0\n        /* \"#utility.yul\":20178:20181   */\n      dup6\n        /* \"#utility.yul\":20174:20188   */\n      add\n        /* \"#utility.yul\":20160:20172   */\n      dup3\n        /* \"#utility.yul\":20126:20189   */\n      tag_267\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":20022:20199   */\n      pop\n        /* \"#utility.yul\":18727:20206   */\n      pop\n        /* \"#utility.yul\":18581:20206   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20212:20595   */\n    tag_204:\n        /* \"#utility.yul\":20385:20389   */\n      0x00\n        /* \"#utility.yul\":20423:20426   */\n      0x0100\n        /* \"#utility.yul\":20412:20421   */\n      dup3\n        /* \"#utility.yul\":20408:20427   */\n      add\n        /* \"#utility.yul\":20400:20427   */\n      swap1\n      pop\n        /* \"#utility.yul\":20437:20588   */\n      tag_476\n        /* \"#utility.yul\":20585:20586   */\n      0x00\n        /* \"#utility.yul\":20574:20583   */\n      dup4\n        /* \"#utility.yul\":20570:20587   */\n      add\n        /* \"#utility.yul\":20561:20567   */\n      dup5\n        /* \"#utility.yul\":20437:20588   */\n      tag_268\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":20212:20595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200dbd87a6a4adc3fc63d0029a371f21c480d9ca79cfe307d90a4826e5052e9ede64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_47": {
									"entryPoint": null,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ebc8061005b5f395ff3fe608060405260043610610085575f3560e01c806364084ac01161005857806364084ac014610147578063793c084514610183578063926446db146101bf578063bbceefe3146101fb578063cc9901aa1461023757610085565b8063064a8a8a146100895780631de3df2c146100c55780633eb61c1c146100cf57806354258cc41461010b575b5f80fd5b348015610094575f80fd5b506100af60048036038101906100aa91906114d1565b610273565b6040516100bc919061150b565b60405180910390f35b6100cd61040d565b005b3480156100da575f80fd5b506100f560048036038101906100f091906114d1565b610480565b604051610102919061150b565b60405180910390f35b348015610116575f80fd5b50610131600480360381019061012c91906114d1565b610519565b60405161013e919061150b565b60405180910390f35b348015610152575f80fd5b5061016d600480360381019061016891906114d1565b6106b3565b60405161017a9190611563565b60405180910390f35b34801561018e575f80fd5b506101a960048036038101906101a491906114d1565b610747565b6040516101b6919061150b565b60405180910390f35b3480156101ca575f80fd5b506101e560048036038101906101e091906114d1565b6109e4565b6040516101f2919061150b565b60405180910390f35b348015610206575f80fd5b50610221600480360381019061021c91906114d1565b610e8c565b60405161022e919061150b565b60405180910390f35b348015610242575f80fd5b5061025d600480360381019061025891906114d1565b61103a565b60405161026a919061150b565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610302576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f9906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103509190611563565b602060405180830381865afa15801561036b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038f919061162e565b10156103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c7906116a3565b60405180910390fd5b61040673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb8856112d7565b9050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015610467575f80fd5b505af1158015610479573d5f803e3d5ffd5b5050505050565b5f737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff1663556d6e9f5f6002856040518463ffffffff1660e01b81526004016104d39392919061173c565b602060405180830381865afa1580156104ee573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610512919061162e565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f906115fc565b60405180910390fd5b8173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105f69190611563565b602060405180830381865afa158015610611573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610635919061162e565b1015610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d906117bb565b60405180910390fd5b6106ac73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610bb8856112d7565b9050919050565b5f737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff1663c6610657836040518263ffffffff1660e01b8152600401610701919061150b565b602060405180830381865afa15801561071c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107409190611803565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cd906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108249190611563565b602060405180830381865afa15801561083f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610863919061162e565b10156108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90611878565b60405180910390fd5b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737f86bf177dd4f3494b841a37e810a34dd56c829b846040518363ffffffff1660e01b8152600401610907929190611896565b6020604051808303815f875af1158015610923573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094791906118f2565b50737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff16635b41b9085f60028560016040518563ffffffff1660e01b815260040161099d9493929190611956565b6020604051808303815f875af11580156109b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109dd919061162e565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6a906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ac19190611563565b602060405180830381865afa158015610adc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b00919061162e565b1015610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3890611878565b60405180910390fd5b5f805f3073ffffffffffffffffffffffffffffffffffffffff1663bbceefe3836040518263ffffffff1660e01b8152600401610b7d919061150b565b602060405180830381865afa158015610b98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbc919061162e565b90505f3073ffffffffffffffffffffffffffffffffffffffff16633eb61c1c876040518263ffffffff1660e01b8152600401610bf8919061150b565b602060405180830381865afa158015610c13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c37919061162e565b905080821115610d3c573073ffffffffffffffffffffffffffffffffffffffff1663064a8a8a876040518263ffffffff1660e01b8152600401610c7a919061150b565b6020604051808303815f875af1158015610c96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cba919061162e565b93503073ffffffffffffffffffffffffffffffffffffffff1663cc9901aa856040518263ffffffff1660e01b8152600401610cf5919061150b565b6020604051808303815f875af1158015610d11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d35919061162e565b9250610e33565b3073ffffffffffffffffffffffffffffffffffffffff1663793c0845876040518263ffffffff1660e01b8152600401610d75919061150b565b6020604051808303815f875af1158015610d91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db5919061162e565b93503073ffffffffffffffffffffffffffffffffffffffff166354258cc4856040518263ffffffff1660e01b8152600401610df0919061150b565b6020604051808303815f875af1158015610e0c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e30919061162e565b92505b858311610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c906119e3565b60405180910390fd5b8583610e819190611a2e565b945050505050919050565b5f80731f98431c8ad98523631ae4a59f267346ea31f98473ffffffffffffffffffffffffffffffffffffffff16631698ee8273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb86040518463ffffffff1660e01b8152600401610f0993929190611aa8565b602060405180830381865afa158015610f24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f489190611803565b90505f8190505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610f98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fbc9190611baa565b50505050505090505f78010000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166110179190611c47565b6110219190611cb5565b9050808661102f9190611c47565b945050505050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c0906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111179190611563565b602060405180830381865afa158015611132573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611156919061162e565b1015611197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118e90611d2f565b60405180910390fd5b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737f86bf177dd4f3494b841a37e810a34dd56c829b846040518363ffffffff1660e01b81526004016111fa929190611896565b6020604051808303815f875af1158015611216573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123a91906118f2565b50737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff16635b41b90860025f8560016040518563ffffffff1660e01b81526004016112909493929190611d4d565b6020604051808303815f875af11580156112ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112d0919061162e565b9050919050565b5f8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b373e592427a0aece92de3edee1f18e0157c05861564846040518363ffffffff1660e01b8152600401611327929190611896565b6020604051808303815f875af1158015611343573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061136791906118f2565b505f6040518061010001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018562ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161144f9190611e6c565b6020604051808303815f875af115801561146b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148f919061162e565b915050949350505050565b5f80fd5b5f819050919050565b6114b08161149e565b81146114ba575f80fd5b50565b5f813590506114cb816114a7565b92915050565b5f602082840312156114e6576114e561149a565b5b5f6114f3848285016114bd565b91505092915050565b6115058161149e565b82525050565b5f60208201905061151e5f8301846114fc565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61154d82611524565b9050919050565b61155d81611543565b82525050565b5f6020820190506115765f830184611554565b92915050565b5f82825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f5f8201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b5f6115e660228361157c565b91506115f18261158c565b604082019050919050565b5f6020820190508181035f830152611613816115da565b9050919050565b5f81519050611628816114a7565b92915050565b5f602082840312156116435761164261149a565b5b5f6116508482850161161a565b91505092915050565b7f555344432062616c73656e63654f46206e6f7420656e6f7567680000000000005f82015250565b5f61168d601a8361157c565b915061169882611659565b602082019050919050565b5f6020820190508181035f8301526116ba81611681565b9050919050565b5f819050919050565b5f819050919050565b5f6116ed6116e86116e3846116c1565b6116ca565b61149e565b9050919050565b6116fd816116d3565b82525050565b5f819050919050565b5f61172661172161171c84611703565b6116ca565b61149e565b9050919050565b6117368161170c565b82525050565b5f60608201905061174f5f8301866116f4565b61175c602083018561172d565b61176960408301846114fc565b949350505050565b7f574554482062616c73656e63654f46206e6f7420656e6f7567680000000000005f82015250565b5f6117a5601a8361157c565b91506117b082611771565b602082019050919050565b5f6020820190508181035f8301526117d281611799565b9050919050565b6117e281611543565b81146117ec575f80fd5b50565b5f815190506117fd816117d9565b92915050565b5f602082840312156118185761181761149a565b5b5f611825848285016117ef565b91505092915050565b7f555344432062616c616e63654f66206e6f7420656e6f756768000000000000005f82015250565b5f61186260198361157c565b915061186d8261182e565b602082019050919050565b5f6020820190508181035f83015261188f81611856565b9050919050565b5f6040820190506118a95f830185611554565b6118b660208301846114fc565b9392505050565b5f8115159050919050565b6118d1816118bd565b81146118db575f80fd5b50565b5f815190506118ec816118c8565b92915050565b5f602082840312156119075761190661149a565b5b5f611914848285016118de565b91505092915050565b5f819050919050565b5f61194061193b6119368461191d565b6116ca565b61149e565b9050919050565b61195081611926565b82525050565b5f6080820190506119695f8301876116f4565b611976602083018661172d565b61198360408301856114fc565b6119906060830184611947565b95945050505050565b7f4172626974726167652070726f666974203c3d300000000000000000000000005f82015250565b5f6119cd60148361157c565b91506119d882611999565b602082019050919050565b5f6020820190508181035f8301526119fa816119c1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a388261149e565b9150611a438361149e565b9250828203905081811115611a5b57611a5a611a01565b5b92915050565b5f819050919050565b5f62ffffff82169050919050565b5f611a92611a8d611a8884611a61565b6116ca565b611a6a565b9050919050565b611aa281611a78565b82525050565b5f606082019050611abb5f830186611554565b611ac86020830185611554565b611ad56040830184611a99565b949350505050565b611ae681611524565b8114611af0575f80fd5b50565b5f81519050611b0181611add565b92915050565b5f8160020b9050919050565b611b1c81611b07565b8114611b26575f80fd5b50565b5f81519050611b3781611b13565b92915050565b5f61ffff82169050919050565b611b5381611b3d565b8114611b5d575f80fd5b50565b5f81519050611b6e81611b4a565b92915050565b5f60ff82169050919050565b611b8981611b74565b8114611b93575f80fd5b50565b5f81519050611ba481611b80565b92915050565b5f805f805f805f60e0888a031215611bc557611bc461149a565b5b5f611bd28a828b01611af3565b9750506020611be38a828b01611b29565b9650506040611bf48a828b01611b60565b9550506060611c058a828b01611b60565b9450506080611c168a828b01611b60565b93505060a0611c278a828b01611b96565b92505060c0611c388a828b016118de565b91505092959891949750929550565b5f611c518261149e565b9150611c5c8361149e565b9250828202611c6a8161149e565b91508282048414831517611c8157611c80611a01565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611cbf8261149e565b9150611cca8361149e565b925082611cda57611cd9611c88565b5b828204905092915050565b7f574554482062616c616e63654f66206e6f7420656e6f756768000000000000005f82015250565b5f611d1960198361157c565b9150611d2482611ce5565b602082019050919050565b5f6020820190508181035f830152611d4681611d0d565b9050919050565b5f608082019050611d605f83018761172d565b611d6d60208301866116f4565b611d7a60408301856114fc565b611d876060830184611947565b95945050505050565b611d9981611543565b82525050565b611da881611a6a565b82525050565b611db78161149e565b82525050565b611dc681611524565b82525050565b61010082015f820151611de15f850182611d90565b506020820151611df46020850182611d90565b506040820151611e076040850182611d9f565b506060820151611e1a6060850182611d90565b506080820151611e2d6080850182611dae565b5060a0820151611e4060a0850182611dae565b5060c0820151611e5360c0850182611dae565b5060e0820151611e6660e0850182611dbd565b50505050565b5f61010082019050611e805f830184611dcc565b9291505056fea26469706673582212200dbd87a6a4adc3fc63d0029a371f21c480d9ca79cfe307d90a4826e5052e9ede64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1EBC DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64084AC0 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x64084AC0 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x793C0845 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x926446DB EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xBBCEEFE3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xCC9901AA EQ PUSH2 0x237 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x64A8A8A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1DE3DF2C EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x3EB61C1C EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x54258CC4 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C7 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x406 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 DUP6 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x556D6E9F PUSH0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4EE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH2 0xBB8 DUP6 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6610657 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89B SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP3 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x923 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x947 SWAP2 SWAP1 PUSH2 0x18F2 JUMP JUMPDEST POP PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5B41B908 PUSH0 PUSH1 0x2 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB38 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBBCEEFE3 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3EB61C1C DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC13 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD3C JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x64A8A8A DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP4 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCC9901AA DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD35 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP3 POP PUSH2 0xE33 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x793C0845 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP4 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54258CC4 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP3 POP JUMPDEST DUP6 DUP4 GT PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP4 PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0x1F98431C8AD98523631AE4A59F267346EA31F984 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF24 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF48 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x1021 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH2 0x102F SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C0 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1132 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1156 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP1 PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP3 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1216 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x18F2 JUMP JUMPDEST POP PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5B41B908 PUSH1 0x2 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1327 SWAP3 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x18F2 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x146B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B0 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP2 EQ PUSH2 0x14BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CB DUP2 PUSH2 0x14A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E6 JUMPI PUSH2 0x14E5 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F3 DUP5 DUP3 DUP6 ADD PUSH2 0x14BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1505 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151E PUSH0 DUP4 ADD DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x154D DUP3 PUSH2 0x1524 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x1543 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1576 PUSH0 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E2E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15E6 PUSH1 0x22 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x15F1 DUP3 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1613 DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1628 DUP2 PUSH2 0x14A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1650 DUP5 DUP3 DUP6 ADD PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555344432062616C73656E63654F46206E6F7420656E6F756768000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x168D PUSH1 0x1A DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x1698 DUP3 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16BA DUP2 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH2 0x16E8 PUSH2 0x16E3 DUP5 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FD DUP2 PUSH2 0x16D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1726 PUSH2 0x1721 PUSH2 0x171C DUP5 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1736 DUP2 PUSH2 0x170C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x174F PUSH0 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x175C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1769 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x574554482062616C73656E63654F46206E6F7420656E6F756768000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17A5 PUSH1 0x1A DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x17B0 DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D2 DUP2 PUSH2 0x1799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1543 JUMP JUMPDEST DUP2 EQ PUSH2 0x17EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17FD DUP2 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1818 JUMPI PUSH2 0x1817 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1825 DUP5 DUP3 DUP6 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555344432062616C616E63654F66206E6F7420656E6F75676800000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1862 PUSH1 0x19 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x186D DUP3 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188F DUP2 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x18B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D1 DUP2 PUSH2 0x18BD JUMP JUMPDEST DUP2 EQ PUSH2 0x18DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18EC DUP2 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1914 DUP5 DUP3 DUP6 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1940 PUSH2 0x193B PUSH2 0x1936 DUP5 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1950 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1969 PUSH0 DUP4 ADD DUP8 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x1976 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1983 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x1990 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1947 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4172626974726167652070726F666974203C3D30000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19CD PUSH1 0x14 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x19D8 DUP3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19FA DUP2 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A38 DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP4 PUSH2 0x149E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A5B JUMPI PUSH2 0x1A5A PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A92 PUSH2 0x1A8D PUSH2 0x1A88 DUP5 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x1A6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x1A78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH0 DUP4 ADD DUP7 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1AC8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A99 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x1524 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1C DUP2 PUSH2 0x1B07 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B37 DUP2 PUSH2 0x1B13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B6E DUP2 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B89 DUP2 PUSH2 0x1B74 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BA4 DUP2 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD2 DUP11 DUP3 DUP12 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1BE3 DUP11 DUP3 DUP12 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1BF4 DUP11 DUP3 DUP12 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C05 DUP11 DUP3 DUP12 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C16 DUP11 DUP3 DUP12 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C27 DUP11 DUP3 DUP12 ADD PUSH2 0x1B96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C38 DUP11 DUP3 DUP12 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP4 PUSH2 0x149E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C6A DUP2 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CBF DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCA DUP4 PUSH2 0x149E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C88 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x574554482062616C616E63654F66206E6F7420656E6F75676800000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D19 PUSH1 0x19 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D24 DUP3 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D46 DUP2 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D60 PUSH0 DUP4 ADD DUP8 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1D6D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x1D7A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x1D87 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1947 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D99 DUP2 PUSH2 0x1543 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x1A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DB7 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DC6 DUP2 PUSH2 0x1524 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1DE1 PUSH0 DUP6 ADD DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1DF4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1E07 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1D9F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1E1A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1E2D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1DAE JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1E40 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1DAE JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1E53 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1DAE JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1E66 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1DBD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1E80 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xBD DUP8 0xA6 LOG4 0xAD 0xC3 0xFC PUSH4 0xD0029A37 0x1F 0x21 0xC4 DUP1 0xD9 0xCA PUSH26 0xCFE307D90A4826E5052E9EDE64736F6C634300081A0033000000 ",
							"sourceMap": "928:4317:1:-:0;;;971:49;;;;;;;;;;1003:10;995:5;;:18;;;;;;;;;;;;;;;;;;928:4317;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyWETHOnCurve_437": {
									"entryPoint": 1863,
									"id": 437,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyWETHOnUniswap_312": {
									"entryPoint": 627,
									"id": 312,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositWETH_185": {
									"entryPoint": 1037,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@exactueArbitrage_149": {
									"entryPoint": 2532,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAmountOutCurve_501": {
									"entryPoint": 1152,
									"id": 501,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAmountOutUniswapV3_371": {
									"entryPoint": 3724,
									"id": 371,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCoinsFromCurvePool_390": {
									"entryPoint": 1715,
									"id": 390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sellWETHOnCurve_484": {
									"entryPoint": 4154,
									"id": 484,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sellWETHOnUniswap_274": {
									"entryPoint": 1305,
									"id": 274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactInputSingleHop_236": {
									"entryPoint": 4823,
									"id": 236,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 7082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_2_by_1_to_t_uint256_fromStack": {
									"entryPoint": 5933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$1464_memory_ptr_to_t_struct$_ExactInputSingleParams_$1464_memory_ptr_fromStack": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_rational_2_by_1_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_rational_2_by_1_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_2_by_1_t_rational_0_by_1_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$1464_memory_ptr__to_t_struct$_ExactInputSingleParams_$1464_memory_ptr__fromStack_reversed": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 5825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_2_by_1": {
									"entryPoint": 5891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_3000_by_1": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 6973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 5843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_2_by_1_to_t_uint256": {
									"entryPoint": 5900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_3000_by_1_to_t_uint24": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4": {
									"entryPoint": 5721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 6931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20598:9",
										"nodeType": "YulBlock",
										"src": "0:20598:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:32:9",
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nativeSrc": "389:16:9",
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:9",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nativeSrc": "460:79:9",
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:9",
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nativeSrc": "519:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nativeSrc": "519:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nativeSrc": "490:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nativeSrc": "480:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nativeSrc": "473:43:9",
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nativeSrc": "470:63:9",
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:9",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nativeSrc": "597:87:9",
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nativeSrc": "607:29:9",
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nativeSrc": "616:20:9",
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nativeSrc": "645:33:9",
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nativeSrc": "645:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:9",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:9",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:9",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nativeSrc": "756:263:9",
													"nodeType": "YulBlock",
													"src": "756:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:9",
																"nodeType": "YulBlock",
																"src": "802:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:9"
																			},
																			"nativeSrc": "804:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:9"
																		},
																		"nativeSrc": "804:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:9"
																		},
																		"nativeSrc": "773:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:9",
																		"nodeType": "YulLiteral",
																		"src": "798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:9"
																},
																"nativeSrc": "769:32:9",
																"nodeType": "YulFunctionCall",
																"src": "769:32:9"
															},
															"nativeSrc": "766:119:9",
															"nodeType": "YulIf",
															"src": "766:119:9"
														},
														{
															"nativeSrc": "895:117:9",
															"nodeType": "YulBlock",
															"src": "895:117:9",
															"statements": [
																{
																	"nativeSrc": "910:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:9",
																		"nodeType": "YulLiteral",
																		"src": "924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:9",
																			"nodeType": "YulTypedName",
																			"src": "914:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:9",
																	"nodeType": "YulAssignment",
																	"src": "939:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:9"
																				},
																				"nativeSrc": "970:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:9"
																		},
																		"nativeSrc": "949:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:9",
														"nodeType": "YulTypedName",
														"src": "726:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:9",
														"nodeType": "YulTypedName",
														"src": "737:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:9",
														"nodeType": "YulTypedName",
														"src": "749:6:9",
														"type": ""
													}
												],
												"src": "690:329:9"
											},
											{
												"body": {
													"nativeSrc": "1090:53:9",
													"nodeType": "YulBlock",
													"src": "1090:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:9"
																		},
																		"nativeSrc": "1112:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:9"
																},
																"nativeSrc": "1100:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:9"
															},
															"nativeSrc": "1100:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:9",
														"nodeType": "YulTypedName",
														"src": "1078:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:9",
														"nodeType": "YulTypedName",
														"src": "1085:3:9",
														"type": ""
													}
												],
												"src": "1025:118:9"
											},
											{
												"body": {
													"nativeSrc": "1247:124:9",
													"nodeType": "YulBlock",
													"src": "1247:124:9",
													"statements": [
														{
															"nativeSrc": "1257:26:9",
															"nodeType": "YulAssignment",
															"src": "1257:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:9"
																},
																"nativeSrc": "1265:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:9"
																		},
																		"nativeSrc": "1346:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:9"
																},
																"nativeSrc": "1293:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:9"
															},
															"nativeSrc": "1293:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:9",
														"nodeType": "YulTypedName",
														"src": "1219:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:9",
														"nodeType": "YulTypedName",
														"src": "1231:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:9",
														"nodeType": "YulTypedName",
														"src": "1242:4:9",
														"type": ""
													}
												],
												"src": "1149:222:9"
											},
											{
												"body": {
													"nativeSrc": "1422:81:9",
													"nodeType": "YulBlock",
													"src": "1422:81:9",
													"statements": [
														{
															"nativeSrc": "1432:65:9",
															"nodeType": "YulAssignment",
															"src": "1432:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:9"
																},
																"nativeSrc": "1443:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:9",
														"nodeType": "YulTypedName",
														"src": "1404:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:9",
														"nodeType": "YulTypedName",
														"src": "1414:7:9",
														"type": ""
													}
												],
												"src": "1377:126:9"
											},
											{
												"body": {
													"nativeSrc": "1554:51:9",
													"nodeType": "YulBlock",
													"src": "1554:51:9",
													"statements": [
														{
															"nativeSrc": "1564:35:9",
															"nodeType": "YulAssignment",
															"src": "1564:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:9"
																},
																"nativeSrc": "1575:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:9",
														"nodeType": "YulTypedName",
														"src": "1536:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:9",
														"nodeType": "YulTypedName",
														"src": "1546:7:9",
														"type": ""
													}
												],
												"src": "1509:96:9"
											},
											{
												"body": {
													"nativeSrc": "1676:53:9",
													"nodeType": "YulBlock",
													"src": "1676:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:9"
																		},
																		"nativeSrc": "1698:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:9"
																},
																"nativeSrc": "1686:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:9"
															},
															"nativeSrc": "1686:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:9",
														"nodeType": "YulTypedName",
														"src": "1664:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:9",
														"nodeType": "YulTypedName",
														"src": "1671:3:9",
														"type": ""
													}
												],
												"src": "1611:118:9"
											},
											{
												"body": {
													"nativeSrc": "1833:124:9",
													"nodeType": "YulBlock",
													"src": "1833:124:9",
													"statements": [
														{
															"nativeSrc": "1843:26:9",
															"nodeType": "YulAssignment",
															"src": "1843:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:9"
																},
																"nativeSrc": "1851:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:9"
																		},
																		"nativeSrc": "1932:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:9"
																},
																"nativeSrc": "1879:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:9"
															},
															"nativeSrc": "1879:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:9",
														"nodeType": "YulTypedName",
														"src": "1805:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:9",
														"nodeType": "YulTypedName",
														"src": "1817:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:9",
														"nodeType": "YulTypedName",
														"src": "1828:4:9",
														"type": ""
													}
												],
												"src": "1735:222:9"
											},
											{
												"body": {
													"nativeSrc": "2059:73:9",
													"nodeType": "YulBlock",
													"src": "2059:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2081:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:9"
																},
																"nativeSrc": "2069:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2069:19:9"
															},
															"nativeSrc": "2069:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "2069:19:9"
														},
														{
															"nativeSrc": "2097:29:9",
															"nodeType": "YulAssignment",
															"src": "2097:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2116:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2112:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:9"
																},
																"nativeSrc": "2112:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2112:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2097:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "2097:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1963:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2031:3:9",
														"nodeType": "YulTypedName",
														"src": "2031:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2036:6:9",
														"nodeType": "YulTypedName",
														"src": "2036:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2047:11:9",
														"nodeType": "YulTypedName",
														"src": "2047:11:9",
														"type": ""
													}
												],
												"src": "1963:169:9"
											},
											{
												"body": {
													"nativeSrc": "2244:115:9",
													"nodeType": "YulBlock",
													"src": "2244:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2266:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2274:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2274:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2262:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:9"
																		},
																		"nativeSrc": "2262:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2262:14:9"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "2278:34:9",
																		"nodeType": "YulLiteral",
																		"src": "2278:34:9",
																		"type": "",
																		"value": "Only admin can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2255:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:9"
																},
																"nativeSrc": "2255:58:9",
																"nodeType": "YulFunctionCall",
																"src": "2255:58:9"
															},
															"nativeSrc": "2255:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "2255:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2334:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2334:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2342:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2342:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2330:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:9"
																		},
																		"nativeSrc": "2330:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2330:15:9"
																	},
																	{
																		"hexValue": "6e2e",
																		"kind": "string",
																		"nativeSrc": "2347:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2347:4:9",
																		"type": "",
																		"value": "n."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2323:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:9"
																},
																"nativeSrc": "2323:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2323:29:9"
															},
															"nativeSrc": "2323:29:9",
															"nodeType": "YulExpressionStatement",
															"src": "2323:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd",
												"nativeSrc": "2138:221:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2236:6:9",
														"nodeType": "YulTypedName",
														"src": "2236:6:9",
														"type": ""
													}
												],
												"src": "2138:221:9"
											},
											{
												"body": {
													"nativeSrc": "2511:220:9",
													"nodeType": "YulBlock",
													"src": "2511:220:9",
													"statements": [
														{
															"nativeSrc": "2521:74:9",
															"nodeType": "YulAssignment",
															"src": "2521:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2587:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2587:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2592:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2592:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2528:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:58:9"
																},
																"nativeSrc": "2528:67:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2521:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2693:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2693:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd",
																	"nativeSrc": "2604:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "2604:88:9"
																},
																"nativeSrc": "2604:93:9",
																"nodeType": "YulFunctionCall",
																"src": "2604:93:9"
															},
															"nativeSrc": "2604:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "2604:93:9"
														},
														{
															"nativeSrc": "2706:19:9",
															"nodeType": "YulAssignment",
															"src": "2706:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2717:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2717:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2722:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2722:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2713:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:9"
																},
																"nativeSrc": "2713:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2713:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2706:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2706:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2365:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2499:3:9",
														"nodeType": "YulTypedName",
														"src": "2499:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2507:3:9",
														"nodeType": "YulTypedName",
														"src": "2507:3:9",
														"type": ""
													}
												],
												"src": "2365:366:9"
											},
											{
												"body": {
													"nativeSrc": "2908:248:9",
													"nodeType": "YulBlock",
													"src": "2908:248:9",
													"statements": [
														{
															"nativeSrc": "2918:26:9",
															"nodeType": "YulAssignment",
															"src": "2918:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2930:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2930:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2941:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2941:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2926:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:9"
																},
																"nativeSrc": "2926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2926:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2918:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2965:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2965:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2976:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2976:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2961:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:9"
																		},
																		"nativeSrc": "2961:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2984:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2984:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2990:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2980:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:9"
																		},
																		"nativeSrc": "2980:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2954:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:9"
																},
																"nativeSrc": "2954:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2954:47:9"
															},
															"nativeSrc": "2954:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2954:47:9"
														},
														{
															"nativeSrc": "3010:139:9",
															"nodeType": "YulAssignment",
															"src": "3010:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3144:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3144:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3018:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "3018:124:9"
																},
																"nativeSrc": "3018:131:9",
																"nodeType": "YulFunctionCall",
																"src": "3018:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3010:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3010:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2737:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2888:9:9",
														"nodeType": "YulTypedName",
														"src": "2888:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2903:4:9",
														"nodeType": "YulTypedName",
														"src": "2903:4:9",
														"type": ""
													}
												],
												"src": "2737:419:9"
											},
											{
												"body": {
													"nativeSrc": "3225:80:9",
													"nodeType": "YulBlock",
													"src": "3225:80:9",
													"statements": [
														{
															"nativeSrc": "3235:22:9",
															"nodeType": "YulAssignment",
															"src": "3235:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3250:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3250:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3244:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3244:5:9"
																},
																"nativeSrc": "3244:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3244:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3235:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3235:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3293:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3293:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3266:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3266:26:9"
																},
																"nativeSrc": "3266:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3266:33:9"
															},
															"nativeSrc": "3266:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3266:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3162:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3203:6:9",
														"nodeType": "YulTypedName",
														"src": "3203:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3211:3:9",
														"nodeType": "YulTypedName",
														"src": "3211:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3219:5:9",
														"nodeType": "YulTypedName",
														"src": "3219:5:9",
														"type": ""
													}
												],
												"src": "3162:143:9"
											},
											{
												"body": {
													"nativeSrc": "3388:274:9",
													"nodeType": "YulBlock",
													"src": "3388:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3434:83:9",
																"nodeType": "YulBlock",
																"src": "3434:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3436:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3436:77:9"
																			},
																			"nativeSrc": "3436:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3436:79:9"
																		},
																		"nativeSrc": "3436:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3436:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3409:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3409:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3418:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3418:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3405:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3405:3:9"
																		},
																		"nativeSrc": "3405:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3405:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3430:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3430:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3401:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3401:3:9"
																},
																"nativeSrc": "3401:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3401:32:9"
															},
															"nativeSrc": "3398:119:9",
															"nodeType": "YulIf",
															"src": "3398:119:9"
														},
														{
															"nativeSrc": "3527:128:9",
															"nodeType": "YulBlock",
															"src": "3527:128:9",
															"statements": [
																{
																	"nativeSrc": "3542:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3542:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3556:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3556:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3546:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3546:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3571:74:9",
																	"nodeType": "YulAssignment",
																	"src": "3571:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3617:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3617:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3628:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3628:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3613:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3613:3:9"
																				},
																				"nativeSrc": "3613:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3613:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3637:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3637:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3581:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "3581:31:9"
																		},
																		"nativeSrc": "3581:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3571:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3571:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3311:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3358:9:9",
														"nodeType": "YulTypedName",
														"src": "3358:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3369:7:9",
														"nodeType": "YulTypedName",
														"src": "3369:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3381:6:9",
														"nodeType": "YulTypedName",
														"src": "3381:6:9",
														"type": ""
													}
												],
												"src": "3311:351:9"
											},
											{
												"body": {
													"nativeSrc": "3774:70:9",
													"nodeType": "YulBlock",
													"src": "3774:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3796:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3796:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3804:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3804:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3792:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:9"
																		},
																		"nativeSrc": "3792:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3792:14:9"
																	},
																	{
																		"hexValue": "555344432062616c73656e63654f46206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "3808:28:9",
																		"nodeType": "YulLiteral",
																		"src": "3808:28:9",
																		"type": "",
																		"value": "USDC balsenceOF not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3785:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:9"
																},
																"nativeSrc": "3785:52:9",
																"nodeType": "YulFunctionCall",
																"src": "3785:52:9"
															},
															"nativeSrc": "3785:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "3785:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4",
												"nativeSrc": "3668:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3766:6:9",
														"nodeType": "YulTypedName",
														"src": "3766:6:9",
														"type": ""
													}
												],
												"src": "3668:176:9"
											},
											{
												"body": {
													"nativeSrc": "3996:220:9",
													"nodeType": "YulBlock",
													"src": "3996:220:9",
													"statements": [
														{
															"nativeSrc": "4006:74:9",
															"nodeType": "YulAssignment",
															"src": "4006:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4072:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4072:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4077:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4077:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4013:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "4013:58:9"
																},
																"nativeSrc": "4013:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4013:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4006:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4006:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4",
																	"nativeSrc": "4089:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "4089:88:9"
																},
																"nativeSrc": "4089:93:9",
																"nodeType": "YulFunctionCall",
																"src": "4089:93:9"
															},
															"nativeSrc": "4089:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "4089:93:9"
														},
														{
															"nativeSrc": "4191:19:9",
															"nodeType": "YulAssignment",
															"src": "4191:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4202:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4202:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4207:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4207:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4198:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:9"
																},
																"nativeSrc": "4198:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4198:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4191:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4191:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3850:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3984:3:9",
														"nodeType": "YulTypedName",
														"src": "3984:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3992:3:9",
														"nodeType": "YulTypedName",
														"src": "3992:3:9",
														"type": ""
													}
												],
												"src": "3850:366:9"
											},
											{
												"body": {
													"nativeSrc": "4393:248:9",
													"nodeType": "YulBlock",
													"src": "4393:248:9",
													"statements": [
														{
															"nativeSrc": "4403:26:9",
															"nodeType": "YulAssignment",
															"src": "4403:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4415:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4415:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4426:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4426:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4411:3:9"
																},
																"nativeSrc": "4411:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4411:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4403:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4403:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4450:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4450:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4461:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4461:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4446:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4446:3:9"
																		},
																		"nativeSrc": "4446:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4446:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4469:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4469:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4475:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4465:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:9"
																		},
																		"nativeSrc": "4465:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4465:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4439:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4439:6:9"
																},
																"nativeSrc": "4439:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4439:47:9"
															},
															"nativeSrc": "4439:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4439:47:9"
														},
														{
															"nativeSrc": "4495:139:9",
															"nodeType": "YulAssignment",
															"src": "4495:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4629:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4629:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4503:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "4503:124:9"
																},
																"nativeSrc": "4503:131:9",
																"nodeType": "YulFunctionCall",
																"src": "4503:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4495:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4495:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4222:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4373:9:9",
														"nodeType": "YulTypedName",
														"src": "4373:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4388:4:9",
														"nodeType": "YulTypedName",
														"src": "4388:4:9",
														"type": ""
													}
												],
												"src": "4222:419:9"
											},
											{
												"body": {
													"nativeSrc": "4700:32:9",
													"nodeType": "YulBlock",
													"src": "4700:32:9",
													"statements": [
														{
															"nativeSrc": "4710:16:9",
															"nodeType": "YulAssignment",
															"src": "4710:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "4721:5:9",
																"nodeType": "YulIdentifier",
																"src": "4721:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4710:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4710:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "4647:85:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4682:5:9",
														"nodeType": "YulTypedName",
														"src": "4682:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4692:7:9",
														"nodeType": "YulTypedName",
														"src": "4692:7:9",
														"type": ""
													}
												],
												"src": "4647:85:9"
											},
											{
												"body": {
													"nativeSrc": "4770:28:9",
													"nodeType": "YulBlock",
													"src": "4770:28:9",
													"statements": [
														{
															"nativeSrc": "4780:12:9",
															"nodeType": "YulAssignment",
															"src": "4780:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "4787:5:9",
																"nodeType": "YulIdentifier",
																"src": "4787:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4780:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4780:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4738:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4756:5:9",
														"nodeType": "YulTypedName",
														"src": "4756:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4766:3:9",
														"nodeType": "YulTypedName",
														"src": "4766:3:9",
														"type": ""
													}
												],
												"src": "4738:60:9"
											},
											{
												"body": {
													"nativeSrc": "4872:90:9",
													"nodeType": "YulBlock",
													"src": "4872:90:9",
													"statements": [
														{
															"nativeSrc": "4882:74:9",
															"nodeType": "YulAssignment",
															"src": "4882:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4948:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4948:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "4922:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "4922:25:9"
																				},
																				"nativeSrc": "4922:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4922:32:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4913:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "4913:8:9"
																		},
																		"nativeSrc": "4913:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4913:42:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4895:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4895:17:9"
																},
																"nativeSrc": "4895:61:9",
																"nodeType": "YulFunctionCall",
																"src": "4895:61:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4882:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4882:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "4804:158:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4852:5:9",
														"nodeType": "YulTypedName",
														"src": "4852:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4862:9:9",
														"nodeType": "YulTypedName",
														"src": "4862:9:9",
														"type": ""
													}
												],
												"src": "4804:158:9"
											},
											{
												"body": {
													"nativeSrc": "5041:74:9",
													"nodeType": "YulBlock",
													"src": "5041:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5058:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5058:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5102:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5102:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "5063:38:9",
																			"nodeType": "YulIdentifier",
																			"src": "5063:38:9"
																		},
																		"nativeSrc": "5063:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5063:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5051:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:9"
																},
																"nativeSrc": "5051:58:9",
																"nodeType": "YulFunctionCall",
																"src": "5051:58:9"
															},
															"nativeSrc": "5051:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "5051:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "4968:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5029:5:9",
														"nodeType": "YulTypedName",
														"src": "5029:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5036:3:9",
														"nodeType": "YulTypedName",
														"src": "5036:3:9",
														"type": ""
													}
												],
												"src": "4968:147:9"
											},
											{
												"body": {
													"nativeSrc": "5174:32:9",
													"nodeType": "YulBlock",
													"src": "5174:32:9",
													"statements": [
														{
															"nativeSrc": "5184:16:9",
															"nodeType": "YulAssignment",
															"src": "5184:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "5195:5:9",
																"nodeType": "YulIdentifier",
																"src": "5195:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5184:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5184:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_2_by_1",
												"nativeSrc": "5121:85:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5156:5:9",
														"nodeType": "YulTypedName",
														"src": "5156:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5166:7:9",
														"nodeType": "YulTypedName",
														"src": "5166:7:9",
														"type": ""
													}
												],
												"src": "5121:85:9"
											},
											{
												"body": {
													"nativeSrc": "5280:90:9",
													"nodeType": "YulBlock",
													"src": "5280:90:9",
													"statements": [
														{
															"nativeSrc": "5290:74:9",
															"nodeType": "YulAssignment",
															"src": "5290:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5356:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5356:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_2_by_1",
																					"nativeSrc": "5330:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "5330:25:9"
																				},
																				"nativeSrc": "5330:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5330:32:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5321:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5321:8:9"
																		},
																		"nativeSrc": "5321:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:42:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5303:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5303:17:9"
																},
																"nativeSrc": "5303:61:9",
																"nodeType": "YulFunctionCall",
																"src": "5303:61:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5290:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5290:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_2_by_1_to_t_uint256",
												"nativeSrc": "5212:158:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5260:5:9",
														"nodeType": "YulTypedName",
														"src": "5260:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5270:9:9",
														"nodeType": "YulTypedName",
														"src": "5270:9:9",
														"type": ""
													}
												],
												"src": "5212:158:9"
											},
											{
												"body": {
													"nativeSrc": "5449:74:9",
													"nodeType": "YulBlock",
													"src": "5449:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5466:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5466:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5510:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5510:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_2_by_1_to_t_uint256",
																			"nativeSrc": "5471:38:9",
																			"nodeType": "YulIdentifier",
																			"src": "5471:38:9"
																		},
																		"nativeSrc": "5471:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5471:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5459:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:9"
																},
																"nativeSrc": "5459:58:9",
																"nodeType": "YulFunctionCall",
																"src": "5459:58:9"
															},
															"nativeSrc": "5459:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "5459:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_2_by_1_to_t_uint256_fromStack",
												"nativeSrc": "5376:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5437:5:9",
														"nodeType": "YulTypedName",
														"src": "5437:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5444:3:9",
														"nodeType": "YulTypedName",
														"src": "5444:3:9",
														"type": ""
													}
												],
												"src": "5376:147:9"
											},
											{
												"body": {
													"nativeSrc": "5699:304:9",
													"nodeType": "YulBlock",
													"src": "5699:304:9",
													"statements": [
														{
															"nativeSrc": "5709:26:9",
															"nodeType": "YulAssignment",
															"src": "5709:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5721:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5721:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5732:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5732:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5717:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:9"
																},
																"nativeSrc": "5717:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5717:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5709:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5709:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5797:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5797:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5810:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5810:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5821:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5821:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5806:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5806:3:9"
																		},
																		"nativeSrc": "5806:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5806:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "5745:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "5745:51:9"
																},
																"nativeSrc": "5745:79:9",
																"nodeType": "YulFunctionCall",
																"src": "5745:79:9"
															},
															"nativeSrc": "5745:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "5745:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5886:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5886:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5899:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5910:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5910:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5895:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:9"
																		},
																		"nativeSrc": "5895:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5895:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_2_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "5834:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "5834:51:9"
																},
																"nativeSrc": "5834:80:9",
																"nodeType": "YulFunctionCall",
																"src": "5834:80:9"
															},
															"nativeSrc": "5834:80:9",
															"nodeType": "YulExpressionStatement",
															"src": "5834:80:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5968:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5968:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5981:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5981:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5992:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5992:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5977:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5977:3:9"
																		},
																		"nativeSrc": "5977:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5977:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5924:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5924:43:9"
																},
																"nativeSrc": "5924:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5924:72:9"
															},
															"nativeSrc": "5924:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5924:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_rational_2_by_1_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5529:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5655:9:9",
														"nodeType": "YulTypedName",
														"src": "5655:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5667:6:9",
														"nodeType": "YulTypedName",
														"src": "5667:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5675:6:9",
														"nodeType": "YulTypedName",
														"src": "5675:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5683:6:9",
														"nodeType": "YulTypedName",
														"src": "5683:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5694:4:9",
														"nodeType": "YulTypedName",
														"src": "5694:4:9",
														"type": ""
													}
												],
												"src": "5529:474:9"
											},
											{
												"body": {
													"nativeSrc": "6115:70:9",
													"nodeType": "YulBlock",
													"src": "6115:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6137:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6137:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6145:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6145:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6133:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6133:3:9"
																		},
																		"nativeSrc": "6133:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6133:14:9"
																	},
																	{
																		"hexValue": "574554482062616c73656e63654f46206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "6149:28:9",
																		"nodeType": "YulLiteral",
																		"src": "6149:28:9",
																		"type": "",
																		"value": "WETH balsenceOF not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6126:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:9"
																},
																"nativeSrc": "6126:52:9",
																"nodeType": "YulFunctionCall",
																"src": "6126:52:9"
															},
															"nativeSrc": "6126:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "6126:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8",
												"nativeSrc": "6009:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6107:6:9",
														"nodeType": "YulTypedName",
														"src": "6107:6:9",
														"type": ""
													}
												],
												"src": "6009:176:9"
											},
											{
												"body": {
													"nativeSrc": "6337:220:9",
													"nodeType": "YulBlock",
													"src": "6337:220:9",
													"statements": [
														{
															"nativeSrc": "6347:74:9",
															"nodeType": "YulAssignment",
															"src": "6347:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6413:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6413:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6418:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6418:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6354:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6354:58:9"
																},
																"nativeSrc": "6354:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6354:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6347:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6347:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6519:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6519:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8",
																	"nativeSrc": "6430:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6430:88:9"
																},
																"nativeSrc": "6430:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6430:93:9"
															},
															"nativeSrc": "6430:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6430:93:9"
														},
														{
															"nativeSrc": "6532:19:9",
															"nodeType": "YulAssignment",
															"src": "6532:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6548:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6548:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6539:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6539:3:9"
																},
																"nativeSrc": "6539:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6539:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6532:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6191:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6325:3:9",
														"nodeType": "YulTypedName",
														"src": "6325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6333:3:9",
														"nodeType": "YulTypedName",
														"src": "6333:3:9",
														"type": ""
													}
												],
												"src": "6191:366:9"
											},
											{
												"body": {
													"nativeSrc": "6734:248:9",
													"nodeType": "YulBlock",
													"src": "6734:248:9",
													"statements": [
														{
															"nativeSrc": "6744:26:9",
															"nodeType": "YulAssignment",
															"src": "6744:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6756:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6756:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6767:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6767:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6752:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6752:3:9"
																},
																"nativeSrc": "6752:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6752:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6744:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6744:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6791:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6802:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6802:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6787:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:9"
																		},
																		"nativeSrc": "6787:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6787:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6810:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6810:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6816:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6816:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6806:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6806:3:9"
																		},
																		"nativeSrc": "6806:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6806:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6780:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:9"
																},
																"nativeSrc": "6780:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6780:47:9"
															},
															"nativeSrc": "6780:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6780:47:9"
														},
														{
															"nativeSrc": "6836:139:9",
															"nodeType": "YulAssignment",
															"src": "6836:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6970:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6970:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6844:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "6844:124:9"
																},
																"nativeSrc": "6844:131:9",
																"nodeType": "YulFunctionCall",
																"src": "6844:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6836:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6836:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6563:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6714:9:9",
														"nodeType": "YulTypedName",
														"src": "6714:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6729:4:9",
														"nodeType": "YulTypedName",
														"src": "6729:4:9",
														"type": ""
													}
												],
												"src": "6563:419:9"
											},
											{
												"body": {
													"nativeSrc": "7031:79:9",
													"nodeType": "YulBlock",
													"src": "7031:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7088:16:9",
																"nodeType": "YulBlock",
																"src": "7088:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7097:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7097:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7100:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7100:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7090:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7090:6:9"
																			},
																			"nativeSrc": "7090:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7090:12:9"
																		},
																		"nativeSrc": "7090:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7090:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7054:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7054:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7079:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7079:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "7061:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "7061:17:9"
																				},
																				"nativeSrc": "7061:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7061:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7051:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7051:2:9"
																		},
																		"nativeSrc": "7051:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7051:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7044:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7044:6:9"
																},
																"nativeSrc": "7044:43:9",
																"nodeType": "YulFunctionCall",
																"src": "7044:43:9"
															},
															"nativeSrc": "7041:63:9",
															"nodeType": "YulIf",
															"src": "7041:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6988:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7024:5:9",
														"nodeType": "YulTypedName",
														"src": "7024:5:9",
														"type": ""
													}
												],
												"src": "6988:122:9"
											},
											{
												"body": {
													"nativeSrc": "7179:80:9",
													"nodeType": "YulBlock",
													"src": "7179:80:9",
													"statements": [
														{
															"nativeSrc": "7189:22:9",
															"nodeType": "YulAssignment",
															"src": "7189:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7204:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7198:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7198:5:9"
																},
																"nativeSrc": "7198:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7198:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7189:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7189:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7247:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7247:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7220:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "7220:26:9"
																},
																"nativeSrc": "7220:33:9",
																"nodeType": "YulFunctionCall",
																"src": "7220:33:9"
															},
															"nativeSrc": "7220:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "7220:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "7116:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7157:6:9",
														"nodeType": "YulTypedName",
														"src": "7157:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7165:3:9",
														"nodeType": "YulTypedName",
														"src": "7165:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7173:5:9",
														"nodeType": "YulTypedName",
														"src": "7173:5:9",
														"type": ""
													}
												],
												"src": "7116:143:9"
											},
											{
												"body": {
													"nativeSrc": "7342:274:9",
													"nodeType": "YulBlock",
													"src": "7342:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7388:83:9",
																"nodeType": "YulBlock",
																"src": "7388:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7390:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7390:77:9"
																			},
																			"nativeSrc": "7390:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7390:79:9"
																		},
																		"nativeSrc": "7390:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7390:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7363:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7363:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7372:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7359:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7359:3:9"
																		},
																		"nativeSrc": "7359:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7359:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7384:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7384:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7355:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7355:3:9"
																},
																"nativeSrc": "7355:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7355:32:9"
															},
															"nativeSrc": "7352:119:9",
															"nodeType": "YulIf",
															"src": "7352:119:9"
														},
														{
															"nativeSrc": "7481:128:9",
															"nodeType": "YulBlock",
															"src": "7481:128:9",
															"statements": [
																{
																	"nativeSrc": "7496:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7496:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7510:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7510:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7500:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7500:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7525:74:9",
																	"nodeType": "YulAssignment",
																	"src": "7525:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7571:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7571:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7582:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7582:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7567:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7567:3:9"
																				},
																				"nativeSrc": "7567:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7567:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7591:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7591:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "7535:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "7535:31:9"
																		},
																		"nativeSrc": "7535:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7535:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7525:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7525:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7265:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7312:9:9",
														"nodeType": "YulTypedName",
														"src": "7312:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7323:7:9",
														"nodeType": "YulTypedName",
														"src": "7323:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7335:6:9",
														"nodeType": "YulTypedName",
														"src": "7335:6:9",
														"type": ""
													}
												],
												"src": "7265:351:9"
											},
											{
												"body": {
													"nativeSrc": "7728:69:9",
													"nodeType": "YulBlock",
													"src": "7728:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7750:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7750:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7758:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7758:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7746:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7746:3:9"
																		},
																		"nativeSrc": "7746:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7746:14:9"
																	},
																	{
																		"hexValue": "555344432062616c616e63654f66206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "7762:27:9",
																		"nodeType": "YulLiteral",
																		"src": "7762:27:9",
																		"type": "",
																		"value": "USDC balanceOf not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7739:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7739:6:9"
																},
																"nativeSrc": "7739:51:9",
																"nodeType": "YulFunctionCall",
																"src": "7739:51:9"
															},
															"nativeSrc": "7739:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "7739:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121",
												"nativeSrc": "7622:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7720:6:9",
														"nodeType": "YulTypedName",
														"src": "7720:6:9",
														"type": ""
													}
												],
												"src": "7622:175:9"
											},
											{
												"body": {
													"nativeSrc": "7949:220:9",
													"nodeType": "YulBlock",
													"src": "7949:220:9",
													"statements": [
														{
															"nativeSrc": "7959:74:9",
															"nodeType": "YulAssignment",
															"src": "7959:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8025:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8025:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8030:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8030:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7966:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7966:58:9"
																},
																"nativeSrc": "7966:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7966:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7959:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7959:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8131:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8131:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121",
																	"nativeSrc": "8042:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8042:88:9"
																},
																"nativeSrc": "8042:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8042:93:9"
															},
															"nativeSrc": "8042:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8042:93:9"
														},
														{
															"nativeSrc": "8144:19:9",
															"nodeType": "YulAssignment",
															"src": "8144:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8155:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8155:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8160:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8160:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8151:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8151:3:9"
																},
																"nativeSrc": "8151:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8151:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8144:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8144:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7803:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7937:3:9",
														"nodeType": "YulTypedName",
														"src": "7937:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7945:3:9",
														"nodeType": "YulTypedName",
														"src": "7945:3:9",
														"type": ""
													}
												],
												"src": "7803:366:9"
											},
											{
												"body": {
													"nativeSrc": "8346:248:9",
													"nodeType": "YulBlock",
													"src": "8346:248:9",
													"statements": [
														{
															"nativeSrc": "8356:26:9",
															"nodeType": "YulAssignment",
															"src": "8356:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8368:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8368:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8379:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8364:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8364:3:9"
																},
																"nativeSrc": "8364:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8364:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8356:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8356:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8403:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8414:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8414:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:9"
																		},
																		"nativeSrc": "8399:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8422:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8422:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8428:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8428:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8418:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8418:3:9"
																		},
																		"nativeSrc": "8418:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8418:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8392:6:9"
																},
																"nativeSrc": "8392:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8392:47:9"
															},
															"nativeSrc": "8392:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8392:47:9"
														},
														{
															"nativeSrc": "8448:139:9",
															"nodeType": "YulAssignment",
															"src": "8448:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8582:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8582:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8456:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8456:124:9"
																},
																"nativeSrc": "8456:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8456:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8448:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8448:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8175:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8326:9:9",
														"nodeType": "YulTypedName",
														"src": "8326:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8341:4:9",
														"nodeType": "YulTypedName",
														"src": "8341:4:9",
														"type": ""
													}
												],
												"src": "8175:419:9"
											},
											{
												"body": {
													"nativeSrc": "8726:206:9",
													"nodeType": "YulBlock",
													"src": "8726:206:9",
													"statements": [
														{
															"nativeSrc": "8736:26:9",
															"nodeType": "YulAssignment",
															"src": "8736:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8748:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8748:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8759:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8759:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8744:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8744:3:9"
																},
																"nativeSrc": "8744:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8744:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8736:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8736:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8816:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8816:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8829:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8829:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8840:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8840:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8825:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8825:3:9"
																		},
																		"nativeSrc": "8825:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8825:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8772:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8772:43:9"
																},
																"nativeSrc": "8772:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8772:71:9"
															},
															"nativeSrc": "8772:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8772:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8897:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8897:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8910:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8910:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8921:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8921:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8906:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8906:3:9"
																		},
																		"nativeSrc": "8906:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8906:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8853:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8853:43:9"
																},
																"nativeSrc": "8853:72:9",
																"nodeType": "YulFunctionCall",
																"src": "8853:72:9"
															},
															"nativeSrc": "8853:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "8853:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8600:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8690:9:9",
														"nodeType": "YulTypedName",
														"src": "8690:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8702:6:9",
														"nodeType": "YulTypedName",
														"src": "8702:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8710:6:9",
														"nodeType": "YulTypedName",
														"src": "8710:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8721:4:9",
														"nodeType": "YulTypedName",
														"src": "8721:4:9",
														"type": ""
													}
												],
												"src": "8600:332:9"
											},
											{
												"body": {
													"nativeSrc": "8980:48:9",
													"nodeType": "YulBlock",
													"src": "8980:48:9",
													"statements": [
														{
															"nativeSrc": "8990:32:9",
															"nodeType": "YulAssignment",
															"src": "8990:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9015:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9015:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9008:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9008:6:9"
																		},
																		"nativeSrc": "9008:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9008:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:9"
																},
																"nativeSrc": "9001:21:9",
																"nodeType": "YulFunctionCall",
																"src": "9001:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8990:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8990:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8938:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8962:5:9",
														"nodeType": "YulTypedName",
														"src": "8962:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8972:7:9",
														"nodeType": "YulTypedName",
														"src": "8972:7:9",
														"type": ""
													}
												],
												"src": "8938:90:9"
											},
											{
												"body": {
													"nativeSrc": "9074:76:9",
													"nodeType": "YulBlock",
													"src": "9074:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9128:16:9",
																"nodeType": "YulBlock",
																"src": "9128:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9137:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9137:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9140:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9140:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9130:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9130:6:9"
																			},
																			"nativeSrc": "9130:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9130:12:9"
																		},
																		"nativeSrc": "9130:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9130:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9097:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9097:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9119:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9119:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9104:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "9104:14:9"
																				},
																				"nativeSrc": "9104:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9104:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9094:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9094:2:9"
																		},
																		"nativeSrc": "9094:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9094:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9087:6:9"
																},
																"nativeSrc": "9087:40:9",
																"nodeType": "YulFunctionCall",
																"src": "9087:40:9"
															},
															"nativeSrc": "9084:60:9",
															"nodeType": "YulIf",
															"src": "9084:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9034:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9067:5:9",
														"nodeType": "YulTypedName",
														"src": "9067:5:9",
														"type": ""
													}
												],
												"src": "9034:116:9"
											},
											{
												"body": {
													"nativeSrc": "9216:77:9",
													"nodeType": "YulBlock",
													"src": "9216:77:9",
													"statements": [
														{
															"nativeSrc": "9226:22:9",
															"nodeType": "YulAssignment",
															"src": "9226:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9241:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9241:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9235:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9235:5:9"
																},
																"nativeSrc": "9235:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9235:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9226:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9226:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9281:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9281:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9257:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "9257:23:9"
																},
																"nativeSrc": "9257:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9257:30:9"
															},
															"nativeSrc": "9257:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "9257:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9156:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9194:6:9",
														"nodeType": "YulTypedName",
														"src": "9194:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9202:3:9",
														"nodeType": "YulTypedName",
														"src": "9202:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9210:5:9",
														"nodeType": "YulTypedName",
														"src": "9210:5:9",
														"type": ""
													}
												],
												"src": "9156:137:9"
											},
											{
												"body": {
													"nativeSrc": "9373:271:9",
													"nodeType": "YulBlock",
													"src": "9373:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9419:83:9",
																"nodeType": "YulBlock",
																"src": "9419:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9421:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9421:77:9"
																			},
																			"nativeSrc": "9421:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9421:79:9"
																		},
																		"nativeSrc": "9421:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9421:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9394:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9394:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9403:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9403:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9390:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9390:3:9"
																		},
																		"nativeSrc": "9390:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9390:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9415:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9386:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9386:3:9"
																},
																"nativeSrc": "9386:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9386:32:9"
															},
															"nativeSrc": "9383:119:9",
															"nodeType": "YulIf",
															"src": "9383:119:9"
														},
														{
															"nativeSrc": "9512:125:9",
															"nodeType": "YulBlock",
															"src": "9512:125:9",
															"statements": [
																{
																	"nativeSrc": "9527:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9527:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9541:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9541:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9531:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9531:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9556:71:9",
																	"nodeType": "YulAssignment",
																	"src": "9556:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9599:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9599:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9610:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9610:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9595:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9595:3:9"
																				},
																				"nativeSrc": "9595:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9595:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9619:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9619:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9566:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "9566:28:9"
																		},
																		"nativeSrc": "9566:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9566:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9556:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9556:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9299:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9343:9:9",
														"nodeType": "YulTypedName",
														"src": "9343:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9354:7:9",
														"nodeType": "YulTypedName",
														"src": "9354:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9366:6:9",
														"nodeType": "YulTypedName",
														"src": "9366:6:9",
														"type": ""
													}
												],
												"src": "9299:345:9"
											},
											{
												"body": {
													"nativeSrc": "9703:32:9",
													"nodeType": "YulBlock",
													"src": "9703:32:9",
													"statements": [
														{
															"nativeSrc": "9713:16:9",
															"nodeType": "YulAssignment",
															"src": "9713:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "9724:5:9",
																"nodeType": "YulIdentifier",
																"src": "9724:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9713:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9713:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "9650:85:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9685:5:9",
														"nodeType": "YulTypedName",
														"src": "9685:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9695:7:9",
														"nodeType": "YulTypedName",
														"src": "9695:7:9",
														"type": ""
													}
												],
												"src": "9650:85:9"
											},
											{
												"body": {
													"nativeSrc": "9809:90:9",
													"nodeType": "YulBlock",
													"src": "9809:90:9",
													"statements": [
														{
															"nativeSrc": "9819:74:9",
															"nodeType": "YulAssignment",
															"src": "9819:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9885:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9885:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "9859:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "9859:25:9"
																				},
																				"nativeSrc": "9859:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9859:32:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9850:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "9850:8:9"
																		},
																		"nativeSrc": "9850:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9850:42:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9832:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9832:17:9"
																},
																"nativeSrc": "9832:61:9",
																"nodeType": "YulFunctionCall",
																"src": "9832:61:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9819:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "9819:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nativeSrc": "9741:158:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9789:5:9",
														"nodeType": "YulTypedName",
														"src": "9789:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9799:9:9",
														"nodeType": "YulTypedName",
														"src": "9799:9:9",
														"type": ""
													}
												],
												"src": "9741:158:9"
											},
											{
												"body": {
													"nativeSrc": "9978:74:9",
													"nodeType": "YulBlock",
													"src": "9978:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9995:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9995:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10039:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10039:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nativeSrc": "10000:38:9",
																			"nodeType": "YulIdentifier",
																			"src": "10000:38:9"
																		},
																		"nativeSrc": "10000:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10000:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9988:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:9"
																},
																"nativeSrc": "9988:58:9",
																"nodeType": "YulFunctionCall",
																"src": "9988:58:9"
															},
															"nativeSrc": "9988:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "9988:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9905:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9966:5:9",
														"nodeType": "YulTypedName",
														"src": "9966:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9973:3:9",
														"nodeType": "YulTypedName",
														"src": "9973:3:9",
														"type": ""
													}
												],
												"src": "9905:147:9"
											},
											{
												"body": {
													"nativeSrc": "10264:395:9",
													"nodeType": "YulBlock",
													"src": "10264:395:9",
													"statements": [
														{
															"nativeSrc": "10274:27:9",
															"nodeType": "YulAssignment",
															"src": "10274:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10286:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10286:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10297:3:9",
																		"nodeType": "YulLiteral",
																		"src": "10297:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10282:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10282:3:9"
																},
																"nativeSrc": "10282:19:9",
																"nodeType": "YulFunctionCall",
																"src": "10282:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10274:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10274:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10363:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10363:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10376:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10376:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10387:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10387:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10372:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10372:3:9"
																		},
																		"nativeSrc": "10372:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10372:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10311:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "10311:51:9"
																},
																"nativeSrc": "10311:79:9",
																"nodeType": "YulFunctionCall",
																"src": "10311:79:9"
															},
															"nativeSrc": "10311:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "10311:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10452:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10452:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10465:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10465:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10476:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10476:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10461:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10461:3:9"
																		},
																		"nativeSrc": "10461:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10461:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_2_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10400:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "10400:51:9"
																},
																"nativeSrc": "10400:80:9",
																"nodeType": "YulFunctionCall",
																"src": "10400:80:9"
															},
															"nativeSrc": "10400:80:9",
															"nodeType": "YulExpressionStatement",
															"src": "10400:80:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10534:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10534:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10547:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10547:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10558:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10558:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10543:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10543:3:9"
																		},
																		"nativeSrc": "10543:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10543:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10490:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10490:43:9"
																},
																"nativeSrc": "10490:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10490:72:9"
															},
															"nativeSrc": "10490:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10490:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10624:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10624:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10637:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10637:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10648:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10648:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10633:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10633:3:9"
																		},
																		"nativeSrc": "10633:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10633:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10572:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "10572:51:9"
																},
																"nativeSrc": "10572:80:9",
																"nodeType": "YulFunctionCall",
																"src": "10572:80:9"
															},
															"nativeSrc": "10572:80:9",
															"nodeType": "YulExpressionStatement",
															"src": "10572:80:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_rational_2_by_1_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10058:601:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10212:9:9",
														"nodeType": "YulTypedName",
														"src": "10212:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10224:6:9",
														"nodeType": "YulTypedName",
														"src": "10224:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10232:6:9",
														"nodeType": "YulTypedName",
														"src": "10232:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10240:6:9",
														"nodeType": "YulTypedName",
														"src": "10240:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10248:6:9",
														"nodeType": "YulTypedName",
														"src": "10248:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10259:4:9",
														"nodeType": "YulTypedName",
														"src": "10259:4:9",
														"type": ""
													}
												],
												"src": "10058:601:9"
											},
											{
												"body": {
													"nativeSrc": "10771:64:9",
													"nodeType": "YulBlock",
													"src": "10771:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10793:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10793:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10801:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10801:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10789:3:9"
																		},
																		"nativeSrc": "10789:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10789:14:9"
																	},
																	{
																		"hexValue": "4172626974726167652070726f666974203c3d30",
																		"kind": "string",
																		"nativeSrc": "10805:22:9",
																		"nodeType": "YulLiteral",
																		"src": "10805:22:9",
																		"type": "",
																		"value": "Arbitrage profit <=0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10782:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10782:6:9"
																},
																"nativeSrc": "10782:46:9",
																"nodeType": "YulFunctionCall",
																"src": "10782:46:9"
															},
															"nativeSrc": "10782:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "10782:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc",
												"nativeSrc": "10665:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10763:6:9",
														"nodeType": "YulTypedName",
														"src": "10763:6:9",
														"type": ""
													}
												],
												"src": "10665:170:9"
											},
											{
												"body": {
													"nativeSrc": "10987:220:9",
													"nodeType": "YulBlock",
													"src": "10987:220:9",
													"statements": [
														{
															"nativeSrc": "10997:74:9",
															"nodeType": "YulAssignment",
															"src": "10997:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11063:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11063:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11068:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11068:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11004:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11004:58:9"
																},
																"nativeSrc": "11004:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11004:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10997:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10997:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11169:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11169:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc",
																	"nativeSrc": "11080:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11080:88:9"
																},
																"nativeSrc": "11080:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11080:93:9"
															},
															"nativeSrc": "11080:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11080:93:9"
														},
														{
															"nativeSrc": "11182:19:9",
															"nodeType": "YulAssignment",
															"src": "11182:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11193:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11193:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11198:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11198:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11189:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11189:3:9"
																},
																"nativeSrc": "11189:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11189:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11182:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11182:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10841:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10975:3:9",
														"nodeType": "YulTypedName",
														"src": "10975:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10983:3:9",
														"nodeType": "YulTypedName",
														"src": "10983:3:9",
														"type": ""
													}
												],
												"src": "10841:366:9"
											},
											{
												"body": {
													"nativeSrc": "11384:248:9",
													"nodeType": "YulBlock",
													"src": "11384:248:9",
													"statements": [
														{
															"nativeSrc": "11394:26:9",
															"nodeType": "YulAssignment",
															"src": "11394:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11406:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11406:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11417:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11417:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11402:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11402:3:9"
																},
																"nativeSrc": "11402:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11402:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11394:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11394:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11441:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11441:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11452:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11452:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11437:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11437:3:9"
																		},
																		"nativeSrc": "11437:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11437:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11460:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11460:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11466:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11466:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11456:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11456:3:9"
																		},
																		"nativeSrc": "11456:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11456:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11430:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11430:6:9"
																},
																"nativeSrc": "11430:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11430:47:9"
															},
															"nativeSrc": "11430:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11430:47:9"
														},
														{
															"nativeSrc": "11486:139:9",
															"nodeType": "YulAssignment",
															"src": "11486:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11620:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11620:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11494:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11494:124:9"
																},
																"nativeSrc": "11494:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11494:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11486:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11486:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11213:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11364:9:9",
														"nodeType": "YulTypedName",
														"src": "11364:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11379:4:9",
														"nodeType": "YulTypedName",
														"src": "11379:4:9",
														"type": ""
													}
												],
												"src": "11213:419:9"
											},
											{
												"body": {
													"nativeSrc": "11666:152:9",
													"nodeType": "YulBlock",
													"src": "11666:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11686:77:9",
																		"nodeType": "YulLiteral",
																		"src": "11686:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11676:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11676:6:9"
																},
																"nativeSrc": "11676:88:9",
																"nodeType": "YulFunctionCall",
																"src": "11676:88:9"
															},
															"nativeSrc": "11676:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "11676:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11780:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11780:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11783:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11783:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11773:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11773:6:9"
																},
																"nativeSrc": "11773:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11773:15:9"
															},
															"nativeSrc": "11773:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11773:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11804:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11804:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11807:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11807:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11797:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11797:6:9"
																},
																"nativeSrc": "11797:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11797:15:9"
															},
															"nativeSrc": "11797:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11797:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11638:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "11638:180:9"
											},
											{
												"body": {
													"nativeSrc": "11869:149:9",
													"nodeType": "YulBlock",
													"src": "11869:149:9",
													"statements": [
														{
															"nativeSrc": "11879:25:9",
															"nodeType": "YulAssignment",
															"src": "11879:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11902:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11902:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11884:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11884:17:9"
																},
																"nativeSrc": "11884:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11884:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11879:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11879:1:9"
																}
															]
														},
														{
															"nativeSrc": "11913:25:9",
															"nodeType": "YulAssignment",
															"src": "11913:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11936:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11936:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11918:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11918:17:9"
																},
																"nativeSrc": "11918:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11918:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11913:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11913:1:9"
																}
															]
														},
														{
															"nativeSrc": "11947:17:9",
															"nodeType": "YulAssignment",
															"src": "11947:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11959:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11959:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11962:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11962:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11955:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11955:3:9"
																},
																"nativeSrc": "11955:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11955:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11947:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11947:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11989:22:9",
																"nodeType": "YulBlock",
																"src": "11989:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11991:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11991:16:9"
																			},
																			"nativeSrc": "11991:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11991:18:9"
																		},
																		"nativeSrc": "11991:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11991:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11980:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11980:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11986:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11986:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11977:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11977:2:9"
																},
																"nativeSrc": "11977:11:9",
																"nodeType": "YulFunctionCall",
																"src": "11977:11:9"
															},
															"nativeSrc": "11974:37:9",
															"nodeType": "YulIf",
															"src": "11974:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11824:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11855:1:9",
														"nodeType": "YulTypedName",
														"src": "11855:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11858:1:9",
														"nodeType": "YulTypedName",
														"src": "11858:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11864:4:9",
														"nodeType": "YulTypedName",
														"src": "11864:4:9",
														"type": ""
													}
												],
												"src": "11824:194:9"
											},
											{
												"body": {
													"nativeSrc": "12080:32:9",
													"nodeType": "YulBlock",
													"src": "12080:32:9",
													"statements": [
														{
															"nativeSrc": "12090:16:9",
															"nodeType": "YulAssignment",
															"src": "12090:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "12101:5:9",
																"nodeType": "YulIdentifier",
																"src": "12101:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12090:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12090:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_3000_by_1",
												"nativeSrc": "12024:88:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12062:5:9",
														"nodeType": "YulTypedName",
														"src": "12062:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12072:7:9",
														"nodeType": "YulTypedName",
														"src": "12072:7:9",
														"type": ""
													}
												],
												"src": "12024:88:9"
											},
											{
												"body": {
													"nativeSrc": "12162:47:9",
													"nodeType": "YulBlock",
													"src": "12162:47:9",
													"statements": [
														{
															"nativeSrc": "12172:31:9",
															"nodeType": "YulAssignment",
															"src": "12172:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12187:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12187:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12194:8:9",
																		"nodeType": "YulLiteral",
																		"src": "12194:8:9",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12183:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12183:3:9"
																},
																"nativeSrc": "12183:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12183:20:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12172:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12172:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "12118:91:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12144:5:9",
														"nodeType": "YulTypedName",
														"src": "12144:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12154:7:9",
														"nodeType": "YulTypedName",
														"src": "12154:7:9",
														"type": ""
													}
												],
												"src": "12118:91:9"
											},
											{
												"body": {
													"nativeSrc": "12285:92:9",
													"nodeType": "YulBlock",
													"src": "12285:92:9",
													"statements": [
														{
															"nativeSrc": "12295:76:9",
															"nodeType": "YulAssignment",
															"src": "12295:76:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12363:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12363:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_3000_by_1",
																					"nativeSrc": "12334:28:9",
																					"nodeType": "YulIdentifier",
																					"src": "12334:28:9"
																				},
																				"nativeSrc": "12334:35:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12334:35:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12325:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "12325:8:9"
																		},
																		"nativeSrc": "12325:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12325:45:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint24",
																	"nativeSrc": "12308:16:9",
																	"nodeType": "YulIdentifier",
																	"src": "12308:16:9"
																},
																"nativeSrc": "12308:63:9",
																"nodeType": "YulFunctionCall",
																"src": "12308:63:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12295:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "12295:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_3000_by_1_to_t_uint24",
												"nativeSrc": "12215:162:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12265:5:9",
														"nodeType": "YulTypedName",
														"src": "12265:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12275:9:9",
														"nodeType": "YulTypedName",
														"src": "12275:9:9",
														"type": ""
													}
												],
												"src": "12215:162:9"
											},
											{
												"body": {
													"nativeSrc": "12458:76:9",
													"nodeType": "YulBlock",
													"src": "12458:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12475:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12475:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_3000_by_1_to_t_uint24",
																			"nativeSrc": "12480:40:9",
																			"nodeType": "YulIdentifier",
																			"src": "12480:40:9"
																		},
																		"nativeSrc": "12480:47:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12480:47:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12468:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12468:6:9"
																},
																"nativeSrc": "12468:60:9",
																"nodeType": "YulFunctionCall",
																"src": "12468:60:9"
															},
															"nativeSrc": "12468:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "12468:60:9"
														}
													]
												},
												"name": "abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack",
												"nativeSrc": "12383:151:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12446:5:9",
														"nodeType": "YulTypedName",
														"src": "12446:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12453:3:9",
														"nodeType": "YulTypedName",
														"src": "12453:3:9",
														"type": ""
													}
												],
												"src": "12383:151:9"
											},
											{
												"body": {
													"nativeSrc": "12704:298:9",
													"nodeType": "YulBlock",
													"src": "12704:298:9",
													"statements": [
														{
															"nativeSrc": "12714:26:9",
															"nodeType": "YulAssignment",
															"src": "12714:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12726:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12726:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12737:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12737:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12722:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12722:3:9"
																},
																"nativeSrc": "12722:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12722:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12714:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12714:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12794:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12794:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12807:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12807:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12818:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12818:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12803:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12803:3:9"
																		},
																		"nativeSrc": "12803:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12803:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12750:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12750:43:9"
																},
																"nativeSrc": "12750:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12750:71:9"
															},
															"nativeSrc": "12750:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12750:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12875:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12875:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12888:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12888:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12899:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12899:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12884:3:9"
																		},
																		"nativeSrc": "12884:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12884:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12831:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12831:43:9"
																},
																"nativeSrc": "12831:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12831:72:9"
															},
															"nativeSrc": "12831:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12831:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12967:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12967:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12980:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12980:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12991:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12991:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12976:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12976:3:9"
																		},
																		"nativeSrc": "12976:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12976:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack",
																	"nativeSrc": "12913:53:9",
																	"nodeType": "YulIdentifier",
																	"src": "12913:53:9"
																},
																"nativeSrc": "12913:82:9",
																"nodeType": "YulFunctionCall",
																"src": "12913:82:9"
															},
															"nativeSrc": "12913:82:9",
															"nodeType": "YulExpressionStatement",
															"src": "12913:82:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nativeSrc": "12540:462:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12660:9:9",
														"nodeType": "YulTypedName",
														"src": "12660:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12672:6:9",
														"nodeType": "YulTypedName",
														"src": "12672:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12680:6:9",
														"nodeType": "YulTypedName",
														"src": "12680:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12688:6:9",
														"nodeType": "YulTypedName",
														"src": "12688:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12699:4:9",
														"nodeType": "YulTypedName",
														"src": "12699:4:9",
														"type": ""
													}
												],
												"src": "12540:462:9"
											},
											{
												"body": {
													"nativeSrc": "13051:79:9",
													"nodeType": "YulBlock",
													"src": "13051:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13108:16:9",
																"nodeType": "YulBlock",
																"src": "13108:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13117:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13117:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13120:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13120:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13110:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13110:6:9"
																			},
																			"nativeSrc": "13110:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13110:12:9"
																		},
																		"nativeSrc": "13110:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13110:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13074:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13074:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13099:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13099:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "13081:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "13081:17:9"
																				},
																				"nativeSrc": "13081:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13081:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13071:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13071:2:9"
																		},
																		"nativeSrc": "13071:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13071:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13064:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13064:6:9"
																},
																"nativeSrc": "13064:43:9",
																"nodeType": "YulFunctionCall",
																"src": "13064:43:9"
															},
															"nativeSrc": "13061:63:9",
															"nodeType": "YulIf",
															"src": "13061:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "13008:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13044:5:9",
														"nodeType": "YulTypedName",
														"src": "13044:5:9",
														"type": ""
													}
												],
												"src": "13008:122:9"
											},
											{
												"body": {
													"nativeSrc": "13199:80:9",
													"nodeType": "YulBlock",
													"src": "13199:80:9",
													"statements": [
														{
															"nativeSrc": "13209:22:9",
															"nodeType": "YulAssignment",
															"src": "13209:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13224:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13224:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13218:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13218:5:9"
																},
																"nativeSrc": "13218:13:9",
																"nodeType": "YulFunctionCall",
																"src": "13218:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13209:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13209:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13267:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13267:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "13240:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "13240:26:9"
																},
																"nativeSrc": "13240:33:9",
																"nodeType": "YulFunctionCall",
																"src": "13240:33:9"
															},
															"nativeSrc": "13240:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "13240:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "13136:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13177:6:9",
														"nodeType": "YulTypedName",
														"src": "13177:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13185:3:9",
														"nodeType": "YulTypedName",
														"src": "13185:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13193:5:9",
														"nodeType": "YulTypedName",
														"src": "13193:5:9",
														"type": ""
													}
												],
												"src": "13136:143:9"
											},
											{
												"body": {
													"nativeSrc": "13328:47:9",
													"nodeType": "YulBlock",
													"src": "13328:47:9",
													"statements": [
														{
															"nativeSrc": "13338:31:9",
															"nodeType": "YulAssignment",
															"src": "13338:31:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13360:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13360:1:9",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13363:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13363:5:9"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "13349:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "13349:10:9"
																},
																"nativeSrc": "13349:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13349:20:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13338:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "13338:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "13285:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13310:5:9",
														"nodeType": "YulTypedName",
														"src": "13310:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13320:7:9",
														"nodeType": "YulTypedName",
														"src": "13320:7:9",
														"type": ""
													}
												],
												"src": "13285:90:9"
											},
											{
												"body": {
													"nativeSrc": "13422:77:9",
													"nodeType": "YulBlock",
													"src": "13422:77:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13477:16:9",
																"nodeType": "YulBlock",
																"src": "13477:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13486:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13486:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13489:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13489:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13479:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13479:6:9"
																			},
																			"nativeSrc": "13479:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13479:12:9"
																		},
																		"nativeSrc": "13479:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13479:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13445:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13445:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13468:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13468:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "13452:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "13452:15:9"
																				},
																				"nativeSrc": "13452:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13452:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13442:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13442:2:9"
																		},
																		"nativeSrc": "13442:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13442:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13435:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13435:6:9"
																},
																"nativeSrc": "13435:41:9",
																"nodeType": "YulFunctionCall",
																"src": "13435:41:9"
															},
															"nativeSrc": "13432:61:9",
															"nodeType": "YulIf",
															"src": "13432:61:9"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "13381:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13415:5:9",
														"nodeType": "YulTypedName",
														"src": "13415:5:9",
														"type": ""
													}
												],
												"src": "13381:118:9"
											},
											{
												"body": {
													"nativeSrc": "13566:78:9",
													"nodeType": "YulBlock",
													"src": "13566:78:9",
													"statements": [
														{
															"nativeSrc": "13576:22:9",
															"nodeType": "YulAssignment",
															"src": "13576:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13591:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13591:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13585:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13585:5:9"
																},
																"nativeSrc": "13585:13:9",
																"nodeType": "YulFunctionCall",
																"src": "13585:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13576:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13576:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13632:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13632:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "13607:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "13607:24:9"
																},
																"nativeSrc": "13607:31:9",
																"nodeType": "YulFunctionCall",
																"src": "13607:31:9"
															},
															"nativeSrc": "13607:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "13607:31:9"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "13505:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13544:6:9",
														"nodeType": "YulTypedName",
														"src": "13544:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13552:3:9",
														"nodeType": "YulTypedName",
														"src": "13552:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13560:5:9",
														"nodeType": "YulTypedName",
														"src": "13560:5:9",
														"type": ""
													}
												],
												"src": "13505:139:9"
											},
											{
												"body": {
													"nativeSrc": "13694:45:9",
													"nodeType": "YulBlock",
													"src": "13694:45:9",
													"statements": [
														{
															"nativeSrc": "13704:29:9",
															"nodeType": "YulAssignment",
															"src": "13704:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13719:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13719:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13726:6:9",
																		"nodeType": "YulLiteral",
																		"src": "13726:6:9",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13715:3:9"
																},
																"nativeSrc": "13715:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13715:18:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13704:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "13704:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "13650:89:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13676:5:9",
														"nodeType": "YulTypedName",
														"src": "13676:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13686:7:9",
														"nodeType": "YulTypedName",
														"src": "13686:7:9",
														"type": ""
													}
												],
												"src": "13650:89:9"
											},
											{
												"body": {
													"nativeSrc": "13787:78:9",
													"nodeType": "YulBlock",
													"src": "13787:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13843:16:9",
																"nodeType": "YulBlock",
																"src": "13843:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13852:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13852:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13855:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13855:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13845:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13845:6:9"
																			},
																			"nativeSrc": "13845:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13845:12:9"
																		},
																		"nativeSrc": "13845:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13845:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13810:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13810:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13834:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13834:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "13817:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "13817:16:9"
																				},
																				"nativeSrc": "13817:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13817:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13807:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13807:2:9"
																		},
																		"nativeSrc": "13807:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13807:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13800:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13800:6:9"
																},
																"nativeSrc": "13800:42:9",
																"nodeType": "YulFunctionCall",
																"src": "13800:42:9"
															},
															"nativeSrc": "13797:62:9",
															"nodeType": "YulIf",
															"src": "13797:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "13745:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13780:5:9",
														"nodeType": "YulTypedName",
														"src": "13780:5:9",
														"type": ""
													}
												],
												"src": "13745:120:9"
											},
											{
												"body": {
													"nativeSrc": "13933:79:9",
													"nodeType": "YulBlock",
													"src": "13933:79:9",
													"statements": [
														{
															"nativeSrc": "13943:22:9",
															"nodeType": "YulAssignment",
															"src": "13943:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13958:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13952:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13952:5:9"
																},
																"nativeSrc": "13952:13:9",
																"nodeType": "YulFunctionCall",
																"src": "13952:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13943:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13943:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14000:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14000:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "13974:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "13974:25:9"
																},
																"nativeSrc": "13974:32:9",
																"nodeType": "YulFunctionCall",
																"src": "13974:32:9"
															},
															"nativeSrc": "13974:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "13974:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "13871:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13911:6:9",
														"nodeType": "YulTypedName",
														"src": "13911:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13919:3:9",
														"nodeType": "YulTypedName",
														"src": "13919:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13927:5:9",
														"nodeType": "YulTypedName",
														"src": "13927:5:9",
														"type": ""
													}
												],
												"src": "13871:141:9"
											},
											{
												"body": {
													"nativeSrc": "14061:43:9",
													"nodeType": "YulBlock",
													"src": "14061:43:9",
													"statements": [
														{
															"nativeSrc": "14071:27:9",
															"nodeType": "YulAssignment",
															"src": "14071:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14086:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14086:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14093:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14093:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14082:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14082:3:9"
																},
																"nativeSrc": "14082:16:9",
																"nodeType": "YulFunctionCall",
																"src": "14082:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14071:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "14071:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "14018:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14043:5:9",
														"nodeType": "YulTypedName",
														"src": "14043:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14053:7:9",
														"nodeType": "YulTypedName",
														"src": "14053:7:9",
														"type": ""
													}
												],
												"src": "14018:86:9"
											},
											{
												"body": {
													"nativeSrc": "14151:77:9",
													"nodeType": "YulBlock",
													"src": "14151:77:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "14206:16:9",
																"nodeType": "YulBlock",
																"src": "14206:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14215:1:9",
																					"nodeType": "YulLiteral",
																					"src": "14215:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14218:1:9",
																					"nodeType": "YulLiteral",
																					"src": "14218:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14208:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14208:6:9"
																			},
																			"nativeSrc": "14208:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14208:12:9"
																		},
																		"nativeSrc": "14208:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14208:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14174:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14174:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14197:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "14197:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "14181:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "14181:15:9"
																				},
																				"nativeSrc": "14181:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14181:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14171:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "14171:2:9"
																		},
																		"nativeSrc": "14171:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14171:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14164:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14164:6:9"
																},
																"nativeSrc": "14164:41:9",
																"nodeType": "YulFunctionCall",
																"src": "14164:41:9"
															},
															"nativeSrc": "14161:61:9",
															"nodeType": "YulIf",
															"src": "14161:61:9"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "14110:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14144:5:9",
														"nodeType": "YulTypedName",
														"src": "14144:5:9",
														"type": ""
													}
												],
												"src": "14110:118:9"
											},
											{
												"body": {
													"nativeSrc": "14295:78:9",
													"nodeType": "YulBlock",
													"src": "14295:78:9",
													"statements": [
														{
															"nativeSrc": "14305:22:9",
															"nodeType": "YulAssignment",
															"src": "14305:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14320:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14320:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14314:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14314:5:9"
																},
																"nativeSrc": "14314:13:9",
																"nodeType": "YulFunctionCall",
																"src": "14314:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14305:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14305:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14361:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14361:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "14336:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "14336:24:9"
																},
																"nativeSrc": "14336:31:9",
																"nodeType": "YulFunctionCall",
																"src": "14336:31:9"
															},
															"nativeSrc": "14336:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "14336:31:9"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "14234:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14273:6:9",
														"nodeType": "YulTypedName",
														"src": "14273:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14281:3:9",
														"nodeType": "YulTypedName",
														"src": "14281:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14289:5:9",
														"nodeType": "YulTypedName",
														"src": "14289:5:9",
														"type": ""
													}
												],
												"src": "14234:139:9"
											},
											{
												"body": {
													"nativeSrc": "14548:1102:9",
													"nodeType": "YulBlock",
													"src": "14548:1102:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "14595:83:9",
																"nodeType": "YulBlock",
																"src": "14595:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14597:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "14597:77:9"
																			},
																			"nativeSrc": "14597:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14597:79:9"
																		},
																		"nativeSrc": "14597:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14597:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14569:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "14569:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14578:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14578:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14565:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14565:3:9"
																		},
																		"nativeSrc": "14565:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14565:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14590:3:9",
																		"nodeType": "YulLiteral",
																		"src": "14590:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14561:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14561:3:9"
																},
																"nativeSrc": "14561:33:9",
																"nodeType": "YulFunctionCall",
																"src": "14561:33:9"
															},
															"nativeSrc": "14558:120:9",
															"nodeType": "YulIf",
															"src": "14558:120:9"
														},
														{
															"nativeSrc": "14688:128:9",
															"nodeType": "YulBlock",
															"src": "14688:128:9",
															"statements": [
																{
																	"nativeSrc": "14703:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14703:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14717:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14717:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14707:6:9",
																			"nodeType": "YulTypedName",
																			"src": "14707:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14732:74:9",
																	"nodeType": "YulAssignment",
																	"src": "14732:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14778:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "14778:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14789:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "14789:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14774:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14774:3:9"
																				},
																				"nativeSrc": "14774:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14774:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14798:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "14798:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "14742:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "14742:31:9"
																		},
																		"nativeSrc": "14742:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14742:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14732:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "14732:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14826:127:9",
															"nodeType": "YulBlock",
															"src": "14826:127:9",
															"statements": [
																{
																	"nativeSrc": "14841:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14841:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14855:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14855:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14845:6:9",
																			"nodeType": "YulTypedName",
																			"src": "14845:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14871:72:9",
																	"nodeType": "YulAssignment",
																	"src": "14871:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14915:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "14915:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14926:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "14926:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14911:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14911:3:9"
																				},
																				"nativeSrc": "14911:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14911:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14935:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "14935:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "14881:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "14881:29:9"
																		},
																		"nativeSrc": "14881:62:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14881:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14871:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "14871:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14963:128:9",
															"nodeType": "YulBlock",
															"src": "14963:128:9",
															"statements": [
																{
																	"nativeSrc": "14978:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14978:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14992:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14992:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14982:6:9",
																			"nodeType": "YulTypedName",
																			"src": "14982:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15008:73:9",
																	"nodeType": "YulAssignment",
																	"src": "15008:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15053:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "15053:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15064:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15064:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15049:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "15049:3:9"
																				},
																				"nativeSrc": "15049:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15049:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15073:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15073:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "15018:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "15018:30:9"
																		},
																		"nativeSrc": "15018:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15018:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "15008:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "15008:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15101:128:9",
															"nodeType": "YulBlock",
															"src": "15101:128:9",
															"statements": [
																{
																	"nativeSrc": "15116:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15116:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15130:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15130:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15120:6:9",
																			"nodeType": "YulTypedName",
																			"src": "15120:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15146:73:9",
																	"nodeType": "YulAssignment",
																	"src": "15146:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15191:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "15191:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15202:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15202:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15187:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "15187:3:9"
																				},
																				"nativeSrc": "15187:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15187:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15211:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15211:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "15156:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "15156:30:9"
																		},
																		"nativeSrc": "15156:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15156:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "15146:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "15146:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15239:129:9",
															"nodeType": "YulBlock",
															"src": "15239:129:9",
															"statements": [
																{
																	"nativeSrc": "15254:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15254:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15268:3:9",
																		"nodeType": "YulLiteral",
																		"src": "15268:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15258:6:9",
																			"nodeType": "YulTypedName",
																			"src": "15258:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15285:73:9",
																	"nodeType": "YulAssignment",
																	"src": "15285:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15330:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "15330:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15341:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15341:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15326:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "15326:3:9"
																				},
																				"nativeSrc": "15326:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15326:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15350:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15350:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "15295:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "15295:30:9"
																		},
																		"nativeSrc": "15295:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15295:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "15285:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "15285:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15378:128:9",
															"nodeType": "YulBlock",
															"src": "15378:128:9",
															"statements": [
																{
																	"nativeSrc": "15393:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15393:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15407:3:9",
																		"nodeType": "YulLiteral",
																		"src": "15407:3:9",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15397:6:9",
																			"nodeType": "YulTypedName",
																			"src": "15397:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15424:72:9",
																	"nodeType": "YulAssignment",
																	"src": "15424:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15468:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "15468:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15479:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15479:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15464:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "15464:3:9"
																				},
																				"nativeSrc": "15464:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15464:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15488:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15488:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "15434:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "15434:29:9"
																		},
																		"nativeSrc": "15434:62:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15434:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "15424:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "15424:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15516:127:9",
															"nodeType": "YulBlock",
															"src": "15516:127:9",
															"statements": [
																{
																	"nativeSrc": "15531:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15531:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15545:3:9",
																		"nodeType": "YulLiteral",
																		"src": "15545:3:9",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15535:6:9",
																			"nodeType": "YulTypedName",
																			"src": "15535:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15562:71:9",
																	"nodeType": "YulAssignment",
																	"src": "15562:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15605:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "15605:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15616:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15616:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15601:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "15601:3:9"
																				},
																				"nativeSrc": "15601:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15601:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15625:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15625:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15572:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "15572:28:9"
																		},
																		"nativeSrc": "15572:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15572:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "15562:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "15562:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "14379:1271:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14470:9:9",
														"nodeType": "YulTypedName",
														"src": "14470:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14481:7:9",
														"nodeType": "YulTypedName",
														"src": "14481:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14493:6:9",
														"nodeType": "YulTypedName",
														"src": "14493:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14501:6:9",
														"nodeType": "YulTypedName",
														"src": "14501:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14509:6:9",
														"nodeType": "YulTypedName",
														"src": "14509:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14517:6:9",
														"nodeType": "YulTypedName",
														"src": "14517:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14525:6:9",
														"nodeType": "YulTypedName",
														"src": "14525:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "14533:6:9",
														"nodeType": "YulTypedName",
														"src": "14533:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "14541:6:9",
														"nodeType": "YulTypedName",
														"src": "14541:6:9",
														"type": ""
													}
												],
												"src": "14379:1271:9"
											},
											{
												"body": {
													"nativeSrc": "15704:362:9",
													"nodeType": "YulBlock",
													"src": "15704:362:9",
													"statements": [
														{
															"nativeSrc": "15714:25:9",
															"nodeType": "YulAssignment",
															"src": "15714:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15737:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15737:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15719:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15719:17:9"
																},
																"nativeSrc": "15719:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15719:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15714:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15714:1:9"
																}
															]
														},
														{
															"nativeSrc": "15748:25:9",
															"nodeType": "YulAssignment",
															"src": "15748:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15771:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15771:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15753:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15753:17:9"
																},
																"nativeSrc": "15753:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15753:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15748:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15748:1:9"
																}
															]
														},
														{
															"nativeSrc": "15782:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "15782:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15805:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15805:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15808:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15808:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15801:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15801:3:9"
																},
																"nativeSrc": "15801:9:9",
																"nodeType": "YulFunctionCall",
																"src": "15801:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15786:11:9",
																	"nodeType": "YulTypedName",
																	"src": "15786:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15819:41:9",
															"nodeType": "YulAssignment",
															"src": "15819:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15848:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "15848:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15830:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15830:17:9"
																},
																"nativeSrc": "15830:30:9",
																"nodeType": "YulFunctionCall",
																"src": "15830:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15819:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "15819:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16037:22:9",
																"nodeType": "YulBlock",
																"src": "16037:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16039:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16039:16:9"
																			},
																			"nativeSrc": "16039:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16039:18:9"
																		},
																		"nativeSrc": "16039:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16039:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15970:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "15970:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15963:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "15963:6:9"
																				},
																				"nativeSrc": "15963:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15963:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15993:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "15993:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16000:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "16000:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16009:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "16009:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15996:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "15996:3:9"
																						},
																						"nativeSrc": "15996:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "15996:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15990:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "15990:2:9"
																				},
																				"nativeSrc": "15990:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15990:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15943:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "15943:2:9"
																		},
																		"nativeSrc": "15943:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15943:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15923:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15923:6:9"
																},
																"nativeSrc": "15923:113:9",
																"nodeType": "YulFunctionCall",
																"src": "15923:113:9"
															},
															"nativeSrc": "15920:139:9",
															"nodeType": "YulIf",
															"src": "15920:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15656:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15687:1:9",
														"nodeType": "YulTypedName",
														"src": "15687:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15690:1:9",
														"nodeType": "YulTypedName",
														"src": "15690:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15696:7:9",
														"nodeType": "YulTypedName",
														"src": "15696:7:9",
														"type": ""
													}
												],
												"src": "15656:410:9"
											},
											{
												"body": {
													"nativeSrc": "16100:152:9",
													"nodeType": "YulBlock",
													"src": "16100:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16117:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16117:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16120:77:9",
																		"nodeType": "YulLiteral",
																		"src": "16120:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16110:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16110:6:9"
																},
																"nativeSrc": "16110:88:9",
																"nodeType": "YulFunctionCall",
																"src": "16110:88:9"
															},
															"nativeSrc": "16110:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "16110:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16214:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16214:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16217:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16217:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16207:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16207:6:9"
																},
																"nativeSrc": "16207:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16207:15:9"
															},
															"nativeSrc": "16207:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16207:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16238:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16238:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16241:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16241:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16231:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16231:6:9"
																},
																"nativeSrc": "16231:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16231:15:9"
															},
															"nativeSrc": "16231:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16231:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16072:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "16072:180:9"
											},
											{
												"body": {
													"nativeSrc": "16300:143:9",
													"nodeType": "YulBlock",
													"src": "16300:143:9",
													"statements": [
														{
															"nativeSrc": "16310:25:9",
															"nodeType": "YulAssignment",
															"src": "16310:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16333:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16333:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16315:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16315:17:9"
																},
																"nativeSrc": "16315:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16315:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16310:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16310:1:9"
																}
															]
														},
														{
															"nativeSrc": "16344:25:9",
															"nodeType": "YulAssignment",
															"src": "16344:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16367:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16367:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16349:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16349:17:9"
																},
																"nativeSrc": "16349:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16349:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16344:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16344:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16391:22:9",
																"nodeType": "YulBlock",
																"src": "16391:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16393:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16393:16:9"
																			},
																			"nativeSrc": "16393:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16393:18:9"
																		},
																		"nativeSrc": "16393:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16393:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16388:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16388:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16381:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16381:6:9"
																},
																"nativeSrc": "16381:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16381:9:9"
															},
															"nativeSrc": "16378:35:9",
															"nodeType": "YulIf",
															"src": "16378:35:9"
														},
														{
															"nativeSrc": "16423:14:9",
															"nodeType": "YulAssignment",
															"src": "16423:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16432:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16432:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16435:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16435:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16428:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16428:3:9"
																},
																"nativeSrc": "16428:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16428:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16423:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16423:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16258:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16289:1:9",
														"nodeType": "YulTypedName",
														"src": "16289:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16292:1:9",
														"nodeType": "YulTypedName",
														"src": "16292:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16298:1:9",
														"nodeType": "YulTypedName",
														"src": "16298:1:9",
														"type": ""
													}
												],
												"src": "16258:185:9"
											},
											{
												"body": {
													"nativeSrc": "16555:69:9",
													"nodeType": "YulBlock",
													"src": "16555:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16577:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16577:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16585:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16585:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16573:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16573:3:9"
																		},
																		"nativeSrc": "16573:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16573:14:9"
																	},
																	{
																		"hexValue": "574554482062616c616e63654f66206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "16589:27:9",
																		"nodeType": "YulLiteral",
																		"src": "16589:27:9",
																		"type": "",
																		"value": "WETH balanceOf not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16566:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16566:6:9"
																},
																"nativeSrc": "16566:51:9",
																"nodeType": "YulFunctionCall",
																"src": "16566:51:9"
															},
															"nativeSrc": "16566:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "16566:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e",
												"nativeSrc": "16449:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16547:6:9",
														"nodeType": "YulTypedName",
														"src": "16547:6:9",
														"type": ""
													}
												],
												"src": "16449:175:9"
											},
											{
												"body": {
													"nativeSrc": "16776:220:9",
													"nodeType": "YulBlock",
													"src": "16776:220:9",
													"statements": [
														{
															"nativeSrc": "16786:74:9",
															"nodeType": "YulAssignment",
															"src": "16786:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16852:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16852:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16857:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16857:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16793:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16793:58:9"
																},
																"nativeSrc": "16793:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16793:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16786:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16786:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16958:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16958:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e",
																	"nativeSrc": "16869:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16869:88:9"
																},
																"nativeSrc": "16869:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16869:93:9"
															},
															"nativeSrc": "16869:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16869:93:9"
														},
														{
															"nativeSrc": "16971:19:9",
															"nodeType": "YulAssignment",
															"src": "16971:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16982:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16982:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16987:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16987:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16978:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16978:3:9"
																},
																"nativeSrc": "16978:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16978:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16971:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16971:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16630:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16764:3:9",
														"nodeType": "YulTypedName",
														"src": "16764:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16772:3:9",
														"nodeType": "YulTypedName",
														"src": "16772:3:9",
														"type": ""
													}
												],
												"src": "16630:366:9"
											},
											{
												"body": {
													"nativeSrc": "17173:248:9",
													"nodeType": "YulBlock",
													"src": "17173:248:9",
													"statements": [
														{
															"nativeSrc": "17183:26:9",
															"nodeType": "YulAssignment",
															"src": "17183:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17195:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17195:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17206:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17206:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17191:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17191:3:9"
																},
																"nativeSrc": "17191:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17191:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17183:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17183:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17230:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17230:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17241:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17241:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17226:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17226:3:9"
																		},
																		"nativeSrc": "17226:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17226:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17249:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17249:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17255:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17255:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17245:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17245:3:9"
																		},
																		"nativeSrc": "17245:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17245:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17219:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17219:6:9"
																},
																"nativeSrc": "17219:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17219:47:9"
															},
															"nativeSrc": "17219:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17219:47:9"
														},
														{
															"nativeSrc": "17275:139:9",
															"nodeType": "YulAssignment",
															"src": "17275:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17409:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17409:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17283:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17283:124:9"
																},
																"nativeSrc": "17283:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17283:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17275:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17275:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17002:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17153:9:9",
														"nodeType": "YulTypedName",
														"src": "17153:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17168:4:9",
														"nodeType": "YulTypedName",
														"src": "17168:4:9",
														"type": ""
													}
												],
												"src": "17002:419:9"
											},
											{
												"body": {
													"nativeSrc": "17633:395:9",
													"nodeType": "YulBlock",
													"src": "17633:395:9",
													"statements": [
														{
															"nativeSrc": "17643:27:9",
															"nodeType": "YulAssignment",
															"src": "17643:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17655:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17655:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17666:3:9",
																		"nodeType": "YulLiteral",
																		"src": "17666:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17651:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17651:3:9"
																},
																"nativeSrc": "17651:19:9",
																"nodeType": "YulFunctionCall",
																"src": "17651:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17643:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17643:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17732:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17732:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17745:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17745:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17756:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17756:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17741:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17741:3:9"
																		},
																		"nativeSrc": "17741:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17741:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_2_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "17680:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "17680:51:9"
																},
																"nativeSrc": "17680:79:9",
																"nodeType": "YulFunctionCall",
																"src": "17680:79:9"
															},
															"nativeSrc": "17680:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "17680:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17821:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17821:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17834:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17834:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17845:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17845:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17830:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17830:3:9"
																		},
																		"nativeSrc": "17830:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17830:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "17769:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "17769:51:9"
																},
																"nativeSrc": "17769:80:9",
																"nodeType": "YulFunctionCall",
																"src": "17769:80:9"
															},
															"nativeSrc": "17769:80:9",
															"nodeType": "YulExpressionStatement",
															"src": "17769:80:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17903:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17903:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17916:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17916:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17927:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17927:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17912:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17912:3:9"
																		},
																		"nativeSrc": "17912:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17912:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17859:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17859:43:9"
																},
																"nativeSrc": "17859:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17859:72:9"
															},
															"nativeSrc": "17859:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17859:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17993:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17993:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18006:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18006:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18017:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18017:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18002:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18002:3:9"
																		},
																		"nativeSrc": "18002:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18002:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "17941:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "17941:51:9"
																},
																"nativeSrc": "17941:80:9",
																"nodeType": "YulFunctionCall",
																"src": "17941:80:9"
															},
															"nativeSrc": "17941:80:9",
															"nodeType": "YulExpressionStatement",
															"src": "17941:80:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_2_by_1_t_rational_0_by_1_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17427:601:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17581:9:9",
														"nodeType": "YulTypedName",
														"src": "17581:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17593:6:9",
														"nodeType": "YulTypedName",
														"src": "17593:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17601:6:9",
														"nodeType": "YulTypedName",
														"src": "17601:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17609:6:9",
														"nodeType": "YulTypedName",
														"src": "17609:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17617:6:9",
														"nodeType": "YulTypedName",
														"src": "17617:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17628:4:9",
														"nodeType": "YulTypedName",
														"src": "17628:4:9",
														"type": ""
													}
												],
												"src": "17427:601:9"
											},
											{
												"body": {
													"nativeSrc": "18089:53:9",
													"nodeType": "YulBlock",
													"src": "18089:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18106:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18106:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18129:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18129:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "18111:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "18111:17:9"
																		},
																		"nativeSrc": "18111:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18111:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18099:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18099:6:9"
																},
																"nativeSrc": "18099:37:9",
																"nodeType": "YulFunctionCall",
																"src": "18099:37:9"
															},
															"nativeSrc": "18099:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "18099:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "18034:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18077:5:9",
														"nodeType": "YulTypedName",
														"src": "18077:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18084:3:9",
														"nodeType": "YulTypedName",
														"src": "18084:3:9",
														"type": ""
													}
												],
												"src": "18034:108:9"
											},
											{
												"body": {
													"nativeSrc": "18201:52:9",
													"nodeType": "YulBlock",
													"src": "18201:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18218:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18218:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18240:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18240:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "18223:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "18223:16:9"
																		},
																		"nativeSrc": "18223:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18223:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18211:6:9"
																},
																"nativeSrc": "18211:36:9",
																"nodeType": "YulFunctionCall",
																"src": "18211:36:9"
															},
															"nativeSrc": "18211:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "18211:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "18148:105:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18189:5:9",
														"nodeType": "YulTypedName",
														"src": "18189:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18196:3:9",
														"nodeType": "YulTypedName",
														"src": "18196:3:9",
														"type": ""
													}
												],
												"src": "18148:105:9"
											},
											{
												"body": {
													"nativeSrc": "18314:53:9",
													"nodeType": "YulBlock",
													"src": "18314:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18331:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18331:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18354:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18354:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "18336:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "18336:17:9"
																		},
																		"nativeSrc": "18336:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18336:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18324:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18324:6:9"
																},
																"nativeSrc": "18324:37:9",
																"nodeType": "YulFunctionCall",
																"src": "18324:37:9"
															},
															"nativeSrc": "18324:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "18324:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "18259:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18302:5:9",
														"nodeType": "YulTypedName",
														"src": "18302:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18309:3:9",
														"nodeType": "YulTypedName",
														"src": "18309:3:9",
														"type": ""
													}
												],
												"src": "18259:108:9"
											},
											{
												"body": {
													"nativeSrc": "18428:53:9",
													"nodeType": "YulBlock",
													"src": "18428:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18445:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18445:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18468:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18468:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "18450:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "18450:17:9"
																		},
																		"nativeSrc": "18450:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18450:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18438:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18438:6:9"
																},
																"nativeSrc": "18438:37:9",
																"nodeType": "YulFunctionCall",
																"src": "18438:37:9"
															},
															"nativeSrc": "18438:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "18438:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "18373:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18416:5:9",
														"nodeType": "YulTypedName",
														"src": "18416:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18423:3:9",
														"nodeType": "YulTypedName",
														"src": "18423:3:9",
														"type": ""
													}
												],
												"src": "18373:108:9"
											},
											{
												"body": {
													"nativeSrc": "18727:1479:9",
													"nodeType": "YulBlock",
													"src": "18727:1479:9",
													"statements": [
														{
															"nativeSrc": "18737:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "18737:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18753:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18753:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18758:6:9",
																		"nodeType": "YulLiteral",
																		"src": "18758:6:9",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18749:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18749:3:9"
																},
																"nativeSrc": "18749:16:9",
																"nodeType": "YulFunctionCall",
																"src": "18749:16:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "18741:4:9",
																	"nodeType": "YulTypedName",
																	"src": "18741:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18775:167:9",
															"nodeType": "YulBlock",
															"src": "18775:167:9",
															"statements": [
																{
																	"nativeSrc": "18813:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18813:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18843:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "18843:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18850:4:9",
																						"nodeType": "YulLiteral",
																						"src": "18850:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18839:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "18839:3:9"
																				},
																				"nativeSrc": "18839:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18839:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18833:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "18833:5:9"
																		},
																		"nativeSrc": "18833:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18833:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "18817:12:9",
																			"nodeType": "YulTypedName",
																			"src": "18817:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "18903:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "18903:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "18921:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "18921:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18926:4:9",
																						"nodeType": "YulLiteral",
																						"src": "18926:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18917:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "18917:3:9"
																				},
																				"nativeSrc": "18917:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18917:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "18869:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "18869:33:9"
																		},
																		"nativeSrc": "18869:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18869:63:9"
																	},
																	"nativeSrc": "18869:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "18869:63:9"
																}
															]
														},
														{
															"nativeSrc": "18952:168:9",
															"nodeType": "YulBlock",
															"src": "18952:168:9",
															"statements": [
																{
																	"nativeSrc": "18991:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18991:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19021:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "19021:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19028:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19028:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19017:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19017:3:9"
																				},
																				"nativeSrc": "19017:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19017:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19011:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "19011:5:9"
																		},
																		"nativeSrc": "19011:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19011:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "18995:12:9",
																			"nodeType": "YulTypedName",
																			"src": "18995:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "19081:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "19081:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "19099:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "19099:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19104:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19104:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19095:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19095:3:9"
																				},
																				"nativeSrc": "19095:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19095:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "19047:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "19047:33:9"
																		},
																		"nativeSrc": "19047:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19047:63:9"
																	},
																	"nativeSrc": "19047:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "19047:63:9"
																}
															]
														},
														{
															"nativeSrc": "19130:161:9",
															"nodeType": "YulBlock",
															"src": "19130:161:9",
															"statements": [
																{
																	"nativeSrc": "19164:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19164:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19194:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "19194:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19201:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19201:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19190:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19190:3:9"
																				},
																				"nativeSrc": "19190:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19190:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19184:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "19184:5:9"
																		},
																		"nativeSrc": "19184:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19184:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "19168:12:9",
																			"nodeType": "YulTypedName",
																			"src": "19168:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "19252:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "19252:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "19270:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "19270:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19275:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19275:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19266:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19266:3:9"
																				},
																				"nativeSrc": "19266:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19266:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "19220:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "19220:31:9"
																		},
																		"nativeSrc": "19220:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19220:61:9"
																	},
																	"nativeSrc": "19220:61:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "19220:61:9"
																}
															]
														},
														{
															"nativeSrc": "19301:169:9",
															"nodeType": "YulBlock",
															"src": "19301:169:9",
															"statements": [
																{
																	"nativeSrc": "19341:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19341:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19371:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "19371:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19378:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19378:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19367:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19367:3:9"
																				},
																				"nativeSrc": "19367:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19367:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19361:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "19361:5:9"
																		},
																		"nativeSrc": "19361:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19361:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "19345:12:9",
																			"nodeType": "YulTypedName",
																			"src": "19345:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "19431:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "19431:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "19449:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "19449:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19454:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19454:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19445:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19445:3:9"
																				},
																				"nativeSrc": "19445:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19445:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "19397:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "19397:33:9"
																		},
																		"nativeSrc": "19397:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19397:63:9"
																	},
																	"nativeSrc": "19397:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "19397:63:9"
																}
															]
														},
														{
															"nativeSrc": "19480:168:9",
															"nodeType": "YulBlock",
															"src": "19480:168:9",
															"statements": [
																{
																	"nativeSrc": "19519:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19519:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19549:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "19549:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19556:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19556:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19545:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19545:3:9"
																				},
																				"nativeSrc": "19545:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19545:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19539:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "19539:5:9"
																		},
																		"nativeSrc": "19539:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19539:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "19523:12:9",
																			"nodeType": "YulTypedName",
																			"src": "19523:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "19609:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "19609:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "19627:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "19627:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19632:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19632:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19623:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19623:3:9"
																				},
																				"nativeSrc": "19623:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19623:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "19575:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "19575:33:9"
																		},
																		"nativeSrc": "19575:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19575:63:9"
																	},
																	"nativeSrc": "19575:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "19575:63:9"
																}
															]
														},
														{
															"nativeSrc": "19658:168:9",
															"nodeType": "YulBlock",
															"src": "19658:168:9",
															"statements": [
																{
																	"nativeSrc": "19697:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19697:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19727:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "19727:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19734:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19734:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19723:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19723:3:9"
																				},
																				"nativeSrc": "19723:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19723:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19717:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "19717:5:9"
																		},
																		"nativeSrc": "19717:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19717:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "19701:12:9",
																			"nodeType": "YulTypedName",
																			"src": "19701:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "19787:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "19787:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "19805:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "19805:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19810:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19810:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19801:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19801:3:9"
																				},
																				"nativeSrc": "19801:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19801:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "19753:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "19753:33:9"
																		},
																		"nativeSrc": "19753:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19753:63:9"
																	},
																	"nativeSrc": "19753:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "19753:63:9"
																}
															]
														},
														{
															"nativeSrc": "19836:176:9",
															"nodeType": "YulBlock",
															"src": "19836:176:9",
															"statements": [
																{
																	"nativeSrc": "19883:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19883:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19913:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "19913:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19920:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19920:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19909:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19909:3:9"
																				},
																				"nativeSrc": "19909:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19909:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19903:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "19903:5:9"
																		},
																		"nativeSrc": "19903:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19903:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "19887:12:9",
																			"nodeType": "YulTypedName",
																			"src": "19887:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "19973:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "19973:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "19991:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "19991:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19996:4:9",
																						"nodeType": "YulLiteral",
																						"src": "19996:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19987:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19987:3:9"
																				},
																				"nativeSrc": "19987:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19987:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "19939:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "19939:33:9"
																		},
																		"nativeSrc": "19939:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19939:63:9"
																	},
																	"nativeSrc": "19939:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "19939:63:9"
																}
															]
														},
														{
															"nativeSrc": "20022:177:9",
															"nodeType": "YulBlock",
															"src": "20022:177:9",
															"statements": [
																{
																	"nativeSrc": "20070:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20070:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20100:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "20100:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20107:4:9",
																						"nodeType": "YulLiteral",
																						"src": "20107:4:9",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20096:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "20096:3:9"
																				},
																				"nativeSrc": "20096:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "20096:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "20090:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "20090:5:9"
																		},
																		"nativeSrc": "20090:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20090:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "20074:12:9",
																			"nodeType": "YulTypedName",
																			"src": "20074:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "20160:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "20160:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "20178:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "20178:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20183:4:9",
																						"nodeType": "YulLiteral",
																						"src": "20183:4:9",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20174:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "20174:3:9"
																				},
																				"nativeSrc": "20174:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "20174:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "20126:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "20126:33:9"
																		},
																		"nativeSrc": "20126:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20126:63:9"
																	},
																	"nativeSrc": "20126:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "20126:63:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$1464_memory_ptr_to_t_struct$_ExactInputSingleParams_$1464_memory_ptr_fromStack",
												"nativeSrc": "18581:1625:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18714:5:9",
														"nodeType": "YulTypedName",
														"src": "18714:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18721:3:9",
														"nodeType": "YulTypedName",
														"src": "18721:3:9",
														"type": ""
													}
												],
												"src": "18581:1625:9"
											},
											{
												"body": {
													"nativeSrc": "20390:205:9",
													"nodeType": "YulBlock",
													"src": "20390:205:9",
													"statements": [
														{
															"nativeSrc": "20400:27:9",
															"nodeType": "YulAssignment",
															"src": "20400:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20412:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20412:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20423:3:9",
																		"nodeType": "YulLiteral",
																		"src": "20423:3:9",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20408:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20408:3:9"
																},
																"nativeSrc": "20408:19:9",
																"nodeType": "YulFunctionCall",
																"src": "20408:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20400:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20400:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20561:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20561:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20574:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20574:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20585:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20585:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20570:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20570:3:9"
																		},
																		"nativeSrc": "20570:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20570:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$1464_memory_ptr_to_t_struct$_ExactInputSingleParams_$1464_memory_ptr_fromStack",
																	"nativeSrc": "20437:123:9",
																	"nodeType": "YulIdentifier",
																	"src": "20437:123:9"
																},
																"nativeSrc": "20437:151:9",
																"nodeType": "YulFunctionCall",
																"src": "20437:151:9"
															},
															"nativeSrc": "20437:151:9",
															"nodeType": "YulExpressionStatement",
															"src": "20437:151:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$1464_memory_ptr__to_t_struct$_ExactInputSingleParams_$1464_memory_ptr__fromStack_reversed",
												"nativeSrc": "20212:383:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20362:9:9",
														"nodeType": "YulTypedName",
														"src": "20362:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20374:6:9",
														"nodeType": "YulTypedName",
														"src": "20374:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20385:4:9",
														"nodeType": "YulTypedName",
														"src": "20385:4:9",
														"type": ""
													}
												],
												"src": "20212:383:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can call this functio\")\n\n        mstore(add(memPtr, 32), \"n.\")\n\n    }\n\n    function abi_encode_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDC balsenceOF not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function cleanup_t_rational_2_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_2_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_2_by_1(value)))\n    }\n\n    function abi_encode_t_rational_2_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_2_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_2_by_1_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_2_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8(memPtr) {\n\n        mstore(add(memPtr, 0), \"WETH balsenceOF not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDC balanceOf not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_2_by_1_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_2_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Arbitrage profit <=0\")\n\n    }\n\n    function abi_encode_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_3000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function convert_t_rational_3000_by_1_to_t_uint24(value) -> converted {\n        converted := cleanup_t_uint24(identity(cleanup_t_rational_3000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_3000_by_1_to_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e(memPtr) {\n\n        mstore(add(memPtr, 0), \"WETH balanceOf not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_rational_2_by_1_t_rational_0_by_1_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_2_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$1464_memory_ptr_to_t_struct$_ExactInputSingleParams_$1464_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$1464_memory_ptr__to_t_struct$_ExactInputSingleParams_$1464_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$1464_memory_ptr_to_t_struct$_ExactInputSingleParams_$1464_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610085575f3560e01c806364084ac01161005857806364084ac014610147578063793c084514610183578063926446db146101bf578063bbceefe3146101fb578063cc9901aa1461023757610085565b8063064a8a8a146100895780631de3df2c146100c55780633eb61c1c146100cf57806354258cc41461010b575b5f80fd5b348015610094575f80fd5b506100af60048036038101906100aa91906114d1565b610273565b6040516100bc919061150b565b60405180910390f35b6100cd61040d565b005b3480156100da575f80fd5b506100f560048036038101906100f091906114d1565b610480565b604051610102919061150b565b60405180910390f35b348015610116575f80fd5b50610131600480360381019061012c91906114d1565b610519565b60405161013e919061150b565b60405180910390f35b348015610152575f80fd5b5061016d600480360381019061016891906114d1565b6106b3565b60405161017a9190611563565b60405180910390f35b34801561018e575f80fd5b506101a960048036038101906101a491906114d1565b610747565b6040516101b6919061150b565b60405180910390f35b3480156101ca575f80fd5b506101e560048036038101906101e091906114d1565b6109e4565b6040516101f2919061150b565b60405180910390f35b348015610206575f80fd5b50610221600480360381019061021c91906114d1565b610e8c565b60405161022e919061150b565b60405180910390f35b348015610242575f80fd5b5061025d600480360381019061025891906114d1565b61103a565b60405161026a919061150b565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610302576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f9906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103509190611563565b602060405180830381865afa15801561036b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038f919061162e565b10156103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c7906116a3565b60405180910390fd5b61040673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb8856112d7565b9050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015610467575f80fd5b505af1158015610479573d5f803e3d5ffd5b5050505050565b5f737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff1663556d6e9f5f6002856040518463ffffffff1660e01b81526004016104d39392919061173c565b602060405180830381865afa1580156104ee573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610512919061162e565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f906115fc565b60405180910390fd5b8173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105f69190611563565b602060405180830381865afa158015610611573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610635919061162e565b1015610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d906117bb565b60405180910390fd5b6106ac73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610bb8856112d7565b9050919050565b5f737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff1663c6610657836040518263ffffffff1660e01b8152600401610701919061150b565b602060405180830381865afa15801561071c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107409190611803565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cd906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108249190611563565b602060405180830381865afa15801561083f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610863919061162e565b10156108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90611878565b60405180910390fd5b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737f86bf177dd4f3494b841a37e810a34dd56c829b846040518363ffffffff1660e01b8152600401610907929190611896565b6020604051808303815f875af1158015610923573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094791906118f2565b50737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff16635b41b9085f60028560016040518563ffffffff1660e01b815260040161099d9493929190611956565b6020604051808303815f875af11580156109b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109dd919061162e565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6a906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ac19190611563565b602060405180830381865afa158015610adc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b00919061162e565b1015610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3890611878565b60405180910390fd5b5f805f3073ffffffffffffffffffffffffffffffffffffffff1663bbceefe3836040518263ffffffff1660e01b8152600401610b7d919061150b565b602060405180830381865afa158015610b98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbc919061162e565b90505f3073ffffffffffffffffffffffffffffffffffffffff16633eb61c1c876040518263ffffffff1660e01b8152600401610bf8919061150b565b602060405180830381865afa158015610c13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c37919061162e565b905080821115610d3c573073ffffffffffffffffffffffffffffffffffffffff1663064a8a8a876040518263ffffffff1660e01b8152600401610c7a919061150b565b6020604051808303815f875af1158015610c96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cba919061162e565b93503073ffffffffffffffffffffffffffffffffffffffff1663cc9901aa856040518263ffffffff1660e01b8152600401610cf5919061150b565b6020604051808303815f875af1158015610d11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d35919061162e565b9250610e33565b3073ffffffffffffffffffffffffffffffffffffffff1663793c0845876040518263ffffffff1660e01b8152600401610d75919061150b565b6020604051808303815f875af1158015610d91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db5919061162e565b93503073ffffffffffffffffffffffffffffffffffffffff166354258cc4856040518263ffffffff1660e01b8152600401610df0919061150b565b6020604051808303815f875af1158015610e0c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e30919061162e565b92505b858311610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c906119e3565b60405180910390fd5b8583610e819190611a2e565b945050505050919050565b5f80731f98431c8ad98523631ae4a59f267346ea31f98473ffffffffffffffffffffffffffffffffffffffff16631698ee8273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb86040518463ffffffff1660e01b8152600401610f0993929190611aa8565b602060405180830381865afa158015610f24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f489190611803565b90505f8190505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610f98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fbc9190611baa565b50505050505090505f78010000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166110179190611c47565b6110219190611cb5565b9050808661102f9190611c47565b945050505050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c0906115fc565b60405180910390fd5b8173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111179190611563565b602060405180830381865afa158015611132573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611156919061162e565b1015611197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118e90611d2f565b60405180910390fd5b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737f86bf177dd4f3494b841a37e810a34dd56c829b846040518363ffffffff1660e01b81526004016111fa929190611896565b6020604051808303815f875af1158015611216573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123a91906118f2565b50737f86bf177dd4f3494b841a37e810a34dd56c829b73ffffffffffffffffffffffffffffffffffffffff16635b41b90860025f8560016040518563ffffffff1660e01b81526004016112909493929190611d4d565b6020604051808303815f875af11580156112ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112d0919061162e565b9050919050565b5f8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b373e592427a0aece92de3edee1f18e0157c05861564846040518363ffffffff1660e01b8152600401611327929190611896565b6020604051808303815f875af1158015611343573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061136791906118f2565b505f6040518061010001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018562ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161144f9190611e6c565b6020604051808303815f875af115801561146b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148f919061162e565b915050949350505050565b5f80fd5b5f819050919050565b6114b08161149e565b81146114ba575f80fd5b50565b5f813590506114cb816114a7565b92915050565b5f602082840312156114e6576114e561149a565b5b5f6114f3848285016114bd565b91505092915050565b6115058161149e565b82525050565b5f60208201905061151e5f8301846114fc565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61154d82611524565b9050919050565b61155d81611543565b82525050565b5f6020820190506115765f830184611554565b92915050565b5f82825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f5f8201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b5f6115e660228361157c565b91506115f18261158c565b604082019050919050565b5f6020820190508181035f830152611613816115da565b9050919050565b5f81519050611628816114a7565b92915050565b5f602082840312156116435761164261149a565b5b5f6116508482850161161a565b91505092915050565b7f555344432062616c73656e63654f46206e6f7420656e6f7567680000000000005f82015250565b5f61168d601a8361157c565b915061169882611659565b602082019050919050565b5f6020820190508181035f8301526116ba81611681565b9050919050565b5f819050919050565b5f819050919050565b5f6116ed6116e86116e3846116c1565b6116ca565b61149e565b9050919050565b6116fd816116d3565b82525050565b5f819050919050565b5f61172661172161171c84611703565b6116ca565b61149e565b9050919050565b6117368161170c565b82525050565b5f60608201905061174f5f8301866116f4565b61175c602083018561172d565b61176960408301846114fc565b949350505050565b7f574554482062616c73656e63654f46206e6f7420656e6f7567680000000000005f82015250565b5f6117a5601a8361157c565b91506117b082611771565b602082019050919050565b5f6020820190508181035f8301526117d281611799565b9050919050565b6117e281611543565b81146117ec575f80fd5b50565b5f815190506117fd816117d9565b92915050565b5f602082840312156118185761181761149a565b5b5f611825848285016117ef565b91505092915050565b7f555344432062616c616e63654f66206e6f7420656e6f756768000000000000005f82015250565b5f61186260198361157c565b915061186d8261182e565b602082019050919050565b5f6020820190508181035f83015261188f81611856565b9050919050565b5f6040820190506118a95f830185611554565b6118b660208301846114fc565b9392505050565b5f8115159050919050565b6118d1816118bd565b81146118db575f80fd5b50565b5f815190506118ec816118c8565b92915050565b5f602082840312156119075761190661149a565b5b5f611914848285016118de565b91505092915050565b5f819050919050565b5f61194061193b6119368461191d565b6116ca565b61149e565b9050919050565b61195081611926565b82525050565b5f6080820190506119695f8301876116f4565b611976602083018661172d565b61198360408301856114fc565b6119906060830184611947565b95945050505050565b7f4172626974726167652070726f666974203c3d300000000000000000000000005f82015250565b5f6119cd60148361157c565b91506119d882611999565b602082019050919050565b5f6020820190508181035f8301526119fa816119c1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a388261149e565b9150611a438361149e565b9250828203905081811115611a5b57611a5a611a01565b5b92915050565b5f819050919050565b5f62ffffff82169050919050565b5f611a92611a8d611a8884611a61565b6116ca565b611a6a565b9050919050565b611aa281611a78565b82525050565b5f606082019050611abb5f830186611554565b611ac86020830185611554565b611ad56040830184611a99565b949350505050565b611ae681611524565b8114611af0575f80fd5b50565b5f81519050611b0181611add565b92915050565b5f8160020b9050919050565b611b1c81611b07565b8114611b26575f80fd5b50565b5f81519050611b3781611b13565b92915050565b5f61ffff82169050919050565b611b5381611b3d565b8114611b5d575f80fd5b50565b5f81519050611b6e81611b4a565b92915050565b5f60ff82169050919050565b611b8981611b74565b8114611b93575f80fd5b50565b5f81519050611ba481611b80565b92915050565b5f805f805f805f60e0888a031215611bc557611bc461149a565b5b5f611bd28a828b01611af3565b9750506020611be38a828b01611b29565b9650506040611bf48a828b01611b60565b9550506060611c058a828b01611b60565b9450506080611c168a828b01611b60565b93505060a0611c278a828b01611b96565b92505060c0611c388a828b016118de565b91505092959891949750929550565b5f611c518261149e565b9150611c5c8361149e565b9250828202611c6a8161149e565b91508282048414831517611c8157611c80611a01565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611cbf8261149e565b9150611cca8361149e565b925082611cda57611cd9611c88565b5b828204905092915050565b7f574554482062616c616e63654f66206e6f7420656e6f756768000000000000005f82015250565b5f611d1960198361157c565b9150611d2482611ce5565b602082019050919050565b5f6020820190508181035f830152611d4681611d0d565b9050919050565b5f608082019050611d605f83018761172d565b611d6d60208301866116f4565b611d7a60408301856114fc565b611d876060830184611947565b95945050505050565b611d9981611543565b82525050565b611da881611a6a565b82525050565b611db78161149e565b82525050565b611dc681611524565b82525050565b61010082015f820151611de15f850182611d90565b506020820151611df46020850182611d90565b506040820151611e076040850182611d9f565b506060820151611e1a6060850182611d90565b506080820151611e2d6080850182611dae565b5060a0820151611e4060a0850182611dae565b5060c0820151611e5360c0850182611dae565b5060e0820151611e6660e0850182611dbd565b50505050565b5f61010082019050611e805f830184611dcc565b9291505056fea26469706673582212200dbd87a6a4adc3fc63d0029a371f21c480d9ca79cfe307d90a4826e5052e9ede64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64084AC0 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x64084AC0 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x793C0845 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x926446DB EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xBBCEEFE3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xCC9901AA EQ PUSH2 0x237 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x64A8A8A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1DE3DF2C EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x3EB61C1C EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x54258CC4 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C7 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x406 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 DUP6 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x556D6E9F PUSH0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4EE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH2 0xBB8 DUP6 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6610657 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89B SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP3 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x923 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x947 SWAP2 SWAP1 PUSH2 0x18F2 JUMP JUMPDEST POP PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5B41B908 PUSH0 PUSH1 0x2 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB38 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBBCEEFE3 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3EB61C1C DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC13 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD3C JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x64A8A8A DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP4 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCC9901AA DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD35 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP3 POP PUSH2 0xE33 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x793C0845 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP4 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54258CC4 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP3 POP JUMPDEST DUP6 DUP4 GT PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP4 PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0x1F98431C8AD98523631AE4A59F267346EA31F984 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF24 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF48 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x1021 SWAP2 SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH2 0x102F SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C0 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1132 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1156 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST LT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP1 PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP3 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1216 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x18F2 JUMP JUMPDEST POP PUSH20 0x7F86BF177DD4F3494B841A37E810A34DD56C829B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5B41B908 PUSH1 0x2 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1327 SWAP3 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x18F2 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x146B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B0 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP2 EQ PUSH2 0x14BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CB DUP2 PUSH2 0x14A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E6 JUMPI PUSH2 0x14E5 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F3 DUP5 DUP3 DUP6 ADD PUSH2 0x14BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1505 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151E PUSH0 DUP4 ADD DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x154D DUP3 PUSH2 0x1524 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x1543 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1576 PUSH0 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E2E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15E6 PUSH1 0x22 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x15F1 DUP3 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1613 DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1628 DUP2 PUSH2 0x14A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1650 DUP5 DUP3 DUP6 ADD PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555344432062616C73656E63654F46206E6F7420656E6F756768000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x168D PUSH1 0x1A DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x1698 DUP3 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16BA DUP2 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH2 0x16E8 PUSH2 0x16E3 DUP5 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FD DUP2 PUSH2 0x16D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1726 PUSH2 0x1721 PUSH2 0x171C DUP5 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1736 DUP2 PUSH2 0x170C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x174F PUSH0 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x175C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1769 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x574554482062616C73656E63654F46206E6F7420656E6F756768000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17A5 PUSH1 0x1A DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x17B0 DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D2 DUP2 PUSH2 0x1799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1543 JUMP JUMPDEST DUP2 EQ PUSH2 0x17EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17FD DUP2 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1818 JUMPI PUSH2 0x1817 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1825 DUP5 DUP3 DUP6 ADD PUSH2 0x17EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555344432062616C616E63654F66206E6F7420656E6F75676800000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1862 PUSH1 0x19 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x186D DUP3 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188F DUP2 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x18B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D1 DUP2 PUSH2 0x18BD JUMP JUMPDEST DUP2 EQ PUSH2 0x18DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18EC DUP2 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1914 DUP5 DUP3 DUP6 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1940 PUSH2 0x193B PUSH2 0x1936 DUP5 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1950 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1969 PUSH0 DUP4 ADD DUP8 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x1976 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1983 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x1990 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1947 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4172626974726167652070726F666974203C3D30000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19CD PUSH1 0x14 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x19D8 DUP3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19FA DUP2 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A38 DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP4 PUSH2 0x149E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A5B JUMPI PUSH2 0x1A5A PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A92 PUSH2 0x1A8D PUSH2 0x1A88 DUP5 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x1A6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x1A78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH0 DUP4 ADD DUP7 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1AC8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A99 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x1524 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1C DUP2 PUSH2 0x1B07 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B37 DUP2 PUSH2 0x1B13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B6E DUP2 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B89 DUP2 PUSH2 0x1B74 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BA4 DUP2 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD2 DUP11 DUP3 DUP12 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1BE3 DUP11 DUP3 DUP12 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1BF4 DUP11 DUP3 DUP12 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C05 DUP11 DUP3 DUP12 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C16 DUP11 DUP3 DUP12 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C27 DUP11 DUP3 DUP12 ADD PUSH2 0x1B96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C38 DUP11 DUP3 DUP12 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP4 PUSH2 0x149E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C6A DUP2 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CBF DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCA DUP4 PUSH2 0x149E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C88 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x574554482062616C616E63654F66206E6F7420656E6F75676800000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D19 PUSH1 0x19 DUP4 PUSH2 0x157C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D24 DUP3 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D46 DUP2 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D60 PUSH0 DUP4 ADD DUP8 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1D6D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x1D7A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x1D87 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1947 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D99 DUP2 PUSH2 0x1543 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x1A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DB7 DUP2 PUSH2 0x149E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DC6 DUP2 PUSH2 0x1524 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1DE1 PUSH0 DUP6 ADD DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1DF4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1E07 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1D9F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1E1A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1E2D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1DAE JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1E40 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1DAE JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1E53 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1DAE JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1E66 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1DBD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1E80 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xBD DUP8 0xA6 LOG4 0xAD 0xC3 0xFC PUSH4 0xD0029A37 0x1F 0x21 0xC4 DUP1 0xD9 0xCA PUSH26 0xCFE307D90A4826E5052E9EDE64736F6C634300081A0033000000 ",
							"sourceMap": "928:4317:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:274;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2437:88;;;:::i;:::-;;5099:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3252:275;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4350:121;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4476:306;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1146:947;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3814:414;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:307;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:274;3602:17;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;1057:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3670:8:::1;808:42;3638:14;;;3661:4;3638:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;3630:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3730:69;808:42;667;3783:4;3790:8;3730:23;:69::i;:::-;3718:81;;3532:274:::0;;;:::o;2437:88::-;667:42;2486:12;;;2505:9;2486:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2437:88::o;5099:144::-;5167:16;4301:42;5205:16;;;5222:1;5224;5226:8;5205:30;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5194:41;;5099:144;;;:::o;3252:275::-;3323:17;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;1057:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3391:8:::1;667:42;3359:14;;;3382:4;3359:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;3351:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3451:69;667:42;808;3504:4;3511:8;3451:23;:69::i;:::-;3439:81;;3252:275:::0;;;:::o;4350:121::-;4417:7;4301:42;4442:15;;;4458:5;4442:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4435:29;;4350:121;;;:::o;4476:306::-;4546:17;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;1057:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4614:8:::1;808:42;4582:14;;;4605:4;4582:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;4574:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;808:42;4661:29;;;4301:42;4710:8;4661:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4301:42;4741:18;;;4760:1;4762;4764:8;4773:1;4741:34;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4729:46;;4476:306:::0;;;:::o;1146:947::-;1220:14;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;1057:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1286:12:::1;808:42;1254:14;;;1277:4;1254:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;1246:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1337:21;1368::::0;1429:28:::1;1460:4;:26;;;1487:13;1460:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1429:72;;1511:25;1539:4;:22;;;1562:12;1539:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1511:64;;1639:17;1616:20;:40;1613:331;;;1687:4;:21;;;1709:12;1687:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1671:51;;1752:4;:20;;;1773:13;1752:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1736:51;;1613:331;;;1832:4;:19;;;1852:12;1832:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1816:49;;1895:4;:22;;;1918:13;1895:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1879:53;;1613:331;1975:12;1961:13;:26;1953:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2074:12;2058:13;:28;;;;:::i;:::-;2049:37;;1236:857;;;;1146:947:::0;;;:::o;3814:414::-;3885:16;3912:19;2388:42;3934:24;;;808:42;667;3987:4;3934:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3912:80;;4002:19;4039:11;4002:49;;4062:20;4092:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4061:43;;;;;;;;4114:13;4178:6;4161:12;4153:21;;4138:12;4130:21;;:44;;;;:::i;:::-;:55;;;;:::i;:::-;4114:71;;4216:5;4206:7;:15;;;;:::i;:::-;4195:26;;3902:326;;;;3814:414;;;:::o;4787:307::-;4858:17;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;1057:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4926:8:::1;808:42;4894:14;;;4917:4;4894:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;4886:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;667:42;4973:29;;;4301:42;5022:8;4973:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4301:42;5053:18;;;5072:1;5074;5076:8;5085:1;5053:34;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5041:46;;4787:307:::0;;;:::o;2535:712::-;2692:17;2724:7;2717:23;;;515:42;2766:8;2717:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2782:48;2841:339;;;;;;;;2903:7;2841:339;;;;;;2938:8;2841:339;;;;;;2969:7;2841:339;;;;;;3005:10;2841:339;;;;;;3043:15;2841:339;;;;3086:8;2841:339;;;;3130:1;2841:339;;;;3168:1;2841:339;;;;;2782:398;;515:42;3199:32;;;3232:6;3199:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3187:52;;2710:537;2535:712;;;;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:169::-;2047:11;2081:6;2076:3;2069:19;2121:4;2116:3;2112:14;2097:29;;1963:169;;;;:::o;2138:221::-;2278:34;2274:1;2266:6;2262:14;2255:58;2347:4;2342:2;2334:6;2330:15;2323:29;2138:221;:::o;2365:366::-;2507:3;2528:67;2592:2;2587:3;2528:67;:::i;:::-;2521:74;;2604:93;2693:3;2604:93;:::i;:::-;2722:2;2717:3;2713:12;2706:19;;2365:366;;;:::o;2737:419::-;2903:4;2941:2;2930:9;2926:18;2918:26;;2990:9;2984:4;2980:20;2976:1;2965:9;2961:17;2954:47;3018:131;3144:4;3018:131;:::i;:::-;3010:139;;2737:419;;;:::o;3162:143::-;3219:5;3250:6;3244:13;3235:22;;3266:33;3293:5;3266:33;:::i;:::-;3162:143;;;;:::o;3311:351::-;3381:6;3430:2;3418:9;3409:7;3405:23;3401:32;3398:119;;;3436:79;;:::i;:::-;3398:119;3556:1;3581:64;3637:7;3628:6;3617:9;3613:22;3581:64;:::i;:::-;3571:74;;3527:128;3311:351;;;;:::o;3668:176::-;3808:28;3804:1;3796:6;3792:14;3785:52;3668:176;:::o;3850:366::-;3992:3;4013:67;4077:2;4072:3;4013:67;:::i;:::-;4006:74;;4089:93;4178:3;4089:93;:::i;:::-;4207:2;4202:3;4198:12;4191:19;;3850:366;;;:::o;4222:419::-;4388:4;4426:2;4415:9;4411:18;4403:26;;4475:9;4469:4;4465:20;4461:1;4450:9;4446:17;4439:47;4503:131;4629:4;4503:131;:::i;:::-;4495:139;;4222:419;;;:::o;4647:85::-;4692:7;4721:5;4710:16;;4647:85;;;:::o;4738:60::-;4766:3;4787:5;4780:12;;4738:60;;;:::o;4804:158::-;4862:9;4895:61;4913:42;4922:32;4948:5;4922:32;:::i;:::-;4913:42;:::i;:::-;4895:61;:::i;:::-;4882:74;;4804:158;;;:::o;4968:147::-;5063:45;5102:5;5063:45;:::i;:::-;5058:3;5051:58;4968:147;;:::o;5121:85::-;5166:7;5195:5;5184:16;;5121:85;;;:::o;5212:158::-;5270:9;5303:61;5321:42;5330:32;5356:5;5330:32;:::i;:::-;5321:42;:::i;:::-;5303:61;:::i;:::-;5290:74;;5212:158;;;:::o;5376:147::-;5471:45;5510:5;5471:45;:::i;:::-;5466:3;5459:58;5376:147;;:::o;5529:474::-;5694:4;5732:2;5721:9;5717:18;5709:26;;5745:79;5821:1;5810:9;5806:17;5797:6;5745:79;:::i;:::-;5834:80;5910:2;5899:9;5895:18;5886:6;5834:80;:::i;:::-;5924:72;5992:2;5981:9;5977:18;5968:6;5924:72;:::i;:::-;5529:474;;;;;;:::o;6009:176::-;6149:28;6145:1;6137:6;6133:14;6126:52;6009:176;:::o;6191:366::-;6333:3;6354:67;6418:2;6413:3;6354:67;:::i;:::-;6347:74;;6430:93;6519:3;6430:93;:::i;:::-;6548:2;6543:3;6539:12;6532:19;;6191:366;;;:::o;6563:419::-;6729:4;6767:2;6756:9;6752:18;6744:26;;6816:9;6810:4;6806:20;6802:1;6791:9;6787:17;6780:47;6844:131;6970:4;6844:131;:::i;:::-;6836:139;;6563:419;;;:::o;6988:122::-;7061:24;7079:5;7061:24;:::i;:::-;7054:5;7051:35;7041:63;;7100:1;7097;7090:12;7041:63;6988:122;:::o;7116:143::-;7173:5;7204:6;7198:13;7189:22;;7220:33;7247:5;7220:33;:::i;:::-;7116:143;;;;:::o;7265:351::-;7335:6;7384:2;7372:9;7363:7;7359:23;7355:32;7352:119;;;7390:79;;:::i;:::-;7352:119;7510:1;7535:64;7591:7;7582:6;7571:9;7567:22;7535:64;:::i;:::-;7525:74;;7481:128;7265:351;;;;:::o;7622:175::-;7762:27;7758:1;7750:6;7746:14;7739:51;7622:175;:::o;7803:366::-;7945:3;7966:67;8030:2;8025:3;7966:67;:::i;:::-;7959:74;;8042:93;8131:3;8042:93;:::i;:::-;8160:2;8155:3;8151:12;8144:19;;7803:366;;;:::o;8175:419::-;8341:4;8379:2;8368:9;8364:18;8356:26;;8428:9;8422:4;8418:20;8414:1;8403:9;8399:17;8392:47;8456:131;8582:4;8456:131;:::i;:::-;8448:139;;8175:419;;;:::o;8600:332::-;8721:4;8759:2;8748:9;8744:18;8736:26;;8772:71;8840:1;8829:9;8825:17;8816:6;8772:71;:::i;:::-;8853:72;8921:2;8910:9;8906:18;8897:6;8853:72;:::i;:::-;8600:332;;;;;:::o;8938:90::-;8972:7;9015:5;9008:13;9001:21;8990:32;;8938:90;;;:::o;9034:116::-;9104:21;9119:5;9104:21;:::i;:::-;9097:5;9094:32;9084:60;;9140:1;9137;9130:12;9084:60;9034:116;:::o;9156:137::-;9210:5;9241:6;9235:13;9226:22;;9257:30;9281:5;9257:30;:::i;:::-;9156:137;;;;:::o;9299:345::-;9366:6;9415:2;9403:9;9394:7;9390:23;9386:32;9383:119;;;9421:79;;:::i;:::-;9383:119;9541:1;9566:61;9619:7;9610:6;9599:9;9595:22;9566:61;:::i;:::-;9556:71;;9512:125;9299:345;;;;:::o;9650:85::-;9695:7;9724:5;9713:16;;9650:85;;;:::o;9741:158::-;9799:9;9832:61;9850:42;9859:32;9885:5;9859:32;:::i;:::-;9850:42;:::i;:::-;9832:61;:::i;:::-;9819:74;;9741:158;;;:::o;9905:147::-;10000:45;10039:5;10000:45;:::i;:::-;9995:3;9988:58;9905:147;;:::o;10058:601::-;10259:4;10297:3;10286:9;10282:19;10274:27;;10311:79;10387:1;10376:9;10372:17;10363:6;10311:79;:::i;:::-;10400:80;10476:2;10465:9;10461:18;10452:6;10400:80;:::i;:::-;10490:72;10558:2;10547:9;10543:18;10534:6;10490:72;:::i;:::-;10572:80;10648:2;10637:9;10633:18;10624:6;10572:80;:::i;:::-;10058:601;;;;;;;:::o;10665:170::-;10805:22;10801:1;10793:6;10789:14;10782:46;10665:170;:::o;10841:366::-;10983:3;11004:67;11068:2;11063:3;11004:67;:::i;:::-;10997:74;;11080:93;11169:3;11080:93;:::i;:::-;11198:2;11193:3;11189:12;11182:19;;10841:366;;;:::o;11213:419::-;11379:4;11417:2;11406:9;11402:18;11394:26;;11466:9;11460:4;11456:20;11452:1;11441:9;11437:17;11430:47;11494:131;11620:4;11494:131;:::i;:::-;11486:139;;11213:419;;;:::o;11638:180::-;11686:77;11683:1;11676:88;11783:4;11780:1;11773:15;11807:4;11804:1;11797:15;11824:194;11864:4;11884:20;11902:1;11884:20;:::i;:::-;11879:25;;11918:20;11936:1;11918:20;:::i;:::-;11913:25;;11962:1;11959;11955:9;11947:17;;11986:1;11980:4;11977:11;11974:37;;;11991:18;;:::i;:::-;11974:37;11824:194;;;;:::o;12024:88::-;12072:7;12101:5;12090:16;;12024:88;;;:::o;12118:91::-;12154:7;12194:8;12187:5;12183:20;12172:31;;12118:91;;;:::o;12215:162::-;12275:9;12308:63;12325:45;12334:35;12363:5;12334:35;:::i;:::-;12325:45;:::i;:::-;12308:63;:::i;:::-;12295:76;;12215:162;;;:::o;12383:151::-;12480:47;12521:5;12480:47;:::i;:::-;12475:3;12468:60;12383:151;;:::o;12540:462::-;12699:4;12737:2;12726:9;12722:18;12714:26;;12750:71;12818:1;12807:9;12803:17;12794:6;12750:71;:::i;:::-;12831:72;12899:2;12888:9;12884:18;12875:6;12831:72;:::i;:::-;12913:82;12991:2;12980:9;12976:18;12967:6;12913:82;:::i;:::-;12540:462;;;;;;:::o;13008:122::-;13081:24;13099:5;13081:24;:::i;:::-;13074:5;13071:35;13061:63;;13120:1;13117;13110:12;13061:63;13008:122;:::o;13136:143::-;13193:5;13224:6;13218:13;13209:22;;13240:33;13267:5;13240:33;:::i;:::-;13136:143;;;;:::o;13285:90::-;13320:7;13363:5;13360:1;13349:20;13338:31;;13285:90;;;:::o;13381:118::-;13452:22;13468:5;13452:22;:::i;:::-;13445:5;13442:33;13432:61;;13489:1;13486;13479:12;13432:61;13381:118;:::o;13505:139::-;13560:5;13591:6;13585:13;13576:22;;13607:31;13632:5;13607:31;:::i;:::-;13505:139;;;;:::o;13650:89::-;13686:7;13726:6;13719:5;13715:18;13704:29;;13650:89;;;:::o;13745:120::-;13817:23;13834:5;13817:23;:::i;:::-;13810:5;13807:34;13797:62;;13855:1;13852;13845:12;13797:62;13745:120;:::o;13871:141::-;13927:5;13958:6;13952:13;13943:22;;13974:32;14000:5;13974:32;:::i;:::-;13871:141;;;;:::o;14018:86::-;14053:7;14093:4;14086:5;14082:16;14071:27;;14018:86;;;:::o;14110:118::-;14181:22;14197:5;14181:22;:::i;:::-;14174:5;14171:33;14161:61;;14218:1;14215;14208:12;14161:61;14110:118;:::o;14234:139::-;14289:5;14320:6;14314:13;14305:22;;14336:31;14361:5;14336:31;:::i;:::-;14234:139;;;;:::o;14379:1271::-;14493:6;14501;14509;14517;14525;14533;14541;14590:3;14578:9;14569:7;14565:23;14561:33;14558:120;;;14597:79;;:::i;:::-;14558:120;14717:1;14742:64;14798:7;14789:6;14778:9;14774:22;14742:64;:::i;:::-;14732:74;;14688:128;14855:2;14881:62;14935:7;14926:6;14915:9;14911:22;14881:62;:::i;:::-;14871:72;;14826:127;14992:2;15018:63;15073:7;15064:6;15053:9;15049:22;15018:63;:::i;:::-;15008:73;;14963:128;15130:2;15156:63;15211:7;15202:6;15191:9;15187:22;15156:63;:::i;:::-;15146:73;;15101:128;15268:3;15295:63;15350:7;15341:6;15330:9;15326:22;15295:63;:::i;:::-;15285:73;;15239:129;15407:3;15434:62;15488:7;15479:6;15468:9;15464:22;15434:62;:::i;:::-;15424:72;;15378:128;15545:3;15572:61;15625:7;15616:6;15605:9;15601:22;15572:61;:::i;:::-;15562:71;;15516:127;14379:1271;;;;;;;;;;:::o;15656:410::-;15696:7;15719:20;15737:1;15719:20;:::i;:::-;15714:25;;15753:20;15771:1;15753:20;:::i;:::-;15748:25;;15808:1;15805;15801:9;15830:30;15848:11;15830:30;:::i;:::-;15819:41;;16009:1;16000:7;15996:15;15993:1;15990:22;15970:1;15963:9;15943:83;15920:139;;16039:18;;:::i;:::-;15920:139;15704:362;15656:410;;;;:::o;16072:180::-;16120:77;16117:1;16110:88;16217:4;16214:1;16207:15;16241:4;16238:1;16231:15;16258:185;16298:1;16315:20;16333:1;16315:20;:::i;:::-;16310:25;;16349:20;16367:1;16349:20;:::i;:::-;16344:25;;16388:1;16378:35;;16393:18;;:::i;:::-;16378:35;16435:1;16432;16428:9;16423:14;;16258:185;;;;:::o;16449:175::-;16589:27;16585:1;16577:6;16573:14;16566:51;16449:175;:::o;16630:366::-;16772:3;16793:67;16857:2;16852:3;16793:67;:::i;:::-;16786:74;;16869:93;16958:3;16869:93;:::i;:::-;16987:2;16982:3;16978:12;16971:19;;16630:366;;;:::o;17002:419::-;17168:4;17206:2;17195:9;17191:18;17183:26;;17255:9;17249:4;17245:20;17241:1;17230:9;17226:17;17219:47;17283:131;17409:4;17283:131;:::i;:::-;17275:139;;17002:419;;;:::o;17427:601::-;17628:4;17666:3;17655:9;17651:19;17643:27;;17680:79;17756:1;17745:9;17741:17;17732:6;17680:79;:::i;:::-;17769:80;17845:2;17834:9;17830:18;17821:6;17769:80;:::i;:::-;17859:72;17927:2;17916:9;17912:18;17903:6;17859:72;:::i;:::-;17941:80;18017:2;18006:9;18002:18;17993:6;17941:80;:::i;:::-;17427:601;;;;;;;:::o;18034:108::-;18111:24;18129:5;18111:24;:::i;:::-;18106:3;18099:37;18034:108;;:::o;18148:105::-;18223:23;18240:5;18223:23;:::i;:::-;18218:3;18211:36;18148:105;;:::o;18259:108::-;18336:24;18354:5;18336:24;:::i;:::-;18331:3;18324:37;18259:108;;:::o;18373:::-;18450:24;18468:5;18450:24;:::i;:::-;18445:3;18438:37;18373:108;;:::o;18581:1625::-;18758:6;18753:3;18749:16;18850:4;18843:5;18839:16;18833:23;18869:63;18926:4;18921:3;18917:14;18903:12;18869:63;:::i;:::-;18775:167;19028:4;19021:5;19017:16;19011:23;19047:63;19104:4;19099:3;19095:14;19081:12;19047:63;:::i;:::-;18952:168;19201:4;19194:5;19190:16;19184:23;19220:61;19275:4;19270:3;19266:14;19252:12;19220:61;:::i;:::-;19130:161;19378:4;19371:5;19367:16;19361:23;19397:63;19454:4;19449:3;19445:14;19431:12;19397:63;:::i;:::-;19301:169;19556:4;19549:5;19545:16;19539:23;19575:63;19632:4;19627:3;19623:14;19609:12;19575:63;:::i;:::-;19480:168;19734:4;19727:5;19723:16;19717:23;19753:63;19810:4;19805:3;19801:14;19787:12;19753:63;:::i;:::-;19658:168;19920:4;19913:5;19909:16;19903:23;19939:63;19996:4;19991:3;19987:14;19973:12;19939:63;:::i;:::-;19836:176;20107:4;20100:5;20096:16;20090:23;20126:63;20183:4;20178:3;20174:14;20160:12;20126:63;:::i;:::-;20022:177;18727:1479;18581:1625;;:::o;20212:383::-;20385:4;20423:3;20412:9;20408:19;20400:27;;20437:151;20585:1;20574:9;20570:17;20561:6;20437:151;:::i;:::-;20212:383;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1573600",
								"executionCost": "25908",
								"totalCost": "1599508"
							},
							"external": {
								"buyWETHOnCurve(uint256)": "infinite",
								"buyWETHOnUniswap(uint256)": "infinite",
								"depositWETH()": "infinite",
								"exactueArbitrage(uint256)": "infinite",
								"getAmountOutCurve(uint256)": "infinite",
								"getAmountOutUniswapV3(uint256)": "infinite",
								"getCoinsFromCurvePool(uint256)": "infinite",
								"sellWETHOnCurve(uint256)": "infinite",
								"sellWETHOnUniswap(uint256)": "infinite"
							},
							"internal": {
								"swapExactInputSingleHop(address,address,uint24,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 928,
									"end": 5245,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 971,
									"end": 1020,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1013,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 1000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 5245,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200dbd87a6a4adc3fc63d0029a371f21c480d9ca79cfe307d90a4826e5052e9ede64736f6c634300081a0033",
									".code": [
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "64084AC0"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "64084AC0"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "793C0845"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "926446DB"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "BBCEEFE3"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "CC9901AA"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "64A8A8A"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "1DE3DF2C"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "3EB61C1C"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "54258CC4"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 5245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3532,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3532,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3532,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5099,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5099,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5099,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3252,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3252,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3252,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4350,
											"end": 4471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4350,
											"end": 4471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4350,
											"end": 4471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4476,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4476,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1146,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1146,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1146,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3814,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3814,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3814,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4787,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4787,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1057,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 3638,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 3661,
											"end": 3665,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3638,
											"end": 3667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3638,
											"end": 3667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3638,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3630,
											"end": 3708,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3630,
											"end": 3708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 808,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 667,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 3783,
											"end": 3787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "BB8"
										},
										{
											"begin": 3790,
											"end": 3798,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3730,
											"end": 3799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3730,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 2486,
											"end": 2498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2498,
											"name": "PUSH",
											"source": 1,
											"value": "D0E30DB0"
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "7F86BF177DD4F3494B841A37E810A34DD56C829B"
										},
										{
											"begin": 5205,
											"end": 5221,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5221,
											"name": "PUSH",
											"source": 1,
											"value": "556D6E9F"
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5224,
											"end": 5225,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5226,
											"end": 5234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5205,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5205,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1057,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 667,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 3359,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 3382,
											"end": 3386,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3359,
											"end": 3388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3359,
											"end": 3388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3359,
											"end": 3388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3399,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3399,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3351,
											"end": 3429,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3351,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 667,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 808,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 3504,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "BB8"
										},
										{
											"begin": 3511,
											"end": 3519,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3451,
											"end": 3520,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3451,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3520,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "7F86BF177DD4F3494B841A37E810A34DD56C829B"
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "C6610657"
										},
										{
											"begin": 4458,
											"end": 4463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4442,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4442,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1057,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 4582,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4582,
											"end": 4596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 4605,
											"end": 4609,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4582,
											"end": 4611,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4582,
											"end": 4611,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4582,
											"end": 4611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4622,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4622,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4574,
											"end": 4651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4574,
											"end": 4651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 808,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 4661,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 4301,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7F86BF177DD4F3494B841A37E810A34DD56C829B"
										},
										{
											"begin": 4710,
											"end": 4718,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4661,
											"end": 4719,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4661,
											"end": 4719,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7F86BF177DD4F3494B841A37E810A34DD56C829B"
										},
										{
											"begin": 4741,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4759,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5B41B908"
										},
										{
											"begin": 4760,
											"end": 4761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4764,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4741,
											"end": 4775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4741,
											"end": 4775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4741,
											"end": 4775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1057,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 1254,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1277,
											"end": 1281,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1254,
											"end": 1283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1254,
											"end": 1283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1254,
											"end": 1283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1298,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1298,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1246,
											"end": 1327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1246,
											"end": 1327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1464,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "BBCEEFE3"
										},
										{
											"begin": 1487,
											"end": 1500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1460,
											"end": 1501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1460,
											"end": 1501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1460,
											"end": 1501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1543,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3EB61C1C"
										},
										{
											"begin": 1562,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1539,
											"end": 1575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1539,
											"end": 1575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1539,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1656,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1636,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1656,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1691,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "64A8A8A"
										},
										{
											"begin": 1709,
											"end": 1721,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1687,
											"end": 1722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1687,
											"end": 1722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "CC9901AA"
										},
										{
											"begin": 1773,
											"end": 1786,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1752,
											"end": 1787,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1752,
											"end": 1787,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1752,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1836,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "793C0845"
										},
										{
											"begin": 1852,
											"end": 1864,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1832,
											"end": 1865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1832,
											"end": 1865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1832,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1899,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1895,
											"end": 1917,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "54258CC4"
										},
										{
											"begin": 1918,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1895,
											"end": 1932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1895,
											"end": 1932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1895,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1613,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1987,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1974,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1987,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1953,
											"end": 2012,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1953,
											"end": 2012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2086,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2058,
											"end": 2086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2058,
											"end": 2086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2058,
											"end": 2086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2086,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 2093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 2093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 2093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 2093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3885,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "1F98431C8AD98523631AE4A59F267346EA31F984"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "1698EE82"
										},
										{
											"begin": 808,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 667,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 3987,
											"end": 3991,
											"name": "PUSH",
											"source": 1,
											"value": "BB8"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3934,
											"end": 3992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3934,
											"end": 3992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3934,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "3850C7BD"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4092,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4153,
											"end": 4174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4130,
											"end": 4174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4130,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4174,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4130,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4130,
											"end": 4185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4130,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4185,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4130,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4206,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4221,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 4228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1057,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 4894,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4894,
											"end": 4908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 4917,
											"end": 4921,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4894,
											"end": 4923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4894,
											"end": 4923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4894,
											"end": 4923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4934,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4934,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4886,
											"end": 4963,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4886,
											"end": 4963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 4973,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 5002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 4301,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7F86BF177DD4F3494B841A37E810A34DD56C829B"
										},
										{
											"begin": 5022,
											"end": 5030,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4973,
											"end": 5031,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4973,
											"end": 5031,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7F86BF177DD4F3494B841A37E810A34DD56C829B"
										},
										{
											"begin": 5053,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5053,
											"end": 5071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5B41B908"
										},
										{
											"begin": 5072,
											"end": 5073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5074,
											"end": 5075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5084,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5053,
											"end": 5087,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5053,
											"end": 5087,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5053,
											"end": 5087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 5094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2731,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 515,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
										},
										{
											"begin": 2766,
											"end": 2774,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2717,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2717,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2910,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2946,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3015,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3058,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3094,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 3180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 3180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
										},
										{
											"begin": 3199,
											"end": 3231,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3231,
											"name": "PUSH",
											"source": 1,
											"value": "414BF389"
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3199,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3199,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3199,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 3247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 3247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2088,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2359,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2138,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2351,
											"name": "PUSH",
											"source": 9,
											"value": "6E2E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2342,
											"end": 2344,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2731,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2365,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2587,
											"end": 2590,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2528,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2595,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2528,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2693,
											"end": 2696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2604,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2697,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2604,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2731,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 3156,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2737,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3001,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3018,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3149,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 3018,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3010,
											"end": 3149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3010,
											"end": 3149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 3156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 3156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 3156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 3156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3305,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3162,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3293,
											"end": 3298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3266,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3305,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3305,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3662,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3311,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3432,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3416,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3428,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3433,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3517,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3398,
											"end": 3517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3436,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3436,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 3436,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3436,
											"end": 3515,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3436,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3517,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3398,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3637,
											"end": 3644,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3626,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3581,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3645,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3581,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3645,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3662,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3662,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3668,
											"end": 3844,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3668,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3836,
											"name": "PUSH",
											"source": 9,
											"value": "555344432062616C73656E63654F46206E6F7420656E6F756768000000000000"
										},
										{
											"begin": 3804,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3837,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3668,
											"end": 3844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3668,
											"end": 3844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 4216,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3850,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4077,
											"end": 4079,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 4072,
											"end": 4075,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4013,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4089,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4182,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4089,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 4216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 4216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 4216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 4216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4222,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4428,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4415,
											"end": 4424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4485,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4439,
											"end": 4486,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4629,
											"end": 4633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4503,
											"end": 4634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4634,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4503,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4732,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4647,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4798,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4738,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4962,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 4804,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4913,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4922,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4948,
											"end": 4953,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4922,
											"end": 4954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4954,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4922,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4913,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4955,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4913,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 4895,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4956,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4895,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4962,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4962,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 5115,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4968,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5063,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5102,
											"end": 5107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5063,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5063,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5063,
											"end": 5108,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5063,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5061,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 5115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 5115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 5115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5206,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5121,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5370,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5212,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5321,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5330,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 5356,
											"end": 5361,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5330,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5362,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 5330,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5321,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5363,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5321,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 5303,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5364,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5303,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5370,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5370,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5523,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5376,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5510,
											"end": 5515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5471,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5516,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5471,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5721,
											"end": 5730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5821,
											"end": 5822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5819,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5806,
											"end": 5823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5745,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5834,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5895,
											"end": 5913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5886,
											"end": 5892,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5834,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5834,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5834,
											"end": 5914,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 5834,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5924,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5996,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 5924,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 6003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6185,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6009,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6177,
											"name": "PUSH",
											"source": 9,
											"value": "574554482062616C73656E63654F46206E6F7420656E6F756768000000000000"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6143,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6133,
											"end": 6147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6185,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 6418,
											"end": 6420,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 6354,
											"end": 6421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6347,
											"end": 6421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6347,
											"end": 6421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6519,
											"end": 6522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6430,
											"end": 6523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6744,
											"end": 6770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6744,
											"end": 6770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6826,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6800,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6827,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6970,
											"end": 6974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6844,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7110,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6988,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 7079,
											"end": 7084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7061,
											"end": 7085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7054,
											"end": 7059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7051,
											"end": 7086,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 7041,
											"end": 7104,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7101,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7090,
											"end": 7102,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 7041,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7259,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7116,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7211,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7247,
											"end": 7252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 7220,
											"end": 7253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7253,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7220,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7259,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7616,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 7265,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7370,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7359,
											"end": 7382,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7355,
											"end": 7387,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7471,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 7352,
											"end": 7471,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7390,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7390,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7469,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7390,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7471,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 7352,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7535,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 7591,
											"end": 7598,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7535,
											"end": 7599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7599,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 7535,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 7609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7616,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7797,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7622,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7762,
											"end": 7789,
											"name": "PUSH",
											"source": 9,
											"value": "555344432062616C616E63654F66206E6F7420656E6F75676800000000000000"
										},
										{
											"begin": 7758,
											"end": 7759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 8169,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7803,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 8030,
											"end": 8032,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 8025,
											"end": 8028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7966,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 8033,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 7966,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8033,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8131,
											"end": 8134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 8042,
											"end": 8135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8135,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8042,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8155,
											"end": 8158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 8169,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 8169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 8169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 8169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8175,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 8175,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8345,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8368,
											"end": 8377,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8356,
											"end": 8382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8356,
											"end": 8382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8428,
											"end": 8437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8438,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8412,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8399,
											"end": 8416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8392,
											"end": 8439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8582,
											"end": 8586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 8456,
											"end": 8587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8587,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8456,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 8587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 8587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8175,
											"end": 8594,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8175,
											"end": 8594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8175,
											"end": 8594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8175,
											"end": 8594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8932,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 8600,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8721,
											"end": 8725,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8759,
											"end": 8761,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8748,
											"end": 8757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8744,
											"end": 8762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8736,
											"end": 8762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8736,
											"end": 8762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 8840,
											"end": 8841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8825,
											"end": 8842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8816,
											"end": 8822,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 8772,
											"end": 8843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8843,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 8772,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 8921,
											"end": 8923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 8924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8897,
											"end": 8903,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8853,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8925,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 8853,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8932,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8932,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9028,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 8938,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8972,
											"end": 8979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9015,
											"end": 9020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9008,
											"end": 9021,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9001,
											"end": 9022,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8990,
											"end": 9022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8990,
											"end": 9022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9028,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9028,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9150,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 9034,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9119,
											"end": 9124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 9104,
											"end": 9125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9125,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9104,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9097,
											"end": 9102,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9126,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 9084,
											"end": 9144,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9142,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9144,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 9084,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9293,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9156,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9210,
											"end": 9215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9241,
											"end": 9247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9248,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9226,
											"end": 9248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9226,
											"end": 9248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9281,
											"end": 9286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 9257,
											"end": 9287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9287,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9257,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9293,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9644,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 9299,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9403,
											"end": 9412,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9394,
											"end": 9401,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9413,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9386,
											"end": 9418,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9383,
											"end": 9502,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9383,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9383,
											"end": 9502,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9421,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 9421,
											"end": 9500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9500,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9421,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9383,
											"end": 9502,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9383,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9541,
											"end": 9542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9566,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9619,
											"end": 9626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9608,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9566,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9566,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9566,
											"end": 9627,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9566,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9556,
											"end": 9627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9556,
											"end": 9627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9512,
											"end": 9637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9644,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9735,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 9650,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9899,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 9741,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9799,
											"end": 9808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 9850,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 9885,
											"end": 9890,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 9859,
											"end": 9891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9850,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9850,
											"end": 9892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9850,
											"end": 9892,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 9850,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9832,
											"end": 9893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9819,
											"end": 9893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9819,
											"end": 9893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9899,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9905,
											"end": 10052,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9905,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10039,
											"end": 10044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 10000,
											"end": 10045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10045,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10000,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 9998,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9988,
											"end": 10046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9905,
											"end": 10052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9905,
											"end": 10052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9905,
											"end": 10052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10297,
											"end": 10300,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10286,
											"end": 10295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10282,
											"end": 10301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10274,
											"end": 10301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10274,
											"end": 10301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10311,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10376,
											"end": 10385,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10363,
											"end": 10369,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10311,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 10311,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10311,
											"end": 10390,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10311,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10476,
											"end": 10478,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10452,
											"end": 10458,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10400,
											"end": 10480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10480,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10400,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10558,
											"end": 10560,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10547,
											"end": 10556,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10534,
											"end": 10540,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 10490,
											"end": 10562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10562,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10490,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10572,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 10648,
											"end": 10650,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10637,
											"end": 10646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10624,
											"end": 10630,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10572,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10572,
											"end": 10652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10572,
											"end": 10652,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 10572,
											"end": 10652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10665,
											"end": 10835,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10665,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10805,
											"end": 10827,
											"name": "PUSH",
											"source": 9,
											"value": "4172626974726167652070726F666974203C3D30000000000000000000000000"
										},
										{
											"begin": 10801,
											"end": 10802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10793,
											"end": 10799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10789,
											"end": 10803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 10828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10665,
											"end": 10835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10665,
											"end": 10835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 11207,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10841,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 10986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 11068,
											"end": 11070,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11063,
											"end": 11066,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11004,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 11004,
											"end": 11071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11004,
											"end": 11071,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 11004,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10997,
											"end": 11071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10997,
											"end": 11071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11169,
											"end": 11172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 11080,
											"end": 11173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11173,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11080,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11198,
											"end": 11200,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11193,
											"end": 11196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11189,
											"end": 11201,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11182,
											"end": 11201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11182,
											"end": 11201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 11207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 11207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 11207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 11207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11213,
											"end": 11632,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 11213,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11379,
											"end": 11383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11419,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11406,
											"end": 11415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11402,
											"end": 11420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11394,
											"end": 11420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11394,
											"end": 11420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11466,
											"end": 11475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11476,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11452,
											"end": 11453,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11450,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11437,
											"end": 11454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11430,
											"end": 11477,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11494,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11620,
											"end": 11624,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11494,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 11494,
											"end": 11625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11494,
											"end": 11625,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11494,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11486,
											"end": 11625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11486,
											"end": 11625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11213,
											"end": 11632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11213,
											"end": 11632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11213,
											"end": 11632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11213,
											"end": 11632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11638,
											"end": 11818,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 11638,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 11763,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11764,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11787,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11780,
											"end": 11781,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11773,
											"end": 11788,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11807,
											"end": 11811,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11804,
											"end": 11805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11824,
											"end": 12018,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 11824,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11864,
											"end": 11868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11884,
											"end": 11904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11884,
											"end": 11904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 11884,
											"end": 11904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11884,
											"end": 11904,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11884,
											"end": 11904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11879,
											"end": 11904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11879,
											"end": 11904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11936,
											"end": 11937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 11918,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11913,
											"end": 11938,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11913,
											"end": 11938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 11960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11964,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11986,
											"end": 11987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 11984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11977,
											"end": 11988,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 12011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11974,
											"end": 12011,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11991,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 11991,
											"end": 12009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12009,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11991,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 12011,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11974,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11824,
											"end": 12018,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11824,
											"end": 12018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11824,
											"end": 12018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11824,
											"end": 12018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11824,
											"end": 12018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12112,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 12024,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12101,
											"end": 12106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12112,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12209,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 12118,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12154,
											"end": 12161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12194,
											"end": 12202,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 12187,
											"end": 12192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12183,
											"end": 12203,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12172,
											"end": 12203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12172,
											"end": 12203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12377,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12215,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12275,
											"end": 12284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12308,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 12325,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12334,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12363,
											"end": 12368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12334,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 12334,
											"end": 12369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12334,
											"end": 12369,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12334,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12325,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12325,
											"end": 12370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12325,
											"end": 12370,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12325,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12308,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 12308,
											"end": 12371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12308,
											"end": 12371,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 12308,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12295,
											"end": 12371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12295,
											"end": 12371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12377,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12534,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 12383,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12480,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12521,
											"end": 12526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12480,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12480,
											"end": 12527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12480,
											"end": 12527,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12480,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12475,
											"end": 12478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12737,
											"end": 12739,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12726,
											"end": 12735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12722,
											"end": 12740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12714,
											"end": 12740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12714,
											"end": 12740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12750,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12807,
											"end": 12816,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12794,
											"end": 12800,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12750,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 12750,
											"end": 12821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12750,
											"end": 12821,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 12750,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12831,
											"end": 12903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 12899,
											"end": 12901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12888,
											"end": 12897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12884,
											"end": 12902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12875,
											"end": 12881,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12831,
											"end": 12903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 12831,
											"end": 12903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12831,
											"end": 12903,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 12831,
											"end": 12903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12913,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12991,
											"end": 12993,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12980,
											"end": 12989,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12967,
											"end": 12973,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12913,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 12913,
											"end": 12995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12913,
											"end": 12995,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12913,
											"end": 12995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 13002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13130,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 13008,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 13099,
											"end": 13104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 13081,
											"end": 13105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13106,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13061,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 13061,
											"end": 13124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13117,
											"end": 13118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13122,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13061,
											"end": 13124,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 13061,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13136,
											"end": 13279,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 13136,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13193,
											"end": 13198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13224,
											"end": 13230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13218,
											"end": 13231,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 13267,
											"end": 13272,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 13240,
											"end": 13273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13273,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 13240,
											"end": 13273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13136,
											"end": 13279,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13136,
											"end": 13279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13136,
											"end": 13279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13136,
											"end": 13279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13136,
											"end": 13279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13375,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 13285,
											"end": 13375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13363,
											"end": 13368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13360,
											"end": 13361,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13349,
											"end": 13369,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13381,
											"end": 13499,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 13381,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 13468,
											"end": 13473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 13452,
											"end": 13474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13445,
											"end": 13450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13442,
											"end": 13475,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13432,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 13432,
											"end": 13493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13489,
											"end": 13490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13486,
											"end": 13487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13432,
											"end": 13493,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 13432,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13381,
											"end": 13499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13381,
											"end": 13499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13644,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 13505,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13560,
											"end": 13565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13591,
											"end": 13597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13585,
											"end": 13598,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13607,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 13632,
											"end": 13637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13607,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 13607,
											"end": 13638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13607,
											"end": 13638,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 13607,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13644,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13739,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 13650,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13726,
											"end": 13732,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 13719,
											"end": 13724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13715,
											"end": 13733,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13704,
											"end": 13733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13704,
											"end": 13733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13865,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13745,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13817,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 13834,
											"end": 13839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13817,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 13817,
											"end": 13840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13817,
											"end": 13840,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 13817,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13810,
											"end": 13815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13807,
											"end": 13841,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13797,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 13797,
											"end": 13859,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13855,
											"end": 13856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13852,
											"end": 13853,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13845,
											"end": 13857,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13797,
											"end": 13859,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 13797,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 14012,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 13871,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13927,
											"end": 13932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13958,
											"end": 13964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13952,
											"end": 13965,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13943,
											"end": 13965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13943,
											"end": 13965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 14000,
											"end": 14005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13974,
											"end": 14006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14006,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13974,
											"end": 14006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 14012,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 14012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 14012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 14012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 14012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14104,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14018,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14053,
											"end": 14060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14093,
											"end": 14097,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14086,
											"end": 14091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14082,
											"end": 14098,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14110,
											"end": 14228,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14110,
											"end": 14228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14181,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 14197,
											"end": 14202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14181,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14181,
											"end": 14203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14181,
											"end": 14203,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 14181,
											"end": 14203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14174,
											"end": 14179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14171,
											"end": 14204,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14161,
											"end": 14222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 14161,
											"end": 14222,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14218,
											"end": 14219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14216,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14208,
											"end": 14220,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14161,
											"end": 14222,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 14161,
											"end": 14222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14110,
											"end": 14228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14110,
											"end": 14228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14289,
											"end": 14294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14320,
											"end": 14326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14314,
											"end": 14327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14305,
											"end": 14327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14305,
											"end": 14327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14336,
											"end": 14367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 14361,
											"end": 14366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14336,
											"end": 14367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14336,
											"end": 14367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14336,
											"end": 14367,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 14336,
											"end": 14367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14234,
											"end": 14373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14501,
											"end": 14507,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14517,
											"end": 14523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14533,
											"end": 14539,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14541,
											"end": 14547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14590,
											"end": 14593,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14578,
											"end": 14587,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 14569,
											"end": 14576,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 14565,
											"end": 14588,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14561,
											"end": 14594,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 14558,
											"end": 14678,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14558,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 14558,
											"end": 14678,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 14597,
											"end": 14676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 14597,
											"end": 14676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14676,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 14597,
											"end": 14676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14558,
											"end": 14678,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 14558,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14717,
											"end": 14718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14742,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 14798,
											"end": 14805,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 14789,
											"end": 14795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14778,
											"end": 14787,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14742,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 14742,
											"end": 14806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14742,
											"end": 14806,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 14742,
											"end": 14806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14806,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14688,
											"end": 14816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14855,
											"end": 14857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14881,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 14935,
											"end": 14942,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 14926,
											"end": 14932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14915,
											"end": 14924,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 14911,
											"end": 14933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14881,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14881,
											"end": 14943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14881,
											"end": 14943,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 14881,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14871,
											"end": 14943,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 14871,
											"end": 14943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14992,
											"end": 14994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15018,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15073,
											"end": 15080,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 15064,
											"end": 15070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15053,
											"end": 15062,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 15049,
											"end": 15071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 15018,
											"end": 15081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15081,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15018,
											"end": 15081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15008,
											"end": 15081,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15008,
											"end": 15081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15130,
											"end": 15132,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 15156,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 15211,
											"end": 15218,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15191,
											"end": 15200,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 15187,
											"end": 15209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15156,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 15156,
											"end": 15219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15156,
											"end": 15219,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 15156,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15146,
											"end": 15219,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 15146,
											"end": 15219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15101,
											"end": 15229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15268,
											"end": 15271,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 15295,
											"end": 15358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 15350,
											"end": 15357,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 15341,
											"end": 15347,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15330,
											"end": 15339,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 15326,
											"end": 15348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15295,
											"end": 15358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 15295,
											"end": 15358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15295,
											"end": 15358,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 15295,
											"end": 15358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15285,
											"end": 15358,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15285,
											"end": 15358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15239,
											"end": 15368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15407,
											"end": 15410,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15434,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 15488,
											"end": 15495,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 15479,
											"end": 15485,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15468,
											"end": 15477,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 15464,
											"end": 15486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15434,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 15434,
											"end": 15496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15434,
											"end": 15496,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 15434,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15496,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15378,
											"end": 15506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15545,
											"end": 15548,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 15572,
											"end": 15633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 15625,
											"end": 15632,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 15616,
											"end": 15622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15614,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15572,
											"end": 15633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 15572,
											"end": 15633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15572,
											"end": 15633,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 15572,
											"end": 15633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15516,
											"end": 15643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 15650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 16066,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 15656,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15696,
											"end": 15703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15719,
											"end": 15739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 15737,
											"end": 15738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15719,
											"end": 15739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 15719,
											"end": 15739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15719,
											"end": 15739,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 15719,
											"end": 15739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15714,
											"end": 15739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15714,
											"end": 15739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15753,
											"end": 15773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 15771,
											"end": 15772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15753,
											"end": 15773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 15753,
											"end": 15773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15753,
											"end": 15773,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 15753,
											"end": 15773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15748,
											"end": 15773,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15748,
											"end": 15773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15808,
											"end": 15809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15805,
											"end": 15806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15801,
											"end": 15810,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 15848,
											"end": 15859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 15830,
											"end": 15860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 15860,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 15830,
											"end": 15860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15819,
											"end": 15860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15819,
											"end": 15860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16000,
											"end": 16007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15996,
											"end": 16011,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15993,
											"end": 15994,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16012,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15970,
											"end": 15971,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15963,
											"end": 15972,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15943,
											"end": 16026,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 16059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 15920,
											"end": 16059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 16039,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 16039,
											"end": 16057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16057,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 16039,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 16059,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 15920,
											"end": 16059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15704,
											"end": 16066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 16066,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 16066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 16066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 16066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 16066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16072,
											"end": 16252,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 16072,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16120,
											"end": 16197,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16117,
											"end": 16118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16110,
											"end": 16198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16217,
											"end": 16221,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 16214,
											"end": 16215,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16207,
											"end": 16222,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16241,
											"end": 16245,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16238,
											"end": 16239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16246,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16443,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 16258,
											"end": 16443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16298,
											"end": 16299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 16333,
											"end": 16334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 16315,
											"end": 16335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16310,
											"end": 16335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16310,
											"end": 16335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 16367,
											"end": 16368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 16349,
											"end": 16369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16344,
											"end": 16369,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16344,
											"end": 16369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16388,
											"end": 16389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 16378,
											"end": 16413,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 16393,
											"end": 16411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16413,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 16378,
											"end": 16413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16436,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16432,
											"end": 16433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16428,
											"end": 16437,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 16423,
											"end": 16437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16423,
											"end": 16437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16443,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16449,
											"end": 16624,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16449,
											"end": 16624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16589,
											"end": 16616,
											"name": "PUSH",
											"source": 9,
											"value": "574554482062616C616E63654F66206E6F7420656E6F75676800000000000000"
										},
										{
											"begin": 16585,
											"end": 16586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16577,
											"end": 16583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16573,
											"end": 16587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16566,
											"end": 16617,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16449,
											"end": 16624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16449,
											"end": 16624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16630,
											"end": 16996,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 16630,
											"end": 16996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16772,
											"end": 16775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16793,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 16857,
											"end": 16859,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 16852,
											"end": 16855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16793,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 16793,
											"end": 16860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16793,
											"end": 16860,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 16793,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16786,
											"end": 16860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16786,
											"end": 16860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 16958,
											"end": 16961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16869,
											"end": 16962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16869,
											"end": 16962,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 16869,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16987,
											"end": 16989,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16982,
											"end": 16985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16978,
											"end": 16990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16971,
											"end": 16990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16971,
											"end": 16990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16630,
											"end": 16996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16630,
											"end": 16996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16630,
											"end": 16996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16630,
											"end": 16996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17002,
											"end": 17421,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 17002,
											"end": 17421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17168,
											"end": 17172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17206,
											"end": 17208,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17195,
											"end": 17204,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17191,
											"end": 17209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17183,
											"end": 17209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17183,
											"end": 17209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17255,
											"end": 17264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17249,
											"end": 17253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17245,
											"end": 17265,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17241,
											"end": 17242,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17230,
											"end": 17239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17226,
											"end": 17243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17219,
											"end": 17266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17283,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 17409,
											"end": 17413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17283,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 17283,
											"end": 17414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17283,
											"end": 17414,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 17283,
											"end": 17414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17275,
											"end": 17414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17275,
											"end": 17414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17002,
											"end": 17421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17002,
											"end": 17421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17002,
											"end": 17421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17002,
											"end": 17421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17628,
											"end": 17632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17666,
											"end": 17669,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 17655,
											"end": 17664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17651,
											"end": 17670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17643,
											"end": 17670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17643,
											"end": 17670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17680,
											"end": 17759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 17756,
											"end": 17757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17754,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17741,
											"end": 17758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17732,
											"end": 17738,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 17680,
											"end": 17759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 17680,
											"end": 17759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17680,
											"end": 17759,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 17680,
											"end": 17759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17769,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 17845,
											"end": 17847,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17834,
											"end": 17843,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17830,
											"end": 17848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17821,
											"end": 17827,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17769,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 17769,
											"end": 17849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17769,
											"end": 17849,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 17769,
											"end": 17849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17859,
											"end": 17931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 17927,
											"end": 17929,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17916,
											"end": 17925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 17930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17903,
											"end": 17909,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17859,
											"end": 17931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 17859,
											"end": 17931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17859,
											"end": 17931,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 17859,
											"end": 17931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17941,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 18017,
											"end": 18019,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 18006,
											"end": 18015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18002,
											"end": 18020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17993,
											"end": 17999,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17941,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 17941,
											"end": 18021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17941,
											"end": 18021,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 17941,
											"end": 18021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17427,
											"end": 18028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18034,
											"end": 18142,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 18034,
											"end": 18142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 18129,
											"end": 18134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 18111,
											"end": 18135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18106,
											"end": 18109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18099,
											"end": 18136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18034,
											"end": 18142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18034,
											"end": 18142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18034,
											"end": 18142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18148,
											"end": 18253,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 18148,
											"end": 18253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 18240,
											"end": 18245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 18223,
											"end": 18246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18218,
											"end": 18221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18211,
											"end": 18247,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18148,
											"end": 18253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18148,
											"end": 18253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18148,
											"end": 18253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18259,
											"end": 18367,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 18259,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18336,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 18354,
											"end": 18359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18336,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 18336,
											"end": 18360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18336,
											"end": 18360,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 18336,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18331,
											"end": 18334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18324,
											"end": 18361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18259,
											"end": 18367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18259,
											"end": 18367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18259,
											"end": 18367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18373,
											"end": 18481,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 18373,
											"end": 18481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18450,
											"end": 18474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 18468,
											"end": 18473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18450,
											"end": 18474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 18450,
											"end": 18474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18450,
											"end": 18474,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 18450,
											"end": 18474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18438,
											"end": 18475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18373,
											"end": 18481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18373,
											"end": 18481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18373,
											"end": 18481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18581,
											"end": 20206,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 18581,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18758,
											"end": 18764,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18753,
											"end": 18756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18749,
											"end": 18765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18850,
											"end": 18854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18843,
											"end": 18848,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18839,
											"end": 18855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18833,
											"end": 18856,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18869,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18926,
											"end": 18930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18921,
											"end": 18924,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18917,
											"end": 18931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18903,
											"end": 18915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18869,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 18869,
											"end": 18932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18869,
											"end": 18932,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18869,
											"end": 18932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18775,
											"end": 18942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19028,
											"end": 19032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19021,
											"end": 19026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19017,
											"end": 19033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19011,
											"end": 19034,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19047,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 19104,
											"end": 19108,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19099,
											"end": 19102,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19095,
											"end": 19109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19081,
											"end": 19093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19047,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 19047,
											"end": 19110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19047,
											"end": 19110,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 19047,
											"end": 19110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18952,
											"end": 19120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19194,
											"end": 19199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19190,
											"end": 19206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 19275,
											"end": 19279,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19270,
											"end": 19273,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19266,
											"end": 19280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19252,
											"end": 19264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 19220,
											"end": 19281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19281,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 19220,
											"end": 19281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19130,
											"end": 19291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19378,
											"end": 19382,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 19371,
											"end": 19376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19367,
											"end": 19383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19361,
											"end": 19384,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19397,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 19454,
											"end": 19458,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 19449,
											"end": 19452,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19445,
											"end": 19459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19431,
											"end": 19443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19397,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 19397,
											"end": 19460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19397,
											"end": 19460,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 19397,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19301,
											"end": 19470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19556,
											"end": 19560,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 19549,
											"end": 19554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19545,
											"end": 19561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19539,
											"end": 19562,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19575,
											"end": 19638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 19632,
											"end": 19636,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 19627,
											"end": 19630,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19623,
											"end": 19637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19609,
											"end": 19621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19575,
											"end": 19638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 19575,
											"end": 19638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19575,
											"end": 19638,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 19575,
											"end": 19638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19480,
											"end": 19648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19734,
											"end": 19738,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 19727,
											"end": 19732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19723,
											"end": 19739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19717,
											"end": 19740,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19753,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 19810,
											"end": 19814,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 19805,
											"end": 19808,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19801,
											"end": 19815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19787,
											"end": 19799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19753,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 19753,
											"end": 19816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19753,
											"end": 19816,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 19753,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19658,
											"end": 19826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19920,
											"end": 19924,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 19913,
											"end": 19918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19909,
											"end": 19925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19903,
											"end": 19926,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19939,
											"end": 20002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19996,
											"end": 20000,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 19991,
											"end": 19994,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19973,
											"end": 19985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19939,
											"end": 20002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 19939,
											"end": 20002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19939,
											"end": 20002,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19939,
											"end": 20002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19836,
											"end": 20012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20107,
											"end": 20111,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 20100,
											"end": 20105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20096,
											"end": 20112,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20090,
											"end": 20113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20126,
											"end": 20189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 20183,
											"end": 20187,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 20178,
											"end": 20181,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20174,
											"end": 20188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20160,
											"end": 20172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20126,
											"end": 20189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 20126,
											"end": 20189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20126,
											"end": 20189,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 20126,
											"end": 20189,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20022,
											"end": 20199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 20206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18581,
											"end": 20206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18581,
											"end": 20206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18581,
											"end": 20206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20212,
											"end": 20595,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 20212,
											"end": 20595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20385,
											"end": 20389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20423,
											"end": 20426,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 20412,
											"end": 20421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20408,
											"end": 20427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20400,
											"end": 20427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20400,
											"end": 20427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20437,
											"end": 20588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 20585,
											"end": 20586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20574,
											"end": 20583,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20570,
											"end": 20587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20561,
											"end": 20567,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20437,
											"end": 20588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 20437,
											"end": 20588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20437,
											"end": 20588,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 20437,
											"end": 20588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20212,
											"end": 20595,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20212,
											"end": 20595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20212,
											"end": 20595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20212,
											"end": 20595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20212,
											"end": 20595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"Arbitrage.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol",
								"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyWETHOnCurve(uint256)": "793c0845",
							"buyWETHOnUniswap(uint256)": "064a8a8a",
							"depositWETH()": "1de3df2c",
							"exactueArbitrage(uint256)": "926446db",
							"getAmountOutCurve(uint256)": "3eb61c1c",
							"getAmountOutUniswapV3(uint256)": "bbceefe3",
							"getCoinsFromCurvePool(uint256)": "64084ac0",
							"sellWETHOnCurve(uint256)": "cc9901aa",
							"sellWETHOnUniswap(uint256)": "54258cc4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"buyWETHOnCurve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"buyWETHOnUniswap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositWETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInUSDC\",\"type\":\"uint256\"}],\"name\":\"exactueArbitrage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOutCurve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amoutOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amoutIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOutUniswapV3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amoutOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getCoinsFromCurvePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"sellWETHOnCurve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"sellWETHOnUniswap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage.sol\":\"arbitrage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"Arbitrage.sol\":{\"keccak256\":\"0x4221a11e2b5b2e022e391a8aebfab24e2ebb44fd1d17215d8e214eadd02ce83b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ccdcbb34d58929d31f1b5757626752aed951e7fe268971b23635f27c6412c37\",\"dweb:/ipfs/QmWRmNt6D2Bdd8mMVo1qRfobv5eJMXXCVVbtwwb4M2skU2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 38,
								"contract": "Arbitrage.sol:arbitrage",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 757,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 763,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 765,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 767,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 769,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol": {
				"IQuoter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received"
								}
							},
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
								"params": {
									"amountIn": "The desired input amount",
									"fee": "The fee of the token pool to consider for the pair",
									"sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
									"tokenIn": "The token being swapped in",
									"tokenOut": "The token being swapped out"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid"
								}
							},
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
								"params": {
									"amountOut": "The desired output amount",
									"fee": "The fee of the token pool to consider for the pair",
									"sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
									"tokenIn": "The token being swapped in",
									"tokenOut": "The token being swapped out"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`"
								}
							}
						},
						"title": "Quoter Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": "f7729d43",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": "30d07f21"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\"}},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountIn\":\"The desired input amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\"}},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountOut\":\"The desired output amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\"}}},\"title\":\"Quoter Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":\"IQuoter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							}
						},
						"notice": "Supports quoting the calculated amounts from exact input or exact output swaps",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 14,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1197:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1226:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 13,
									"src": "1157:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "215:1077:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:0"
				},
				"id": 0
			},
			"Arbitrage.sol": {
				"ast": {
					"absolutePath": "Arbitrage.sol",
					"exportedSymbols": {
						"Context": [
							1383
						],
						"ERC20": [
							1249
						],
						"ICryptoPool": [
							597
						],
						"IERC20": [
							1327
						],
						"IERC20Errors": [
							639
						],
						"IERC20Metadata": [
							1353
						],
						"IQuoter": [
							1440
						],
						"ISwapRouter": [
							1540
						],
						"IUniswapV3Factory": [
							546
						],
						"IUniswapV3Pool": [
							534
						],
						"IUniswapV3SwapCallback": [
							13
						],
						"IWETH": [
							513
						],
						"UniswapV3Router": [
							516
						],
						"adrDAI": [
							30
						],
						"adrSWAP_ROUTER_02": [
							24
						],
						"adrUSDC": [
							33
						],
						"adrWETH": [
							27
						],
						"adrcurvePool": [
							36
						],
						"arbitrage": [
							502
						],
						"routerV3": [
							21
						]
					},
					"id": 598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol",
							"file": "https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol",
							"id": 16,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 1541,
							"src": "101:104:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol",
							"file": "https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 1441,
							"src": "206:100:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 18,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 1250,
							"src": "307:108:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 21,
							"mutability": "constant",
							"name": "routerV3",
							"nameLocation": "504:8:1",
							"nodeType": "VariableDeclaration",
							"scope": 598,
							"src": "487:70:1",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 19,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "487:7:1",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
								"id": 20,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "515:42:1",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 24,
							"mutability": "constant",
							"name": "adrSWAP_ROUTER_02",
							"nameLocation": "576:17:1",
							"nodeType": "VariableDeclaration",
							"scope": 598,
							"src": "559:79:1",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 22,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "559:7:1",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307836386233343635383333666237324137306563444634383545306534433762443836363546633435",
								"id": 23,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "596:42:1",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 27,
							"mutability": "constant",
							"name": "adrWETH",
							"nameLocation": "657:7:1",
							"nodeType": "VariableDeclaration",
							"scope": 598,
							"src": "640:69:1",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 25,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "640:7:1",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
								"id": 26,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "667:42:1",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 30,
							"mutability": "constant",
							"name": "adrDAI",
							"nameLocation": "728:6:1",
							"nodeType": "VariableDeclaration",
							"scope": 598,
							"src": "711:68:1",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 28,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "711:7:1",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
								"id": 29,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "737:42:1",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 33,
							"mutability": "constant",
							"name": "adrUSDC",
							"nameLocation": "798:7:1",
							"nodeType": "VariableDeclaration",
							"scope": 598,
							"src": "781:69:1",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 31,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "781:7:1",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
								"id": 32,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "808:42:1",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 36,
							"mutability": "constant",
							"name": "adrcurvePool",
							"nameLocation": "869:12:1",
							"nodeType": "VariableDeclaration",
							"scope": 598,
							"src": "852:74:1",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 34,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "852:7:1",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307837463836426631373744643446333439346238343161333765383130413334644435366338323942",
								"id": 35,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "884:42:1",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B"
							},
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "arbitrage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 502,
							"linearizedBaseContracts": [
								502
							],
							"name": "arbitrage",
							"nameLocation": "937:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "960:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "952:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 37,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "952:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "985:35:1",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "995:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 42,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1003:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1007:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1003:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "995:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "995:18:1"
											}
										]
									},
									"id": 47,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:1"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:1"
									},
									"scope": 502,
									"src": "971:49:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1047:94:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 50,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1065:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1069:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1065:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 52,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1079:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1065:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e2e",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1086:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd",
																"typeString": "literal_string \"Only admin can call this function.\""
															},
															"value": "Only admin can call this function."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd",
																"typeString": "literal_string \"Only admin can call this function.\""
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1057:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1057:66:1"
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "1133:1:1"
											}
										]
									},
									"id": 59,
									"name": "onlyAdmin",
									"nameLocation": "1035:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1044:2:1"
									},
									"src": "1026:115:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1236:857:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 73,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1277:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			],
																			"id": 72,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1269:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 71,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1269:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 74,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 69,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "1254:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1259:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "1254:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1254:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 76,
																"name": "amountInUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1286:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1254:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555344432062616c616e63654f66206e6f7420656e6f756768",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1299:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121",
																"typeString": "literal_string \"USDC balanceOf not enough\""
															},
															"value": "USDC balanceOf not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121",
																"typeString": "literal_string \"USDC balanceOf not enough\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1246:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1246:81:1"
											},
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"mutability": "mutable",
														"name": "amountOutWETH",
														"nameLocation": "1345:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1337:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1337:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 83,
												"nodeType": "VariableDeclarationStatement",
												"src": "1337:21:1"
											},
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "amountOutUSDC",
														"nameLocation": "1376:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1368:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 84,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 86,
												"nodeType": "VariableDeclarationStatement",
												"src": "1368:21:1"
											},
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "ethAmountFromUniswap",
														"nameLocation": "1437:20:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1429:28:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1429:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 93,
												"initialValue": {
													"arguments": [
														{
															"id": 91,
															"name": "amountOutUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1487:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 89,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1460:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_arbitrage_$502",
																"typeString": "contract arbitrage"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1465:21:1",
														"memberName": "getAmountOutUniswapV3",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 371,
														"src": "1460:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1429:72:1"
											},
											{
												"assignments": [
													95
												],
												"declarations": [
													{
														"constant": false,
														"id": 95,
														"mutability": "mutable",
														"name": "ethAmountFromCrve",
														"nameLocation": "1519:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1511:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 94,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [
														{
															"id": 98,
															"name": "amountInUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1562:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 96,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1539:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_arbitrage_$502",
																"typeString": "contract arbitrage"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1544:17:1",
														"memberName": "getAmountOutCurve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "1539:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1511:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 101,
														"name": "ethAmountFromUniswap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "1616:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 102,
														"name": "ethAmountFromCrve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1639:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 133,
													"nodeType": "Block",
													"src": "1802:142:1",
													"statements": [
														{
															"expression": {
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 119,
																	"name": "amountOutWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "1816:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 122,
																			"name": "amountInUSDC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "1852:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 120,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1832:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_arbitrage_$502",
																				"typeString": "contract arbitrage"
																			}
																		},
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1837:14:1",
																		"memberName": "buyWETHOnCurve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 437,
																		"src": "1832:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) external returns (uint256)"
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1832:33:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1816:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "1816:49:1"
														},
														{
															"expression": {
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 126,
																	"name": "amountOutUSDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "1879:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 129,
																			"name": "amountOutWETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "1918:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1895:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_arbitrage_$502",
																				"typeString": "contract arbitrage"
																			}
																		},
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1900:17:1",
																		"memberName": "sellWETHOnUniswap",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 274,
																		"src": "1895:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) external returns (uint256)"
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1895:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1879:53:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 132,
															"nodeType": "ExpressionStatement",
															"src": "1879:53:1"
														}
													]
												},
												"id": 134,
												"nodeType": "IfStatement",
												"src": "1613:331:1",
												"trueBody": {
													"id": 118,
													"nodeType": "Block",
													"src": "1657:141:1",
													"statements": [
														{
															"expression": {
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 104,
																	"name": "amountOutWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "1671:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 107,
																			"name": "amountInUSDC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "1709:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 105,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1687:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_arbitrage_$502",
																				"typeString": "contract arbitrage"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1692:16:1",
																		"memberName": "buyWETHOnUniswap",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "1687:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) external returns (uint256)"
																		}
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1687:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1671:51:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 110,
															"nodeType": "ExpressionStatement",
															"src": "1671:51:1"
														},
														{
															"expression": {
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 111,
																	"name": "amountOutUSDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "1736:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 114,
																			"name": "amountOutWETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "1773:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 112,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1752:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_arbitrage_$502",
																				"typeString": "contract arbitrage"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1757:15:1",
																		"memberName": "sellWETHOnCurve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 484,
																		"src": "1752:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) external returns (uint256)"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1752:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1736:51:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 117,
															"nodeType": "ExpressionStatement",
															"src": "1736:51:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 136,
																"name": "amountOutUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1961:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 137,
																"name": "amountInUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1975:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1961:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172626974726167652070726f666974203c3d30",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1989:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc",
																"typeString": "literal_string \"Arbitrage profit <=0\""
															},
															"value": "Arbitrage profit <=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be46a25472786848fde2073ccc4d930d23a0c478c10fb47cba63a7e6d87a35dc",
																"typeString": "literal_string \"Arbitrage profit <=0\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1953:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1953:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1953:59:1"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "profit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "2049:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 143,
															"name": "amountOutUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2058:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 144,
															"name": "amountInUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2074:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2058:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2049:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2049:37:1"
											}
										]
									},
									"functionSelector": "926446db",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 64,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 63,
												"name": "onlyAdmin",
												"nameLocations": [
													"1202:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "1202:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1202:9:1"
										}
									],
									"name": "exactueArbitrage",
									"nameLocation": "1155:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "amountInUSDC",
												"nameLocation": "1180:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1172:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:22:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "profit",
												"nameLocation": "1228:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1220:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:16:1"
									},
									"scope": 502,
									"src": "1146:947:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": true,
									"id": 155,
									"mutability": "constant",
									"name": "WETH",
									"nameLocation": "2157:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "2134:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWETH_$513",
										"typeString": "contract IWETH"
									},
									"typeName": {
										"id": 151,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 150,
											"name": "IWETH",
											"nameLocations": [
												"2134:5:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 513,
											"src": "2134:5:1"
										},
										"referencedDeclaration": 513,
										"src": "2134:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH_$513",
											"typeString": "contract IWETH"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 153,
												"name": "adrWETH",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 27,
												"src": "2170:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 152,
											"name": "IWETH",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 513,
											"src": "2164:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IWETH_$513_$",
												"typeString": "type(contract IWETH)"
											}
										},
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2164:14:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH_$513",
											"typeString": "contract IWETH"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 161,
									"mutability": "constant",
									"name": "USDC",
									"nameLocation": "2207:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "2184:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWETH_$513",
										"typeString": "contract IWETH"
									},
									"typeName": {
										"id": 157,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 156,
											"name": "IWETH",
											"nameLocations": [
												"2184:5:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 513,
											"src": "2184:5:1"
										},
										"referencedDeclaration": 513,
										"src": "2184:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH_$513",
											"typeString": "contract IWETH"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 159,
												"name": "adrUSDC",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 33,
												"src": "2220:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 158,
											"name": "IWETH",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 513,
											"src": "2214:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IWETH_$513_$",
												"typeString": "type(contract IWETH)"
											}
										},
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2214:14:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH_$513",
											"typeString": "contract IWETH"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 167,
									"mutability": "constant",
									"name": "uniswapV3Router",
									"nameLocation": "2267:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "2234:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_UniswapV3Router_$516",
										"typeString": "contract UniswapV3Router"
									},
									"typeName": {
										"id": 163,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 162,
											"name": "UniswapV3Router",
											"nameLocations": [
												"2234:15:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 516,
											"src": "2234:15:1"
										},
										"referencedDeclaration": 516,
										"src": "2234:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UniswapV3Router_$516",
											"typeString": "contract UniswapV3Router"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 165,
												"name": "routerV3",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 21,
												"src": "2301:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 164,
											"name": "UniswapV3Router",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 516,
											"src": "2285:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_UniswapV3Router_$516_$",
												"typeString": "type(contract UniswapV3Router)"
											}
										},
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2285:25:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UniswapV3Router_$516",
											"typeString": "contract UniswapV3Router"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 173,
									"mutability": "constant",
									"name": "uniswapV3Factory",
									"nameLocation": "2351:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "2316:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3Factory_$546",
										"typeString": "contract IUniswapV3Factory"
									},
									"typeName": {
										"id": 169,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 168,
											"name": "IUniswapV3Factory",
											"nameLocations": [
												"2316:17:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 546,
											"src": "2316:17:1"
										},
										"referencedDeclaration": 546,
										"src": "2316:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Factory_$546",
											"typeString": "contract IUniswapV3Factory"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
												"id": 171,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2388:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 170,
											"name": "IUniswapV3Factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 546,
											"src": "2370:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$546_$",
												"typeString": "type(contract IUniswapV3Factory)"
											}
										},
										"id": 172,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2370:61:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Factory_$546",
											"typeString": "contract IUniswapV3Factory"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "2476:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 176,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "2486:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$513",
																	"typeString": "contract IWETH"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2491:7:1",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 507,
															"src": "2486:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 179,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2505:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2509:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2505:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2486:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2486:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "2486:31:1"
											}
										]
									},
									"functionSelector": "1de3df2c",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositWETH",
									"nameLocation": "2446:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2476:0:1"
									},
									"scope": 502,
									"src": "2437:88:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2710:537:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 204,
																	"name": "uniswapV3Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "2749:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV3Router_$516",
																		"typeString": "contract UniswapV3Router"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV3Router_$516",
																		"typeString": "contract UniswapV3Router"
																	}
																],
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2741:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 202,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2741:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2741:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 206,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2766:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 199,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "2724:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 198,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "2717:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1327_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1327",
																"typeString": "contract IERC20"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2733:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1314,
														"src": "2717:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2717:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2717:58:1"
											},
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2824:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "2782:48:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$1464_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 212,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 211,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"2782:11:1",
																	"2794:22:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1464,
																"src": "2782:34:1"
															},
															"referencedDeclaration": 1464,
															"src": "2782:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$1464_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"id": 216,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2938:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 219,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3005:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3009:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3005:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 221,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3043:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3049:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3043:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 223,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "3086:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3130:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3168:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 214,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "2841:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1540_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2853:22:1",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1464,
														"src": "2841:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$1464_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2894:7:1",
														"2928:8:1",
														"2964:3:1",
														"2994:9:1",
														"3033:8:1",
														"3076:8:1",
														"3112:16:1",
														"3149:17:1"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "2841:339:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1464_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2782:398:1"
											},
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 228,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3187:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 231,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "3232:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$1464_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$1464_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 229,
																"name": "uniswapV3Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "3199:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UniswapV3Router_$516",
																	"typeString": "contract UniswapV3Router"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3215:16:1",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1473,
															"src": "3199:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$1464_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3199:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3187:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "3187:52:1"
											}
										]
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingleHop",
									"nameLocation": "2544:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "2585:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2577:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "2610:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2602:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "poolFee",
												"nameLocation": "2635:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2628:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 190,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2628:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2660:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2652:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:107:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2700:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2692:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2691:19:1"
									},
									"scope": 502,
									"src": "2535:712:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "3341:186:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 250,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3382:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			],
																			"id": 249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3374:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 248,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3374:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3374:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 246,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "3359:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3364:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "3359:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 253,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "3391:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3359:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "574554482062616c73656e63654f46206e6f7420656e6f756768",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3400:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8",
																"typeString": "literal_string \"WETH balsenceOF not enough\""
															},
															"value": "WETH balsenceOF not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2328e75df0dcc43ff53a1e5a7cc1219647fb5094703dfe9e97304338d4ea6ab8",
																"typeString": "literal_string \"WETH balsenceOF not enough\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3351:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3351:78:1"
											},
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 258,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "3439:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 262,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "3483:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	],
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3475:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 260,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3475:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3475:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 266,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3498:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	],
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3490:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 264,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3490:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3490:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "33303030",
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3504:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3000_by_1",
																	"typeString": "int_const 3000"
																},
																"value": "3000"
															},
															{
																"id": 269,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "3511:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_3000_by_1",
																	"typeString": "int_const 3000"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 259,
															"name": "swapExactInputSingleHop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "3451:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint24,uint256) returns (uint256)"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3451:69:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3439:81:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "3439:81:1"
											}
										]
									},
									"functionSelector": "54258cc4",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 240,
												"name": "onlyAdmin",
												"nameLocations": [
													"3305:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "3305:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3305:9:1"
										}
									],
									"name": "sellWETHOnUniswap",
									"nameLocation": "3261:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3287:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3279:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:18:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3331:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3323:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:19:1"
									},
									"scope": 502,
									"src": "3252:275:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "3620:186:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 288,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3661:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			],
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3653:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 286,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3653:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3653:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 284,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3638:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3643:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "3638:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3638:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 291,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3670:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3638:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555344432062616c73656e63654f46206e6f7420656e6f756768",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3679:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4",
																"typeString": "literal_string \"USDC balsenceOF not enough\""
															},
															"value": "USDC balsenceOF not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a68e7d1f98b1885e846523d3d2f15f9d0dd2023db5bf513101960f127be729d4",
																"typeString": "literal_string \"USDC balsenceOF not enough\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3630:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3630:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "3630:78:1"
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "3718:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 300,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3762:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3754:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 298,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3754:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3754:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 304,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "3777:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	],
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3769:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 302,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3769:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3769:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "33303030",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3783:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3000_by_1",
																	"typeString": "int_const 3000"
																},
																"value": "3000"
															},
															{
																"id": 307,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3790:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_3000_by_1",
																	"typeString": "int_const 3000"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 297,
															"name": "swapExactInputSingleHop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "3730:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint24,uint256) returns (uint256)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3730:69:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3718:81:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "3718:81:1"
											}
										]
									},
									"functionSelector": "064a8a8a",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 278,
												"name": "onlyAdmin",
												"nameLocations": [
													"3584:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "3584:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3584:9:1"
										}
									],
									"name": "buyWETHOnUniswap",
									"nameLocation": "3541:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3566:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3558:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3557:18:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3610:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3602:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3601:19:1"
									},
									"scope": 502,
									"src": "3532:274:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "3902:326:1",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "poolAddress",
														"nameLocation": "3920:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "3912:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3912:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 325,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "3967:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWETH_$513",
																		"typeString": "contract IWETH"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IWETH_$513",
																		"typeString": "contract IWETH"
																	}
																],
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3959:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 323,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3959:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3959:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 329,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "3981:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWETH_$513",
																		"typeString": "contract IWETH"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IWETH_$513",
																		"typeString": "contract IWETH"
																	}
																],
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3973:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3973:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3973:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3987:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															}
														],
														"expression": {
															"id": 321,
															"name": "uniswapV3Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "3934:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Factory_$546",
																"typeString": "contract IUniswapV3Factory"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3951:7:1",
														"memberName": "getPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 545,
														"src": "3934:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
															"typeString": "function (address,address,uint24) view external returns (address)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3934:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3912:80:1"
											},
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4017:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "4002:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$534",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 335,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 334,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"4002:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 534,
																"src": "4002:14:1"
															},
															"referencedDeclaration": 534,
															"src": "4002:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$534",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 338,
															"name": "poolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "4039:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 337,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "4024:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$534_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$534",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4002:49:1"
											},
											{
												"assignments": [
													342,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "4070:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "4062:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 341,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "4062:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 343,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$534",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4097:5:1",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 533,
														"src": "4092:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4092:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4061:43:1"
											},
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4122:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "4114:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4114:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 351,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "4138:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4130:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4130:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4130:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"id": 355,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "4161:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4153:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 353,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4153:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4153:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4130:44:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4178:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "313932",
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4181:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_192_by_1",
																		"typeString": "int_const 192"
																	},
																	"value": "192"
																},
																"src": "4178:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																}
															}
														],
														"id": 361,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4177:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
															"typeString": "int_const 6277...(50 digits omitted)...2896"
														}
													},
													"src": "4130:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4114:71:1"
											},
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 364,
														"name": "amoutOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "4195:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 365,
															"name": "amoutIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4206:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 366,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "4216:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4206:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4195:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "4195:26:1"
											}
										]
									},
									"functionSelector": "bbceefe3",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOutUniswapV3",
									"nameLocation": "3823:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "amoutIn",
												"nameLocation": "3853:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "3845:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3844:17:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "amoutOut",
												"nameLocation": "3893:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "3885:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:18:1"
									},
									"scope": 502,
									"src": "3814:414:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": true,
									"id": 377,
									"mutability": "constant",
									"name": "curvePool",
									"nameLocation": "4277:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "4248:96:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICryptoPool_$597",
										"typeString": "contract ICryptoPool"
									},
									"typeName": {
										"id": 373,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 372,
											"name": "ICryptoPool",
											"nameLocations": [
												"4248:11:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 597,
											"src": "4248:11:1"
										},
										"referencedDeclaration": 597,
										"src": "4248:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICryptoPool_$597",
											"typeString": "contract ICryptoPool"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307837463836426631373744643446333439346238343161333765383130413334644435366338323942",
												"id": 375,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4301:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 374,
											"name": "ICryptoPool",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 597,
											"src": "4289:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_ICryptoPool_$597_$",
												"typeString": "type(contract ICryptoPool)"
											}
										},
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4289:55:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICryptoPool_$597",
											"typeString": "contract ICryptoPool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "4425:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 386,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "4458:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 384,
															"name": "curvePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4442:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICryptoPool_$597",
																"typeString": "contract ICryptoPool"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4452:5:1",
														"memberName": "coins",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "4442:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4442:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 383,
												"id": 388,
												"nodeType": "Return",
												"src": "4435:29:1"
											}
										]
									},
									"functionSelector": "64084ac0",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCoinsFromCurvePool",
									"nameLocation": "4359:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4389:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4381:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4380:15:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4417:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:9:1"
									},
									"scope": 502,
									"src": "4350:121:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "4564:218:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 404,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4605:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			],
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4597:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 402,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4597:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4597:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 400,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "4582:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4587:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "4582:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4582:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 407,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "4614:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4582:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555344432062616c616e63654f66206e6f7420656e6f756768",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4623:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121",
																"typeString": "literal_string \"USDC balanceOf not enough\""
															},
															"value": "USDC balanceOf not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ceaaae7350f7d47a173c1e8fd123cad1c06a6a7eac720334056ebb8d083f0121",
																"typeString": "literal_string \"USDC balanceOf not enough\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4574:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4574:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "4574:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 421,
																	"name": "curvePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "4699:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICryptoPool_$597",
																		"typeString": "contract ICryptoPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICryptoPool_$597",
																		"typeString": "contract ICryptoPool"
																	}
																],
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4691:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4691:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4691:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4710:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 415,
																			"name": "USDC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 161,
																			"src": "4676:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH_$513",
																				"typeString": "contract IWETH"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IWETH_$513",
																				"typeString": "contract IWETH"
																			}
																		],
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4668:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 413,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4668:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4668:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 412,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "4661:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1327_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4661:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1327",
																"typeString": "contract IERC20"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4683:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1314,
														"src": "4661:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4661:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "4661:58:1"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4729:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4760:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "32",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"id": 431,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "4764:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "31",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4773:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"id": 427,
																"name": "curvePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "4741:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICryptoPool_$597",
																	"typeString": "contract ICryptoPool"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4751:8:1",
															"memberName": "exchange",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 585,
															"src": "4741:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4741:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4729:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4729:46:1"
											}
										]
									},
									"functionSelector": "793c0845",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 395,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 394,
												"name": "onlyAdmin",
												"nameLocations": [
													"4527:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "4527:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4527:9:1"
										}
									],
									"name": "buyWETHOnCurve",
									"nameLocation": "4485:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4508:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "4500:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:18:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4554:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "4546:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4545:19:1"
									},
									"scope": 502,
									"src": "4476:306:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "4876:218:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 451,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4917:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_arbitrage_$502",
																					"typeString": "contract arbitrage"
																				}
																			],
																			"id": 450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4909:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 449,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4909:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4909:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 447,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "4894:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$513",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4899:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "4894:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4894:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 454,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "4926:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4894:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "574554482062616c616e63654f66206e6f7420656e6f756768",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4935:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e",
																"typeString": "literal_string \"WETH balanceOf not enough\""
															},
															"value": "WETH balanceOf not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d48eb254c88b51731b2f57fa9735ecb8572d25b261ad39626d952c5f858328e",
																"typeString": "literal_string \"WETH balanceOf not enough\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4886:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "4886:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 468,
																	"name": "curvePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5011:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICryptoPool_$597",
																		"typeString": "contract ICryptoPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICryptoPool_$597",
																		"typeString": "contract ICryptoPool"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5003:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5003:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5003:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5022:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 462,
																			"name": "WETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 155,
																			"src": "4988:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH_$513",
																				"typeString": "contract IWETH"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IWETH_$513",
																				"typeString": "contract IWETH"
																			}
																		],
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4980:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 460,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4980:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4980:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 459,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "4973:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1327_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4973:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1327",
																"typeString": "contract IERC20"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4995:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1314,
														"src": "4973:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4973:58:1"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 473,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "5041:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5072:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"hexValue": "30",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5074:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 478,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "5076:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "31",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5085:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"id": 474,
																"name": "curvePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5053:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICryptoPool_$597",
																	"typeString": "contract ICryptoPool"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5063:8:1",
															"memberName": "exchange",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 585,
															"src": "5053:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5053:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5041:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "5041:46:1"
											}
										]
									},
									"functionSelector": "cc9901aa",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 442,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 441,
												"name": "onlyAdmin",
												"nameLocations": [
													"4839:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "4839:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4839:9:1"
										}
									],
									"name": "sellWETHOnCurve",
									"nameLocation": "4796:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4820:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4812:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:18:1"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4866:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4858:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4857:19:1"
									},
									"scope": 502,
									"src": "4787:307:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "5184:59:1",
										"statements": [
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "amoutOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "5194:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "32",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5224:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"id": 496,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5226:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 492,
																"name": "curvePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5205:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICryptoPool_$597",
																	"typeString": "contract ICryptoPool"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5215:6:1",
															"memberName": "get_dy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 596,
															"src": "5205:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) view external returns (uint256)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5205:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5194:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "5194:41:1"
											}
										]
									},
									"functionSelector": "3eb61c1c",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOutCurve",
									"nameLocation": "5108:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5134:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5126:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:18:1"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amoutOut",
												"nameLocation": "5175:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5167:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5167:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5166:18:1"
									},
									"scope": 502,
									"src": "5099:144:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "928:4317:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 503,
										"name": "IERC20",
										"nameLocations": [
											"5266:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1327,
										"src": "5266:6:1"
									},
									"id": 504,
									"nodeType": "InheritanceSpecifier",
									"src": "5266:6:1"
								}
							],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 513,
							"linearizedBaseContracts": [
								513,
								1327
							],
							"name": "IWETH",
							"nameLocation": "5257:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "5287:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5294:2:1"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5313:0:1"
									},
									"scope": 513,
									"src": "5278:36:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "5328:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5345:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "5337:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5336:16:1"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5361:0:1"
									},
									"scope": 513,
									"src": "5319:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "5247:117:1",
							"usedErrors": [],
							"usedEvents": [
								1261,
								1270
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 514,
										"name": "ISwapRouter",
										"nameLocations": [
											"5394:11:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1540,
										"src": "5394:11:1"
									},
									"id": 515,
									"nodeType": "InheritanceSpecifier",
									"src": "5394:11:1"
								}
							],
							"canonicalName": "UniswapV3Router",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 516,
							"linearizedBaseContracts": [
								516,
								1540,
								13
							],
							"name": "UniswapV3Router",
							"nameLocation": "5375:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 598,
							"src": "5365:44:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "5420:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3850c7bd",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "5449:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5454:5:1"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "5491:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "5483:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 518,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "5511:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "5505:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 520,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5505:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "5524:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "5517:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 522,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5517:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "5549:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "5542:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 524,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5542:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "5580:26:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "5573:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 526,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5573:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "5614:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "5608:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 528,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5608:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "5632:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "5627:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5627:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5482:159:1"
									},
									"scope": 534,
									"src": "5440:202:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "5410:234:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "5655:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1698ee82",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "5687:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "5708:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "5700:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "5728:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "5720:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "5747:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "5740:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 539,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5740:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:60:1"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "5786:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "5778:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5778:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5777:14:1"
									},
									"scope": 546,
									"src": "5678:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "5645:149:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICryptoPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 597,
							"linearizedBaseContracts": [
								597
							],
							"name": "ICryptoPool",
							"nameLocation": "5805:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4903b0d1",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balances",
									"nameLocation": "5831:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5840:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:9:1"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5872:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5872:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5871:9:1"
									},
									"scope": 597,
									"src": "5822:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "68727653",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price_oracle",
									"nameLocation": "5896:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5909:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5908:9:1"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5941:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5940:9:1"
									},
									"scope": 597,
									"src": "5887:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "86fc88d3",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price_oracle",
									"nameLocation": "6338:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6350:2:1"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "6376:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6375:9:1"
									},
									"scope": 597,
									"src": "6329:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c6610657",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coins",
									"nameLocation": "6400:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6405:9:1"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6438:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6437:9:1"
									},
									"scope": 597,
									"src": "6391:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b41b908",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exchange",
									"nameLocation": "6461:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "6478:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6470:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "j",
												"nameLocation": "6489:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6481:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "dx",
												"nameLocation": "6500:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6492:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6492:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "min_dy",
												"nameLocation": "6512:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6504:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:50:1"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6537:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6536:9:1"
									},
									"scope": 597,
									"src": "6452:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "556d6e9f",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "get_dy",
									"nameLocation": "6560:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "6575:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6567:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6567:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "j",
												"nameLocation": "6586:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6578:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6597:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6589:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6566:38:1"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6626:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:9:1"
									},
									"scope": 597,
									"src": "6551:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "5795:843:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:6609:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							734
						],
						"IERC20Errors": [
							639
						],
						"IERC721Errors": [
							687
						]
					},
					"id": 735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 600,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 639,
							"linearizedBaseContracts": [
								639
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 609,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 614,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 619,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 628,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 633,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 638,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 735,
							"src": "280:1764:2",
							"usedErrors": [
								609,
								614,
								619,
								628,
								633,
								638
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 640,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 645,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 650,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 659,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 664,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 669,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 676,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 681,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 686,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 735,
							"src": "2190:2092:2",
							"usedErrors": [
								645,
								650,
								659,
								664,
								669,
								676,
								681,
								686
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 688,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 734,
							"linearizedBaseContracts": [
								734
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 699,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 704,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 709,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 716,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 721,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 726,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 733,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 735,
							"src": "4430:2107:2",
							"usedErrors": [
								699,
								704,
								709,
								716,
								721,
								726,
								733
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1383
						],
						"ERC20": [
							1249
						],
						"IERC20": [
							1327
						],
						"IERC20Errors": [
							639
						],
						"IERC20Metadata": [
							1353
						]
					},
					"id": 1250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1328,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 737,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1327,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1354,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 739,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1353,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 742,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1384,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 741,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1383,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 744,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 735,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 743,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 639,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 746,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1383,
										"src": "1133:7:3"
									},
									"id": 747,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 748,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1327,
										"src": "1142:6:3"
									},
									"id": 749,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 750,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1353,
										"src": "1150:14:3"
									},
									"id": 751,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 752,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 639,
										"src": "1166:12:3"
									},
									"id": 753,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 745,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1249,
							"linearizedBaseContracts": [
								1249,
								639,
								1353,
								1327,
								1383
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 757,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 756,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 754,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 755,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 763,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 762,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 758,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 761,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 759,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 760,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 765,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 764,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 767,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 766,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 769,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 768,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 777,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 778,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 781,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 782,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 786,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 1249,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 792,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 767,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 791,
												"id": 793,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 789,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 1249,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1346
									],
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 801,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 769,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 800,
												"id": 802,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 1249,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 809,
												"id": 811,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 807,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 1249,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1276
									],
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 819,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 818,
												"id": 820,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 1249,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1284
									],
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 830,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 832,
													"indexExpression": {
														"id": 831,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 829,
												"id": 833,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 1249,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 845,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 847,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 844,
												"id": 857,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 1249,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1304
									],
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 869,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 871,
														"indexExpression": {
															"id": 870,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 873,
													"indexExpression": {
														"id": 872,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 868,
												"id": 874,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 1249,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1314
									],
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 886,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 888,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 891,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1140,
															1200
														],
														"referencedDeclaration": 1140,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 885,
												"id": 898,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 883,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 1249,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1326
									],
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 912,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 914,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 918,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 917,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 911,
												"id": 930,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 1249,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 942,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 943,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 949,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 948,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 954,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 970,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 964,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 963,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 969,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 1249,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 990,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																1001
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1001,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1026,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1005,
															"initialValue": {
																"baseExpression": {
																	"id": 1002,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1004,
																"indexExpression": {
																	"id": 1003,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1006,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1016,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 1015,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1010,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 982,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1012,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1009,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 609,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1014,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1017,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1019,
																			"indexExpression": {
																				"id": 1018,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1020,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1021,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 995,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 996,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 998,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1028,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1029,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 1046,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1040,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1042,
																			"indexExpression": {
																				"id": 1041,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1045,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 1048,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 1038,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1034,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1035,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1037,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1050,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1049,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 1249,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1065,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1071,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1070,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1076,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1080,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 1249,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1104,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1103,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1109,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1113,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 1249,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1135,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1132,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1140,
															1200
														],
														"referencedDeclaration": 1200,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 1249,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1158,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1164,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1168,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1174,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1173,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1179,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1182,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1185,
															"indexExpression": {
																"id": 1183,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1186,
														"indexExpression": {
															"id": 1184,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1187,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 1190,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1149,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 1197,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1192,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1193,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1194,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1191,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1196,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 1249,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"arguments": [
														{
															"id": 1213,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1212,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1217,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1219,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1218,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1224,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1225,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1234,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 1233,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1228,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1229,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1230,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1207,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1227,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 628,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1232,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 1244,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1236,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1203,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1237,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1238,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1239,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1207,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1235,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1140,
																				1200
																			],
																			"referencedDeclaration": 1200,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1243,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 1249,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1250,
							"src": "1106:9788:3",
							"usedErrors": [
								609,
								614,
								619,
								628,
								633,
								638
							],
							"usedEvents": [
								1261,
								1270
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1327
						]
					},
					"id": 1328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1251,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1252,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1327,
							"linearizedBaseContracts": [
								1327
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1261,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1270,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1327,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1327,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1327,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1327,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1327,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1327,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1328,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1261,
								1270
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1327
						],
						"IERC20Metadata": [
							1353
						]
					},
					"id": 1354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1354,
							"sourceUnit": 1328,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1330,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1327,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1333,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1327,
										"src": "306:6:5"
									},
									"id": 1334,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1332,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1353,
							"linearizedBaseContracts": [
								1353,
								1327
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1353,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1353,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1349,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1353,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1354,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1261,
								1270
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1383
						]
					},
					"id": 1384,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1356,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1383,
							"linearizedBaseContracts": [
								1383
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1361,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1363,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1383,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1370,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1372,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1383,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1378,
												"id": 1380,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1383,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1384,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/IQuoter.sol",
					"exportedSymbols": {
						"IQuoter": [
							1440
						]
					},
					"id": 1441,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1385,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"id": 1386,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IQuoter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1387,
								"nodeType": "StructuredDocumentation",
								"src": "91:320:7",
								"text": "@title Quoter Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."
							},
							"fullyImplemented": false,
							"id": 1440,
							"linearizedBaseContracts": [
								1440
							],
							"name": "IQuoter",
							"nameLocation": "421:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "435:319:7",
										"text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received"
									},
									"functionSelector": "cdca1753",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nameLocation": "768:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "797:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "784:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "784:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "811:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "803:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:37:7"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "847:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "839:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:19:7"
									},
									"scope": 1440,
									"src": "759:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "864:491:7",
										"text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountIn The desired input amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received"
									},
									"functionSelector": "f7729d43",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nameLocation": "1369:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1433:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1425:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1458:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1451:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1403,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1451:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1479:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1471:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "1505:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1497:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1407,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:138:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1555:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1547:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:19:7"
									},
									"scope": 1440,
									"src": "1360:206:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "1572:355:7",
										"text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid"
									},
									"functionSelector": "2f80bb1d",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nameLocation": "1941:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1971:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1958:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1958:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1985:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1977:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1957:38:7"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2022:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "2014:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:18:7"
									},
									"scope": 1440,
									"src": "1932:100:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "2038:538:7",
										"text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountOut The desired output amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`"
									},
									"functionSelector": "30d07f21",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nameLocation": "2590:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "2630:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2622:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "2655:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2647:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2680:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2673:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1429,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2673:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2701:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2693:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "2728:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2720:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1433,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:139:7"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2778:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2770:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:18:7"
									},
									"scope": 1440,
									"src": "2581:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1441,
							"src": "411:2379:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2746:7"
				},
				"id": 7
			},
			"https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							1540
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 1541,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1442,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"id": 1443,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:8"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 1444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1541,
							"sourceUnit": 14,
							"src": "91:83:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1446,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "305:22:8"
									},
									"id": 1447,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:8"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:8",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 1540,
							"linearizedBaseContracts": [
								1540,
								13
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 1464,
									"members": [
										{
											"constant": false,
											"id": 1449,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "374:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1448,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1451,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "399:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1450,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1453,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "425:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1452,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1455,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "445:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1454,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1457,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "472:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1456,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1459,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "498:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1458,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1461,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "524:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1460,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1463,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "558:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1462,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:8",
									"nodeType": "StructDefinition",
									"scope": 1540,
									"src": "334:256:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:8",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 1473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "877:38:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$1464_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 1467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1466,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1464,
														"src": "877:22:8"
													},
													"referencedDeclaration": 1464,
													"src": "877:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1464_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:8"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "943:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:8"
									},
									"scope": 1540,
									"src": "851:111:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 1484,
									"members": [
										{
											"constant": false,
											"id": 1475,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 1484,
											"src": "1002:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1474,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1477,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1484,
											"src": "1022:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1476,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1479,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1484,
											"src": "1049:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1478,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1481,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1484,
											"src": "1075:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1480,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1483,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1484,
											"src": "1101:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1482,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:8",
									"nodeType": "StructDefinition",
									"scope": 1540,
									"src": "968:164:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:8",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1436:32:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$1484_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 1487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1486,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "1436:16:8"
													},
													"referencedDeclaration": 1484,
													"src": "1436:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$1484_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:8"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1496:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:8"
									},
									"scope": 1540,
									"src": "1416:99:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 1510,
									"members": [
										{
											"constant": false,
											"id": 1495,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1562:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1494,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1497,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1587:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1496,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1499,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1613:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1498,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1501,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1633:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1500,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1503,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1660:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1502,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1505,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1686:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1504,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1507,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1713:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1506,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1509,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1510,
											"src": "1746:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1508,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:8",
									"nodeType": "StructDefinition",
									"scope": 1540,
									"src": "1521:257:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:8",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "2066:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1510_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 1513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1512,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1510,
														"src": "2066:23:8"
													},
													"referencedDeclaration": 1510,
													"src": "2066:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1510_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:8"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "2133:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:8"
									},
									"scope": 1540,
									"src": "2039:112:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 1530,
									"members": [
										{
											"constant": false,
											"id": 1521,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 1530,
											"src": "2192:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1520,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1523,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1530,
											"src": "2212:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1522,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1525,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1530,
											"src": "2239:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1524,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1527,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1530,
											"src": "2265:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1526,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1529,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1530,
											"src": "2292:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1528,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:8",
									"nodeType": "StructDefinition",
									"scope": 1540,
									"src": "2157:165:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:8",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2638:33:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$1530_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 1533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1532,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1530,
														"src": "2638:17:8"
													},
													"referencedDeclaration": 1530,
													"src": "2638:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$1530_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:8"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2699:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:8"
									},
									"scope": 1540,
									"src": "2617:100:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1541,
							"src": "280:2439:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:8"
				},
				"id": 8
			}
		}
	}
}